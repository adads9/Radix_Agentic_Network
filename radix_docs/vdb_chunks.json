{"embedding_dim": 1536, "data": [{"__id__": "chunk-09d1e265b7eded6155f1fc562049ea28", "__created_at__": 1748191392.2717485, "content": "[Skip to main content](https://radix.equinor.com/markdown-page/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Markdown page example\nYou don't need React to write simple standalone pages.\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-monitoring/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Monitoring concepts\n\n\nOn this page\n# Monitoring concepts\n## Purpose[​](https://radix.equinor.com/docs/topic-monitoring/#purpose \"Direct link to Purpose\")\nThere are several benefits of doing monitoring:\n  * Make it easier to locate and fix problems in the event of an outage (reduced MTTR)\n  * Identify trends that could lead to an outage and fix them proactively (increased MTBF)\n  * Better understanding of the resource usage of an application, which makes it possible to scale resources more appropriately and avoid resource waste\n\n\n## Events vs metrics[​](https://radix.equinor.com/docs/topic-monitoring/#events-vs-metrics \"Direct link to Events vs metrics\")\nMonitoring data can be roughly split into two categories, events and metrics.\nEvents are typically logs of a single (discrete) event with some information embedded in the event. One HTTP request would be an event with information about the request latency, status, size, user-agent, etc. Visualizing events typically involves aggregating some specific portion of the event data and maybe also cross-reference it with other fields in the event for correlations.\nMetrics (also called time-series) is a measurement of a continuous state of something. Memory usage of a process is not something that happens, but is something that is, and can be measured at points in time. For metrics the challenge is to select the interval to measure things. Measure to often and it becomes costly to gather, process and store the data. Measure to seldom and risk not having enough data when trying to identify problems or bottlenecks.\n## Proactive/Reactive[​](https://radix.equinor.com/docs/topic-monitoring/#proactivereactive \"Direct link to Proactive/Reactive\")\nWhen talking about system stability we have two terms, MTBF and MTTR.\nMTBF is Mean time between failures. This is how often a system is non-operational (experiencing unexpected behavior/crashes/unstable). We can increase MTBF by being **pro-active**. We can set thresholds for our metrics so that we get notified when something is out of balance, but before the usability of the system is affected. For example memory usage is increasing much faster than usual. Or memory usage is above X%.\nMTTR is Mean time to recovery. This is how much time it takes to get a non-operational system back to normal again. This is the", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-59b0fb011cd3144bf899e9b90a252918", "__created_at__": 1748191392.2717485, "content": "experiencing unexpected behavior/crashes/unstable). We can increase MTBF by being **pro-active**. We can set thresholds for our metrics so that we get notified when something is out of balance, but before the usability of the system is affected. For example memory usage is increasing much faster than usual. Or memory usage is above X%.\nMTTR is Mean time to recovery. This is how much time it takes to get a non-operational system back to normal again. This is the reactive phase. We can decrease MTTR by having a good understanding of how the system is behaving when it works, so that we can easier spot differences in behavior when it's not working like it should. If we have detailed metrics going back in time we can correlate and see for example that CPU usage spiked to 100% just before the service started behaving weird.\n## Keywords/Glossary[​](https://radix.equinor.com/docs/topic-monitoring/#keywordsglossary \"Direct link to Keywords/Glossary\")\n  * TSDB - Time-series database - A special type of database that is designed to ingest large amounts of metrics and make different kinds of queries, aggregated, histograms, etc.\n\n\n## Methodologies[​](https://radix.equinor.com/docs/topic-monitoring/#methodologies \"Direct link to Methodologies\")\n### USE Method[​](https://radix.equinor.com/docs/topic-monitoring/#use-method \"Direct link to USE Method\")\nBrendan Gregg proposed in 2012 a [methodology for analyzing the performance of any system](http://www.brendangregg.com/usemethod.html).\nUSE means:\n  * Utilization - the average time that the resource was busy servicing work\n  * Saturation - the degree to which the resource has extra work which it can't service, often queued\n  * Errors - the count of error events\n\n\nUtilization is usually the easiest to measure, we can easily measure CPU, memory, network and storage/IO utilization in %. Saturation in disk/IO can for example be to measure CPU IOWAIT or linux load averages. Swapping can be a sign of saturation in memory. Dropped packets can be a sign of saturation on the network interface. Errors are usually not available as a metric, but shows up in logs as unstructured text.\n### RED Method[​](https://radix.equinor.com/docs/topic-monitoring/#red-method \"Direct link to RED Method\")\nBased on principles outlined in the [Golden Signals from Google](https://landing.google.com/sre/book/chapters/monitoring-distributed-systems.html) comes the RED method.\nRED focuses on the request/transactions/operations that a system/component executes.\nRED means:\n  * Rate - Requests per second\n  * Errors - Failed requests per second\n  * Duration - The latency for a request to be completed\n\n\nSince RED focuses on a request it's either calculated from a log of events/requests or aggregated into min/average/max before being saved as a continous metric. This makes it more challenging to set up the monitoring infrastructure for, but in a HTTP API based system it's easy to measure since the rate, latency and status of a HTTP request is universal and can be measured at several different places.\n## Conclusion[​](https://radix.equinor.com/docs/topic-monitoring/#conclusion \"Direct link to Conclusion\")\nUSE focuses on causes and are typically internal and we need to be inside the system to measure and observe these metrics.\nRED focuses on symptoms and can typically be observed externally from the system itself.\n[PreviousVulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)[NextDomain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Purpose](https://radix.equinor.com/docs/topic-monitoring/#purpose)\n  * [Events vs metrics](https://radix.equinor.com/docs/topic-monitoring/#events-vs-metrics)\n  * [Proactive/Reactive](https://radix.equinor.com/docs/topic-monitoring/#proactivereactive)\n  * [Keywords/Glossary](https://radix.equinor.com/docs/topic-monitoring/#keywordsglossary)\n  * [Methodologies](https://radix.equinor.com/docs/topic-monitoring/#methodologies)\n    * [USE Method](https://radix.equinor.com/docs/topic-monitoring/#use-method)\n    * [RED Method](https://radix.equinor.com/docs/topic-monitoring/#red-method)\n  * [Conclusion](https://radix.equinor.com/docs/topic-monitoring/#conclusion)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-private-link/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b4ea21109aea569d92e6041df575bcd4", "__created_at__": 1748191392.2717485, "content": "Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Private Link\n\n\n# Overview\nWhen running an application in Radix and there is a need to access external Azure services through a private IP address, Private Link Services can be used to connect the Radix application to the resource, using a Private Endpoint. A Private Endpoint works by connecting a target resource to a Virtual Network. Data passing through a Private Endpoint travels the Microsoft backbone network, not exposed to the internet.\nMore information can be found in the [Azure documentation](https://learn.microsoft.com/en-us/azure/private-link/private-link-service-overview)\nOmnia Classic governance\nPrivate links have other [policies](https://docs.omnia.equinor.com/governance/security/components/v4/vnet-private-link/#introduction) in Omnia Classic subscriptions, which makes it impossible to establish services like Private Endpoints with Radix. More information in [Omnia Docs](https://docs.omnia.equinor.com/products/classic/PrivateEndpoints-documentation-for-AppTeams/)\nTips\nAn alternative can be to host an API in Omnia Classic, publish this in [APIM](https://api.equinor.com/). Then this API can be used by an Radix application.\n![Illustration](https://radix.equinor.com/assets/images/private-link-service-workflow-expanded-411899925cab6badc420009a48ead67a.png)\nIn order to establish a Private Endpoint from Radix to your external resource, follow instructions in the [Private Link Guide](https://radix.equinor.com/guides/private-link/).\nThe following information is needed:\n  * Subscription owner\n  * Subscription ID\n  * Resource ID (found in the properties of a resource in the Azure portal)\n\n\nSample\nResource ID example: `/subscriptions/A01234567-bc89-123d-ef45-678g9hi12jkl/resourceGroups/Some_RG_Prod/providers/Microsoft.Sql/servers/sql-some-prod`\nThis will show up as a pending request in the destination subscription. When the request is approved, a Private Endpoint will be created in your subscription, and a Private Link between the two endpoints will be established.\nYou can continue using the same FQDN to access the remote resource after the Private Endpoint has been created.\nwarning\nIf you create a Private Endpoint on a resource in Omnia Standalone to Omnia Radix, _and_ that resource type has a Private Endpoint DNS zone which is forwarded to Omnia Classic, then that resource will not be resolvable from on-premise. This applies e.g. to Blob Storage for Azure Storage Accounts.\n[PreviousDomain names](https://radix.equinor.com/docs/topic-domain-names/)[NextRadix cost](https://radix.equinor.com/docs/topic-cost/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-code-editor-integration/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f8935292ea58614e24da9aafbacd1312", "__created_at__": 1748191392.2717485, "content": "Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Code Editor Integrations\n\n\nOn this page\n# Overview\nThe [OpenAPI 3.0 Schema](https://swagger.io/docs/specification/data-models/) for [radixconfig.yaml](https://radix.equinor.com/radix-config/) is available at <https://raw.githubusercontent.com/equinor/radix-operator/release/json-schema/radixapplication.json>. This schema is an [extended subset](https://swagger.io/docs/specification/data-models/keywords/) of the [JSON Schema Specification](https://json-schema.org/).\nThe schema can be used in code editors to provide auto completion and schema validation when editing a `radixconfig.yaml` file.\n## Visual Studio Code[​](https://radix.equinor.com/docs/topic-code-editor-integration/#visual-studio-code \"Direct link to Visual Studio Code\")\nEnsure that the [YAML](https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml) extension is installed in VS Code.\nCreate an association between `radixconfig.yaml` and the JSON Schema by using one of the methods described below.\n  * **Inline schema association** Add the following line to the top of the `radixconfig.yaml` file:\n```\n# yaml-language-server: $schema=https://raw.githubusercontent.com/equinor/radix-operator/release/json-schema/radixapplication.json\n```\n\n  * **Using yaml.schemas settings**\n    1. Open **Extension Settings** for the YAML extension. ![YAML extension settings](https://radix.equinor.com/assets/images/vscode-yaml-settings-3d5850e32a250896e909e535c612db81.png)\n    2. Scroll down to **Yaml: Schemas** and click **Edit in settings.json** ![Open YAML schema settings](https://radix.equinor.com/docs/topic-code-editor-integration/)\n    3. Add `\"https://raw.githubusercontent.com/equinor/radix-operator/release/json-schema/radixapplication.json\": \"radixconfig.yaml\"` to the **yaml.schemas** section. ![Edit YAML schema settings](https://radix.equinor.com/docs/topic-code-editor-integration/)\n\n\nRead more about schema associations [here](https://github.com/redhat-developer/yaml-language-server#more-examples-of-schema-association).\n## Jetbrains IDEs[​](https://radix.equinor.com/docs/topic-code-editor-integration/#jetbrains-ides \"Direct link to Jetbrains IDEs\")\nJetbrains IDEs have built-in support for JSON schemas.\n  1. Open the **Settings** dialog (`Ctrl+Alt+S`) and go **Languages & Frameworks** > **Schemas and DTDs** > **JSON Schema Mappings**.\n  2. Click `+` on the toolbar.\n  3. Insert `https://raw.githubusercontent.com/equinor/radix-operator/release/json-schema/radixapplication.json` in **Schema file or URL** and select `JSON Schema version 7` in **Schema version**. Specify a name of the schema in the **Name** field.\n  4. Click `+` in the mappings section and select **Add file** from the drop down list. Insert `radixconfig.yaml` in the **File** field.\n  5. Click `OK` or `Apply` to save changes.\n\n\n![Jetbrains IDEs](https://radix.equinor.com/assets/images/jetbrains-5c76c36f4de9de4deba4f5ef3cfa5381.png)\n[PreviousRadix CLI](https://radix.equinor.com/docs/topic-radix-cli/)[NextIntegrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Visual Studio Code](https://", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-368fdd6a527516fb6083ad08280a00aa", "__created_at__": 1748191392.2717485, "content": "IDEs](https://radix.equinor.com/assets/images/jetbrains-5c76c36f4de9de4deba4f5ef3cfa5381.png)\n[PreviousRadix CLI](https://radix.equinor.com/docs/topic-radix-cli/)[NextIntegrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Visual Studio Code](https://radix.equinor.com/docs/topic-code-editor-integration/#visual-studio-code)\n  * [Jetbrains IDEs](https://radix.equinor.com/docs/topic-code-editor-integration/#jetbrains-ides)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/community/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Community](https://radix.equinor.com/community/)\n\n\n  * [](https://radix.equinor.com/)\n  * Community\n\n\nOn this page\n# Community\nRadix aims to be _the_ platform to build and deploy code within Equinor. It can only be that if it helps Equinor developers — that's you — succeed.\nOf course, Radix is developed and maintained by Equinor developers as well. That means we want to work together to build the best platform we can. If you have problems or suggestions, we want to hear from you! It helps.\nHello\nWe are based in Forus Øst - A2 in Stavanger. If you see us on the corridor, say hello!\n![radix team](https://radix.equinor.com/assets/images/Toppbilde-d07ba069f437d6f2cadfa5ec9adf6cbd.jpg)\n## On Slack[​](https://radix.equinor.com/community/#on-slack \"Direct link to On Slack\")\nIf you'd like to discuss the platform, features or improvements, head on to the main [Omnia Radix channel](https://equinor.slack.com/messages/C8U7XGGAJ). Stuck? App not building? Don't understand the docs? the place to ask is in [the support channel](https://equinor.slack.com/messages/CBKM6N2JY).\nLet us together build the Radix community!..\n## On GitHub[​](https://radix.equinor.com/community/#on-github \"Direct link to On GitHub\")\nIf you think you found a bug, or you have a concrete proposal, [log an issue](https://github.com/equinor/radix/issues) on GitHub. We have multiple repositories, but all issues are tracked in **radix repo**.\n## eMail[​](https://radix.equinor.com/community/#email \"Direct link to eMail\")\nWe also monitor a common mailbox, so if this is an option for you to reach out, use this email address: radix@StatoilSRM.onmicrosoft.com\n## Release register[​](https://radix.equinor.com/community/#release-register \"Direct link to Release register\")\nNew features are publicly announced in the [Omnia Radix Slack channel](https://equinor.slack.com/messages/C8U7XGGAJ), and added to the release register page.\nCheck out what's new in the [Release register](https://radix.equinor.com/docs/topic-releases/)\n## The Radix team[​](https://radix.equinor.com/community/#the-radix-team \"Direct link to The Radix team\")\n![Atle Wilson](https://radix.equinor.com/images/radix-atle.jpg)\n### Atle Wilson\nProduct Owner\n![Richard Hagen](https://radix.equinor.com/images/radix-richard.jpg)\n### Richard Hagen\nDeveloper\n![Svein-Petter Johnsen](https://radix.equinor.com/images/radix-svein-petter-johnsen.jpg)\n### Svein-Petter Johnsen\nInfrastructure\n![Nils Gustav Stråbø](https://radix.equinor.com/images/radix-nils-gustav-strabo.jpg)\n### Nils Gustav Stråbø\nDeveloper\n![Elsa Mäyrä Irgens](https://radix.equinor.com/images/radix-elsa-mayra-irgens.jpg)\n### Elsa Mäyrä Irgens\nTeam Leader\n![Sergey Smolnikov](https://radix.equinor.com/images/radix-sergey-smolnikov.jpg)\n### Sergey Smolnikov\nDeveloper\n  * [On Slack](https://radix.equinor.com/community/#on-slack)\n  * [On GitHub](https://radix.equinor.com/community/#on-github)\n  * [eMail](https://radix.equinor.com/community/#email)\n  * [Release register](https://radix.equinor.com/community/#release-register)\n  * [The Radix team](https://radix.equinor.com/community/#the-rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b88541fab8dc1f0ba78d3ae20382e5d7", "__created_at__": 1748191392.2717485, "content": "* [On Slack](https://radix.equinor.com/community/#on-slack)\n  * [On GitHub](https://radix.equinor.com/community/#on-github)\n  * [eMail](https://radix.equinor.com/community/#email)\n  * [Release register](https://radix.equinor.com/community/#release-register)\n  * [The Radix team](https://radix.equinor.com/community/#the-radix-team)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-cost/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Radix cost\n\n\nOn this page\n# Radix cost allocation\nAs part of hosting an application on Radix, each application will take it's share of the cloud cost assosiated with the Radix Platform cluster. The cost will be allocated monthy following the routines issued by Equinor.\n## How is the cost calculated[​](https://radix.equinor.com/docs/topic-cost/#how-is-the-cost-calculated \"Direct link to How is the cost calculated\")\nCost calculation is based on the total time the replicas(containers) belonging to an application has been running, and how much CPU and memory the replicas requested. The cost is split between applications by dividing each application's CPU and memory time by the total CPU and memory time for all applications. Cluster cost is split 50/50 between CPU and memory time.\n## Example[​](https://radix.equinor.com/docs/topic-cost/#example \"Direct link to Example\")\n![Cost Calculation Example](https://radix.equinor.com/assets/images/radix-cost-f91f82117e2508f35a415d347b1b7f8b.png)\nAssuming a period of 30 days where total cluster cost is 100.000NOK. Two applications, `Application 1` and `Application 2`, are running in the cluster.\n`Application 1` has two components, `frontend` and `backend`. `horizontalScaling` is configured for `backend` to automatically start new replicas during periods of high CPU utilization. `Application 2` has two components, `frontend` and `backend`, and a job named `compute`.\n### CPU and memory time by Application 1[​](https://radix.equinor.com/docs/topic-cost/#cpu-and-memory-time-by-application-1 \"Direct link to CPU and memory time by Application 1\")\n| CPU| CPU total| Memory| Memory total  \n---|---|---|---|---  \nfrontend-replica1| 100m × 720hrs| 72.000| 100MB × 720hrs| 72.000  \nbackend-replica1| 200m × 720hrs| 144.000| 400MB × 720hrs| 288.000  \nbackend-replica2| 200m × 300hrs| 60.000| 400MB × 300hrs| 120.000  \nbackend-replica3| 200m × 90hrs| 18.000| 400MB × 90hrs| 36.000  \n| Calculation| Total  \n---|---|---  \nCPU| 72.000 + 144.000 + 60.000 + 18.000| 294.", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-9fc7d1d064e0299ab4f1524bd45c1ae2", "__created_at__": 1748191392.2717485, "content": "backend-replica2| 200m × 300hrs| 60.000| 400MB × 300hrs| 120.000  \nbackend-replica3| 200m × 90hrs| 18.000| 400MB × 90hrs| 36.000  \n| Calculation| Total  \n---|---|---  \nCPU| 72.000 + 144.000 + 60.000 + 18.000| 294.000  \nMemory| 72.000 + 288.000 + 120.000 + 36.000| 516.000  \n### CPU and memory time by Application 2[​](https://radix.equinor.com/docs/topic-cost/#cpu-and-memory-time-by-application-2 \"Direct link to CPU and memory time by Application 2\")\n| CPU| CPU total| Memory| Memory total  \n---|---|---|---|---  \nfrontend-replica1| 100m × 720hrs| 72.000| 200MB × 720hrs| 144.000  \nbackend-replica1| 50m × 720hrs| 36.000| 250MB × 720hrs| 180.000  \njob-1| 250m × 15hrs| 3.750| 750MB × 15hrs| 11.250  \njob-2| 250m × 15hrs| 3.750| 750MB × 15hrs| 11.250  \njob-3| 250m × 30hrs| 7.500| 750MB × 30hrs| 22.500  \n| Calculation| Total  \n---|---|---  \nCPU| 72.000 + 36.000 + 3.750 + 3.750 + 7.500| 123.000  \nMemory| 144.000 + 180.000 + 11.250 + 11.250 + 22.500| 369.000  \n### Calculation[​](https://radix.equinor.com/docs/topic-cost/#calculation \"Direct link to Calculation\")\n| Calculation| Total  \n---|---|---  \nCluster CPU time| 294.000 + 123.000| 417.000  \nCluster memory time| 516.000 + 369.000| 885.000  \nCluster CPU cost| 100.000 ÷ 2| 50.000  \n| Calculation| Total  \n---|---|---  \nApplication1 CPU cost| 294.000 ÷ 417.000 × 100.000NOK × 0.5| 35.252NOK  \nApplication1 memory cost| 516.000 ÷ 885.000 × 100.000NOK × 0.5| 29.152NOK  \nApplication1 total cost| | **64.405NOK**  \n| Calculation| Total  \n---|---|---  \nApplication2 CPU cost| 123.000 ÷ 417.000 × 100.000NOK × 0.5| 14.748NOK  \nApplication2 memory cost| 369.000 ÷ 885.000 × 100.000NOK × 0.5| 20.847NOK  \nApplication2 total cost| | **35.595NOK**  \n[ PreviousPrivate Link](https://radix.equinor.com/docs/topic-private-link/)[NextRolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [How is the cost calculated](https://radix.equinor.com/docs/topic-cost/#how-is-the-cost-calculated)\n  * [Example](https://radix.equinor.com/docs/topic-cost/#example)\n    * [CPU and memory time by Application 1](https://radix.equinor.com/docs/topic-cost/#cpu-and-memory-time-by-application-1)\n    * [CPU and memory time by Application 2](https://radix.equinor.com/docs/topic-cost/#cpu-and-memory-time-by-application-2)\n    * [Calculation](https://radix.equinor.com/docs/topic-cost/#calculation)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-dynatrace-int/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1845d52b5a240e70c9eaf13f96706a11", "__created_at__": 1748191392.2717485, "content": "quinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Integrate Dynatrace in a Radix app\n\n\nOn this page\n# Integrate Dynatrace in a Radix app\nAdding Dynatrace as your monitoring tool can be done by adding the Dynatrace agent to your build. See the sample below.\nThis method adds DynaTrace OneAgent to the container, and uses RadixConfig to manipulate environment.\nTLDR\n  * Always use pre-production image in dockerfile.\n  * Add `spa-equinor.kanari.com` to `privateImageHubs` in your `radixconfig.yaml` file.\n  * Override `DT_TENANT`, `DT_TENANTTOKEN` and `DT_CONNECTION_POINT` with Radix Secrets.\n  * Push updated `Dockerfile` and `radixconfig.yaml` file so Radix is aware of the changes, \n    * update application configuration with private build image secret\n    * update each environments secrets with dynatrace config\n  * Join the Slack channel _**#application-performance-management**_.\n\n\n### Dockerfile sample[​](https://radix.equinor.com/docs/topic-dynatrace-int/#dockerfile-sample \"Direct link to Dockerfile sample\")\n```\n# Always use Dynatrace pre-production imageFROM spa-equinor.kanari.com/e/eddaec99-38b1-4a9c-9f4c-9148921efa10/linux/oneagent-codemodules:all AS DYNATRACEFROM mcr.microsoft.com/dotnet/sdk:6.0 AS BUILDWORKDIR /sourceCOPY . .WORKDIR /source/apiRUN dotnet publish -c release -o /appFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS PRODUCTION #Dynatrace configCOPY--from=DYNATRACE / /ENV DT_TENANT eddaec99-38b1-4a9c-9f4c-9148921efa10 # Defaults to PRE-PRODUCTION, can be changed in RadixConfig for ProdENV LD_PRELOAD /opt/dynatrace/oneagent/agent/lib64/liboneagentproc.soENV DT_TAGS DT_MZ=<TeamMzName> # Set yor app name here#Application configWORKDIR /appRUN mkdir /logs && chown -R 1001:1001 /logsCOPY--from=BUILD /app ./# Runtime user change to non-root for added securityEXPOSE 5000USER 1001ENTRYPOINT [\"dotnet\", \"api.dll\", \"--urls=http://0.0.0.0:5000\"]\n```\n\nTo build this dockerfile you must use a private build image secret Then Update your `radixconfig.yaml` with these arguments:\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: edc2023-radix-wi-rihagspec:environments:-name: dev-name: prodprivateImageHubs:spa-equinor.kanari.com:# always use Dynatrace pre-production imageusername: eddaec99-38b1-4a9c-9f4c-9148921efa10build:# usBuildKit is required to use private image hubs when buildinguseBuildKit:truecomponents:-name: web# Get secrets from Dynatrace json api:secrets:- DT_TENANT- DT_TENANTTOKEN # tenantToken from response- DT_CONNECTION_POINT # formattedCommunicationEndpoints from response\n```\n\nAfter changing your `radixconfig.yaml` file and pushing the changes, you must open the application's configuration page in [Web Console](https://console.radix.equinor.com) and paste in the PaaS-Token in **Private image hubs** under **App Secrets**. You must then update environment secrets in each component with corresponding Dynatrace configuration: `DT_TENANT`, `DT_TENANTTOKEN` (`tenantToken`) and `DT_CONNECTION_POINT` (`formattedCommunicationEndpoints`).\n```\nGET https://spa-equinor.kanari.com/e/<DT_TENANT>/api/v1/deployment/installer/agent/connectioninfoaccept: application/jsonAuthorization: Api-Token <Paas Token>\n```\n\n  * Read about Dynatrace Container monitoring integration [here](", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-06852cb6d7c75dfd1b783e52ef1d8414", "__created_at__": 1748191392.2717485, "content": "in each component with corresponding Dynatrace configuration: `DT_TENANT`, `DT_TENANTTOKEN` (`tenantToken`) and `DT_CONNECTION_POINT` (`formattedCommunicationEndpoints`).\n```\nGET https://spa-equinor.kanari.com/e/<DT_TENANT>/api/v1/deployment/installer/agent/connectioninfoaccept: application/jsonAuthorization: Api-Token <Paas Token>\n```\n\n  * Read about Dynatrace Container monitoring integration [here](https://statoilsrm.sharepoint.com/sites/applicationperformancemanagement/SitePages/Container-monitoring---attaching-to-a-management-zone.aspx)\n  * Read about Dynatrace secrets and configuration [here](https://statoilsrm.sharepoint.com/sites/applicationperformancemanagement/SitePages/Install-on-Linux.aspx)\n\n\n[PreviousCode Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)[NextRedis cache](https://radix.equinor.com/docs/topic-redis/)\n  * [Dockerfile sample](https://radix.equinor.com/docs/topic-dynatrace-int/#dockerfile-sample)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Docs\n\n\nOn this page\n# Docs\n## The basics[​](https://radix.equinor.com/docs/#the-basics \"Direct link to The basics\")\n  * Understanding [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * The application [runtime environment](https://radix.equinor.com/docs/topic-runtime-env)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names) for your components\n\n\n## Best practice[​](https://radix.equinor.com/docs/#best-practice \"Direct link to Best practice\")\n  * How use [Docker and containers](https://radix.equinor.com/docs/topic-docker/) in Radix\n  * Ensure that your apps are [secure](https://radix.equinor.com/docs/topic-security/) in the platform\n  * Choose the most appropriate [monitoring strategy](https://radix.equinor.com/docs/topic-monitoring/)\n\n\n## About the platform[​](https://radix.equinor.com/docs/#about-the-platform \"Direct link to About the platform\")\n  * Service, support and availability [Uptime](https://radix.equinor.com/docs/topic-uptime/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/) in Radix\n  * [Cost](https://radix.equinor.com/docs/topic-cost/) calculation principles\n\n\n## Reference[​](https://radix.equinor.com/docs/#reference \"Direct link to Reference\")\n  * [The `radixconfig.yaml` file](https://radix.equinor.com/radix-config/)\n  * [Code editor integration](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n\n\n[NextWhat's new](https://radix.equinor.com/docs/topic-releases/)\n  * [The basics](https://radix.equinor.com/docs/#the-basics)\n  * [", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2ca35c22ef442800347a4ca6c6dddb40", "__created_at__": 1748191392.2717485, "content": ".yaml` file](https://radix.equinor.com/radix-config/)\n  * [Code editor integration](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n\n\n[NextWhat's new](https://radix.equinor.com/docs/topic-releases/)\n  * [The basics](https://radix.equinor.com/docs/#the-basics)\n  * [Best practice](https://radix.equinor.com/docs/#best-practice)\n  * [About the platform](https://radix.equinor.com/docs/#about-the-platform)\n  * [Reference](https://radix.equinor.com/docs/#reference)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Welcome to Radix\n## Radix makes your app develop\n### Build\nCommit code to trigger a build ⚙️, run tests ✅ and check dependencies 🌲\n### Deploy\nPlace your app in the cloud ☁️ in multiple environments 🌏 and let it grow 🌱\n### Monitor\nTrack usage to find problems 💣 and get insight💡\nYou provide your code and a Dockerfile to build it, and Radix will take it from there.\n[Get started](https://radix.equinor.com/start/)[Read the docs](https://radix.equinor.com/docs/)[Our community](https://radix.equinor.com/community/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-logs/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Logs\n\n\nOn this page\n# Logs\nApplication logs can help you understand what is happening inside your application. The logs are particularly useful for debugging problems and monitoring activity.\nLog entries written to the `stdout` and `stderr` streams are stored for 30 days and can be accessed through Radix Web Console or Radix CLI. After 30 days they are moved to cold storage for an additional 60 days.\n## What is Logged[​](https://radix.equinor.com/docs/topic-logs/#what-is-logged \"Direct link to What is Logged\")\n  * Application logs (everything written to `stdout` and `stderr`)\n  * Request logs from our Ingress Controller, Nginx, that all public traffic flow trough. Not accessable from CLI or Console.\n  * Management logs of all changes made to an application in Radix, like deployments, scaling, etc. Not accessable from CLI or Console.\n\n\n## Radix Web Console[​](https://radix.equin", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-83304014c94678e6e30b7a0c8c3b31e7", "__created_at__": 1748191392.2717485, "content": "what-is-logged \"Direct link to What is Logged\")\n  * Application logs (everything written to `stdout` and `stderr`)\n  * Request logs from our Ingress Controller, Nginx, that all public traffic flow trough. Not accessable from CLI or Console.\n  * Management logs of all changes made to an application in Radix, like deployments, scaling, etc. Not accessable from CLI or Console.\n\n\n## Radix Web Console[​](https://radix.equinor.com/docs/topic-logs/#radix-web-console \"Direct link to Radix Web Console\")\nRadix Web Console provides access to logs for `components`, `jobs` and `pipeline jobs`.\n### Components[​](https://radix.equinor.com/docs/topic-logs/#components \"Direct link to Components\")\nTo view the current log for running replicas, click on a replica `name` in the `Replicas` list. The log page shows the last 1000 entries from the replica's container. To download the entire log, click the `Download` button.\n![Replica list](https://radix.equinor.com/assets/images/component-active-replicas-3069015c3f4ffafd6620c0c6e3ec771e.png) ![Replica container log](https://radix.equinor.com/assets/images/component-replica-log-26fab93c3edfb789236c443c518a6ee9.png)\nWhen a pipeline job succeeds and deploy a new version of your application, or when you restart a component, Radix creates new replicas with new names. The old replicas are removed once the new replicas are running. If the container for an active replica crashes or is killed, Kubernetes will start a new container, and the previous container's log will no longer be available in the replica's log page.\n`Replica Logs` lists all replicas and containers, both active and historical, for the component from the last 30 days. Replicas and containers in this list is sorted descending by their creation date, and containers are grouped within their respective replicas.\nYou can download the log for all containers belonging to a replica _[1]_ , or for a specific container _[2]_ within the replica.\n![Replica log](https://radix.equinor.com/assets/images/replica-log-61f1220cdac35475bd872435268427c2.png)\n### Jobs[​](https://radix.equinor.com/docs/topic-logs/#jobs \"Direct link to Jobs\")\nA job is an on-demand and short-lived workload, in the sense that it performs a set of tasks, and exits when the tasks are completed.\nTo view the log for a job, click the `name` of the job in the `Jobs` list.\n![Job running](https://radix.equinor.com/assets/images/job-list-running-dee854b629adb2ee9e4913ea95b114f6.png)\nFor jobs with status `Running`, the last 1000 entries is shown on the job page. To download the entire log, click the `Download` button. The log may also be available for completed jobs (succeeded or failed), as long as Kubernetes has not garbage collected the log resources.\n![Job log](https://radix.equinor.com/assets/images/job-with-log-80f9e6b29b708c1b71d715c4840a99a4.png)\nIf the log is no longer available in Kubernetes, or the job has restarted one or more times, a `Job Logs History` list is shown on the botton of the page. Each row represents an attempt to run the job (the initial, or a retry if backoffLimit is set) and is sorted descending by creation date. You can download the log for a specific run by clicking on its download icon.\n![Job run log](https://radix.equinor.com/assets/images/job-run-log-a0072eacdc9097d50bd62b8b2f56cb99.png)\n### Pipeline jobs[​](https://radix.equinor.com/docs/topic-logs/#pipeline-jobs \"Direct link to Pipeline jobs\")\nSimilar to on-demand jobs described in the previous section, a pipeline job is also a set of short-lived tasks (called steps in the Radix Web Console). You can view the log for each step in a pipeline job by clicking on the step name. For completed steps (succeeded or failed), the log will be unavailable if the underlying log resources are garbage collected by Kubernetes.\n![Job steps](https://radix.equinor.com/assets/images/job-steps-e7a4c24504ab2c4e16029dff72c0cfd2.png) ![Step log](https://radix.equinor.com/assets/images/step-log-fbdbe5976a3e9565c6e1fcbac1e95760.png)\n## Radix CLI[​](https://radix.equinor.com/docs/topic-logs/#radix-cli \"Direct link to Radix CLI\")\n[Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/) provides access to component and job logs by using the `rx get log` command.\nFor components, only logs for active replicas can be read, and for jobs the log from the last run, as long as Kubernetes has not garbage collected the log resources.\n[PreviousRuntime environment](https://radix.equinor.com/docs/topic-runtime-env/)[NextSecurity](https://radix.equinor.com/docs/topic-security/)\n  * [What is Logged](https://radix.equinor.com/docs/topic-logs/#what-is-logged)\n  * [Radix Web Console](https://radix.equinor.com", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-695b988acfade639f5ab8ab86bea50ed", "__created_at__": 1748191392.2717485, "content": "be read, and for jobs the log from the last run, as long as Kubernetes has not garbage collected the log resources.\n[PreviousRuntime environment](https://radix.equinor.com/docs/topic-runtime-env/)[NextSecurity](https://radix.equinor.com/docs/topic-security/)\n  * [What is Logged](https://radix.equinor.com/docs/topic-logs/#what-is-logged)\n  * [Radix Web Console](https://radix.equinor.com/docs/topic-logs/#radix-web-console)\n    * [Components](https://radix.equinor.com/docs/topic-logs/#components)\n    * [Jobs](https://radix.equinor.com/docs/topic-logs/#jobs)\n    * [Pipeline jobs](https://radix.equinor.com/docs/topic-logs/#pipeline-jobs)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-logs/#radix-cli)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-domain-names/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Domain names\n\n\nOn this page\n# Domain names\nThere can be several domain names mapped to [application components](https://radix.equinor.com/start/radix-concepts/#component) in Radix.\nThe domain names are composed with information from the application, and the [Radix cluster](https://radix.equinor.com/start/radix-clusters/) where the application is hosted:\n  * `component-name`: The name of the component, e.g. `frontend`.\n  * `app-name`: The name of the application, e.g. `myapp`.\n  * `env-name`: The name of the environment where the component is deployed to, e.g. `production`.\n  * `cluster-name`: Exists only in [canonical name](https://radix.equinor.com/docs/topic-domain-names/#canonical-name). The name of the underlying Kubernetes cluster used for hosting a specific [Radix cluster](https://radix.equinor.com/start/radix-clusters/), e.g. `eu-18`. This value can change, for example during upgrade of a Radix cluster. Domain names using this value should only be used for debugging purposes, and should never be used by end users/services.\n  * `cluster-dns-zone`: The DNS zone for the [Radix cluster](https://radix.equinor.com/start/radix-clusters/) where the application is hosted, e.g. `radix.equinor.com`, `playground.radix.equinor.com`.\n\n\n## Public name[​](https://radix.equinor.com/docs/topic-domain-names/#public-name \"Direct link to Public name\")\n```\n[component-name]-[app-name]-[env-name].[cluster-dns-zone]\n```\n\n  * Automatically allocated\n  * Unique for each component in each environment\n\n\nExamples:\n  * `serializer-oneapp-qa.radix.equinor.com`\n  * `frontend-myapp-production.c2.radix.equinor.com`\n  * `backend-myapp-production.playground.radix.equinor.com`\n\n\n## App default alias[​](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias \"Direct link to App default alias\")\n```\n[app-name].app", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1246284884453796154415d02458bcb3", "__created_at__": 1748191392.2717485, "content": "* Unique for each component in each environment\n\n\nExamples:\n  * `serializer-oneapp-qa.radix.equinor.com`\n  * `frontend-myapp-production.c2.radix.equinor.com`\n  * `backend-myapp-production.playground.radix.equinor.com`\n\n\n## App default alias[​](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias \"Direct link to App default alias\")\n```\n[app-name].app.[cluster-dns-zone]\n```\n\nThe _app default alias_ is a convenience domain name to make it easier to publish and use your application. It points to a specific component and environment in your application, and allows a reasonable URL to be distributed to end users/services without the hassle of setting up [external aliases](https://radix.equinor.com/docs/topic-domain-names/#external-alias).\n  * One per application\n  * [Defined in `radixconfig.yaml`](https://radix.equinor.com/radix-config/#dnsappalias)\n\n\nExamples:\n  * `oneapp.app.radix.equinor.com`\n  * `otherapp.app.c2.radix.equinor.com`\n  * `myapp.app.playground.radix.equinor.com`\n\n\n## App alias[​](https://radix.equinor.com/docs/topic-domain-names/#app-alias \"Direct link to App alias\")\n```\n[subdomain].[cluster-dns-zone]\n```\n\nThe _app alias_ allows you to configure a custom subdomain in the `[cluster-dns-zone]` where the application is hosted. With the exception of a few reserved names, the rule is _\"first come, first served\"_.\n  * Multiple allowed per component\n  * [Defined in `radixconfig.yaml`](https://radix.equinor.com/radix-config/#dnsalias)\n\n\nExamples:\n  * `oneapp.radix.equinor.com`\n  * `otherapp.c2.radix.equinor.com`\n  * `myapp.playground.radix.equinor.com`\n\n\n## External alias[​](https://radix.equinor.com/docs/topic-domain-names/#external-alias \"Direct link to External alias\")\n```\n[a valid external DNS name]\n```\n\nFor ultimate customisation of your domain names, you can \"bring your own\" domain into Radix with an _external alias_. There is a [detailed guide](https://radix.equinor.com/guides/external-alias/) on how to configure this.\n  * Multiple allowed per component\n  * [Defined in `radixconfig.yaml`](https://radix.equinor.com/radix-config/#dnsexternalalias)\n  * Requires external DNS alias management\n  * [Bring your own TLS](https://radix.equinor.com/guides/external-alias-certificate/) certificate, or let [Radix handle](https://radix.equinor.com/guides/external-alias/#configure-certificate-automation-service) it\n\n\nExamples:\n  * `myapp.equinor.com`\n  * `www.mydomain.com`\n\n\n## Canonical name[​](https://radix.equinor.com/docs/topic-domain-names/#canonical-name \"Direct link to Canonical name\")\n```\n[component-name]-[app-name]-[env-name].[cluster-name].[cluster-dns-zone]\n```\n\nThe authoritative name for a specific component in a specific Kubernetes- and Radix-cluster.\n  * Automatically allocated\n  * One per component\n\n\nwarning\nThe _canonical name_ should never be used by end users/services because `[cluster-name]` is not considered stable, and can change without warning.\nExamples:\n  * `serializer-oneapp-qa.eu-18.radix.equinor.com`\n  * `frontend-myapp-production.c2-11.c2.radix.equinor.com`\n  * `backend-myapp-production.playground-92.playground.radix.equinor.com`\n\n\n[PreviousMonitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)[NextPrivate Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Public name](https://radix.equinor.com/docs/topic-domain-names/#public-name)\n  * [App default alias](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias)\n  * [App alias](https://radix.equinor.com/docs/topic-domain-names/#app-alias)\n  * [External alias](https://radix.equinor.com/docs/topic-domain-names/#external-alias)\n  * [Canonical name](https://radix.equinor.com/docs/topic-domain-names/#canonical-name)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-docker/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f67697e34825e45432280b2542f07bec", "__created_at__": 1748191392.2717485, "content": "adix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Docker & containers\n\n\nOn this page\n# Docker & containers\nFor a general understanding of what Docker and Container is, have a look at [What is a Container](https://www.docker.com/resources/what-container) or a more in-depth presentation from the Stavanger [playground](https://github.com/equinor/playground-stavanger/tree/master/docker-basic).\nOther resources could be the official [Docker documentation](https://docs.docker.com/).\n## Security[​](https://radix.equinor.com/docs/topic-docker/#security \"Direct link to Security\")\n### Running as non-root[​](https://radix.equinor.com/docs/topic-docker/#running-as-non-root \"Direct link to Running as non-root\")\nApplication hosted on Radix must be run with non-root privileges in the container. A security policy enabled in the Radix platform will prevent the application from running if it is not configured to run as non-root. Here's an sample on how you can run change a Docker container to run as a non-root user, the principle is that you create a dedicated user and group on the image and use this user to run the process.\ntip\nIf this is not configured, your deployment will not start.\nIf your base image is a unprivileged image, you'll need to find the ID of the running user, and use that id in your Dockerfile.\n**USER [USER_ID]** specifies which user to run as, this **must** be the ID of the user, not the name. This will ensure that Kubernetes can verify that the container is running as a non-root user.\nThis is a sample on how it can be done for **node alpine based images**.\n```\nFROM node:lts-alpineWORKDIR /srcCOPY . /src# Add a new group \"radix-non-root-group\" with group id 1001 RUN addgroup -S -g 1001 radix-non-root-group# Add a new user \"radix-non-root-user\" with user id 1001 and include in groupRUN adduser -S -u 1001 -G radix-non-root-group radix-non-root-userUSER 1001EXPOSE 8001\n```\n\nThe ID of the group and user can be anything in the range 1000-65535.\n`groupadd` command follows the syntax `groupadd -S -g [GROUP_ID] [GROUP-NAME]`\n`useradd` command follows the syntax `useradd -S -u [USER_ID] -g [GROUP_NAME] [USER_NAME]`\nBe aware\n[The syntax for add user and group](https://radix.equinor.com/guides/docker-useradd/) can be different for the distribution of images\n### ReadOnly file system for buildKit[​](https://radix.equinor.com/docs/topic-docker/#readonly-file-system-for-buildkit \"Direct link to ReadOnly file system for buildKit\")\nWhen the configuration option [useBuildKit](https://radix.equinor.com/radix-config/#usebuildkit) is `true`, pipeline build jobs run within the Radix cluster with read-only file system, only few specific folders are writable. If it is necessary Dockerfile directives can use writeble folders `/tmp`, `/var` (exluding the reserved `/var/tmp`).\n### Read more about securing docker images[​](https://radix.equinor.com/docs/topic-docker/#read-more-about-securing-docker-images \"Direct link to Read more about securing docker images\")\nThere are many great articles on securing docker images. See [Snyk](https://res.cloudinary.com/snyk/image/upload/v1551798390/Docker_Image_Security_Best_Practices_.pdf).\n### Use immutable (read", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-aebc4dbb6b7abc5794ab66f8685e21aa", "__created_at__": 1748191392.2717485, "content": "the reserved `/var/tmp`).\n### Read more about securing docker images[​](https://radix.equinor.com/docs/topic-docker/#read-more-about-securing-docker-images \"Direct link to Read more about securing docker images\")\nThere are many great articles on securing docker images. See [Snyk](https://res.cloudinary.com/snyk/image/upload/v1551798390/Docker_Image_Security_Best_Practices_.pdf).\n### Use immutable (read-only) root filesystem[​](https://radix.equinor.com/docs/topic-docker/#use-immutable-read-only-root-filesystem \"Direct link to Use immutable \\(read-only\\) root filesystem\")\nAn immutable root filesystem prevents applications from writing to the local disk. This is desirable, if an intrusion from an attacker, the attacker will not be able to tamper with the filesystem or write foreign executables to disk.\nThe container's root filesystem should be treated as a _golden image_ by using Docker run's `--read-only` option. This prevents any writes to the container's root filesystem at container runtime and enforces the principle of immutable infrastructure.\nThe Radix equivalent to Docker's `--read-only` is the [`readOnlyFileSystem`](https://radix.equinor.com/radix-config/#readonlyfilesystem-1) property in `radixconfig.yaml`.\n## Best-practice `Dockerfile`[​](https://radix.equinor.com/docs/topic-docker/#best-practice-dockerfile \"Direct link to best-practice-dockerfile\")\nThe official Docker documentation has a set of [best practices](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/) when it comes to creating `Dockerfile`s. This is often related to optimizing build, push and pull speed and creating small and secure images.\n### Limit image size[​](https://radix.equinor.com/docs/topic-docker/#limit-image-size \"Direct link to Limit image size\")\nMany of the best practices are connected to creating small images either through using the \"correct\" BASE image or through Multistage builds.\nSmall images will be faster to build, push and pull then bigger images. It will have less frameworks dependencies, and therefore smaller risk of security vulnerabilities and bugs. Google cloud platform have a great video on why and how to create small images - [link](https://www.youtube.com/watch?v=wGz_cbtCiEA&list=PLIivdWyY5sqL3xfXz5xJvwzFW_tlQB_GB&index=2), or you can check the [official doc](https://docs.docker.com/develop/develop-images/multistage-build/).\nTry to find a guide for the technology stack you work on, to optimize your container further.\n### Layers[​](https://radix.equinor.com/docs/topic-docker/#layers \"Direct link to Layers\")\nDocker build speed can be reduced by understanding caching of layers. In short, each line in the Dockerfile can be seen as a layer for the finished image. Docker caches these layers and, if there are no changes, can reuse the cached version when building several times. See [digging-into-docker-layers](https://medium.com/@jessgreb01/digging-into-docker-layers-c22f948ed612) for more information.\n## Radix specific[​](https://radix.equinor.com/docs/topic-docker/#radix-specific \"Direct link to Radix specific\")\n### Testing[​](https://radix.equinor.com/docs/topic-docker/#testing \"Direct link to Testing\")\nAutomatic testing of an application can be done as a build stage inside the container. This will then be run as one of the steps when radix build the image.\n[PreviousWhat's new](https://radix.equinor.com/docs/topic-releases/)[NextRuntime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Security](https://radix.equinor.com/docs/topic-docker/#security)\n    * [Running as non-root](https://radix.equinor.com/docs/topic-docker/#running-as-non-root)\n    * [ReadOnly file system for buildKit](https://radix.equinor.com/docs/topic-docker/#readonly-file-system-for-buildkit)\n    * [Read more about securing docker images](https://radix.equinor.com/docs/topic-docker/#read-more-about-securing-docker-images)\n    * [Use immutable (read-only) root filesystem](https://radix.equinor.com/docs/topic-docker/#use-immutable-read-only-root-filesystem)\n  * [Best-practice `Dockerfile`](https://radix.equinor.com/docs/topic-docker/#best-practice-dockerfile)\n    * [Limit image size](https://radix.equinor.com/docs/topic-docker/#limit-image-size)\n    * [Layers](https://radix.equinor.com/docs/topic-docker/#layers)\n  * [Radix specific](https://radix.equinor.com/docs/topic-docker/#radix-specific)\n    * [Testing](https://radix.equinor.com/docs/topic-docker/#testing)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/config-your-app/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equin", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d88a2c10dc9ed7992b38ef6797db80cf", "__created_at__": 1748191392.2717485, "content": "to main content](https://radix.equinor.com/start/config-your-app/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Configuring your application\n\n\nOn this page\n# How to configure your application\nIn this guide we'll set up an application in Radix. Here's what we need:\n  * A GitHub repository for our code (only GitHub is supported at the moment)\n  * A 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) file that defines the running environments. By default, it is in the root directory of our repository.\n  * At least one `Dockerfile` that builds and serves our application. We can have several of these files: one per component, in separate directories (e.g. a \"front-end\" component and a \"back-end\" component).\n\n\nWe will go over these points below.\n## The repository[​](https://radix.equinor.com/start/config-your-app/#the-repository \"Direct link to The repository\")\nAll of our **components must be in the same repository**. A component is code that has its own build and deployment process: for instance a \"front end\" served by Nginx and a \"back end\" running on Node.js would be two components. Components are built in parallel from the same repository and deployed together into an environment. There is currently no concept of a multi-repository application.\nThe way we use branches and tags in our repository depends on what type of workflow we use. You can read more about the choices available in the [workflows](https://radix.equinor.com/start/workflows/) section — but let's continue with setting up for now.\n## The `radixconfig.yaml` file[​](https://radix.equinor.com/start/config-your-app/#the-radixconfigyaml-file \"Direct link to the-radixconfigyaml-file\")\nA 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) file that defines the running environments, which specifies how our application is built and deployed. By default, it is in the root directory of our repository.\ntip\nRadix only reads `radixconfig.yaml` from the branch we set as the `Config Branch` in the application registration form. If the file is changed in other branches, those changes will be ignored.\nIf you are unfamiliar with YAML, it is fine to write the configuration as JSON instead — just keep the same filename.\nHere is a simple example of the file:\nClick me to view the code\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: myappspec:environments:-name: devbuild:from: master-name: prodcomponents:-name: frontendsrc:\".\"publicPort: httpports:-name: httpport:8080\n```\n\nThe same, but as JSON:\nClick me to view the code\n```\n{\"apiVersion\":\"radix.equinor.com/v1\",\"kind\":\"RadixApplication\",\"metadata\":{\"name\":\"myapp\"},\"spec\":{\"environments\":[{\"name\":\"dev\",\"build\":{\"from\":\"master\"}},{\"name\":\"prod\"}],\"components\":[{\"name\":\"frontend\",\"src\":\".\",\"publicPort\":\"http\",\"ports\":[{\"name\":\"http\",\"port\":8080}]}]}}\n```\n\nA breakdown of the configuration above:\n  * Our application is called `myapp`\n  * There are two environments, `dev` and `prod`, and only one component, `frontend`\n  * Commits to the `master` branch will trigger a build and deployment of the application to the `dev` environment. We can use this behavior to build a [workflow](https://radix.equinor.com/start/workflows/)\n  * Radix will look for the `Dockerfile` for the `frontend` component in the root directory of the repository\n  * Once `frontend` is built, it will be exposed on the internet on port 8080 on each environment it is deployed to (in `dev`, for instance", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-077d0f75a7f843e9e774899115de9a25", "__created_at__": 1748191392.2717485, "content": "will trigger a build and deployment of the application to the `dev` environment. We can use this behavior to build a [workflow](https://radix.equinor.com/start/workflows/)\n  * Radix will look for the `Dockerfile` for the `frontend` component in the root directory of the repository\n  * Once `frontend` is built, it will be exposed on the internet on port 8080 on each environment it is deployed to (in `dev`, for instance, it will have a domain name like `frontend-myapp-dev.playground.radix.equinor.com` (on the Playground cluster) or `frontend-myapp-dev.radix.equinor.com` (on the Platform cluster))\n\n\nThe full syntax of `radixconfig.yaml` is explained in 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) reference.\n## A `Dockerfile` per component[​](https://radix.equinor.com/start/config-your-app/#a-dockerfile-per-component \"Direct link to a-dockerfile-per-component\")\nEach component in Radix is built into a Docker image. Images for all components are deployed as containers running in an environment. To do this, Radix requires a `Dockerfile` for each component.\nIf we organize our repository with this structure, for instance:\n```\n/├─ fe/│ ├─ Dockerfile│ └─ *frontend component code*│├─ be/│ ├─ Dockerfile│ └─ *backend component code*│└─ radixconfig.yaml\n```\n\nIn [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#components) we can define the following components:\n```\ncomponents:-name: frontendsrc:\"./fe\"-name: backendsrc:\"./be\"\n```\n\nNote the `src` property for each component: this is the path to the directory containing the `Dockerfile` for that component. Radix will try to build the image within that directory.\nThe `Dockerfile` should define - it is strongly recommended, when applicable - a **multi-stage build** in order to speed up the builds and make the resulting image as small as possible also to avoid running debug versions of the code and servers. Python images usually run as is, but there is a \"distroless\" image like [these](https://github.com/GoogleContainerTools/distroless#docker) - we did not try them though.\nThis means that we can decouple the build and deployment concerns. Here is an example for a simple Node.js single-page application:\n```\nFROM node:carbon-alpine as builderWORKDIR /appCOPY package*.json ./RUN npm installCOPY . .RUN npm run buildFROM nginx:1.20-alpineWORKDIR /appCOPY--from=builder /app/build /appCOPY nginx.conf /etc/nginx/conf.d/default.confUSER 101\n```\n\nNote how the first section uses a large image (`node`) which has the dependencies needed to build the component. In the second stage, the built files are copied into a small image (`nginx`) to serve them without all the build dependencies.\n[PreviousRequirements](https://radix.equinor.com/start/requirements/)[NextRegistering your application](https://radix.equinor.com/start/registering-app/)\n  * [The repository](https://radix.equinor.com/start/config-your-app/#the-repository)\n  * [The `radixconfig.yaml` file](https://radix.equinor.com/start/config-your-app/#the-radixconfigyaml-file)\n  * [A `Dockerfile` per component](https://radix.equinor.com/start/config-your-app/#a-dockerfile-per-component)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/pipeline-badge/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/pipeline-badge/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/pipeline-badge/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Apply Config](https://radix.equinor.com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-45eab89f3bb4d5ddc7a288a85344ea1d", "__created_at__": 1748191392.2717485, "content": ".com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Jobs](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Volume Mounts](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/pipeline-badge/)\n  * [GitHub](https://radix.equinor.com/guides/pipeline-badge/)\n\n\n  * [](https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Status Badges\n\n\nOn this page\n# Configure Pipeline Badges\nA pipeline status badge shows the status of the latest pipeline job of a specific type in a specific environment. Status is one of **success** , **failing** , **stopped** , **pending** or **running**.\nThe URL for generating a badge is:\n```\nhttps://api.<cluster-dns-zone>/api/v1/applications/<app-name>/environments/<env-name>/buildstatus?pipeline=<pipeline-type>\n```\n\nwhere `app-name` is the name of the application, `env-name` is the name of the environment within the application, and `pipeline-type`(optional) is one of **build-deploy**(default), **deploy** or **promote**. Refer to _DNS Zone_ in [Radix clusters](https://radix.equinor.com/start/radix-clusters/) to get the `cluster-dns-zone` value for the cluster where your application is hosted.\nRequesting a badge for a non-existing application or environment, or for a pipeline type that hasn't been run yet, the badge returns with an **unknown** status. ![build-deploy unknown](https://radix.equinor.com/guides/pipeline-badge/)\ntip\nGitHub uses an image cache and proxy for images referenced in markdown files. Initial investigation shows that images are cached for up to one minute, which means that a pipeline status badge will not be \"realtime\" when viewed on GitHub.\n## Example[​](https://radix.equinor.com/guides/pipeline-badge/#example \"Direct link to Example\")\nAn application named `echo` with three environments; `qa`, `demo` and `production`. The latest `build-deploy` job for qa environment has **Failed** , and the latest `build-deploy` for production has **Succeeded**. The `promote` job to the demo environment has status **Succeeded**.\n![Pipeline jobs](https://radix.equinor.com/assets/images/pipeline-jobs-89cc050162e4280b2a1b5ee0e64251f4.png)\nThe pipeline status badge URL for the latest `build-deploy` job in `qa` environment, _<https://api.radix.equinor.com/api/v1/applications/**echo**/environments/**qa**/buildstatus>_ , returns ![build-deploy failing](https://radix.equinor.com/guides/pipeline-badge/)\nAnd for `production` environment, _<https://api.radix.equinor.com/api/v1/applications/**echo**/environments/**production**/buildstatus>_ , the following badge is returned ![build-deploy success](https://radix.equinor.com/guides/pipeline-badge/)\nThe URL for the latest promote job in the demo environment, _<https://api.radix.equinor.com/api/v1/applications/**echo**/environments/**demo**/buildstatus?pipeline=**promote>_ **, returns ![promote success](https://radix.equinor.com/guides/pipeline-badge/)\n[PreviousSub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)[NextBuild Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Example](https://radix.equinor.com/guides/pipeline-badge/#example)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/component-start-stop-restart/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2eba584b0cb1760d193bc73a2c69f6eb", "__created_at__": 1748191392.2717485, "content": "quinor.com/guides/pipeline-badge/#example)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/component-start-stop-restart/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Jobs](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Volume Mounts](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [GitHub](https://radix.equinor.com/guides/component-start-stop-restart/)\n\n\n  * [](https://radix.equinor.com/)\n  * Component scale/stop/restart\n\n\nOn this page\n# Component scale/stop/restart\nStop, Scale and Restart of a running component can be done in the Web console, when special circumstances requires it (i.e. after having updated a secret), even though the recommended approach is to change the configuration in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/)\ninfo\nWhen manually scaled a component, it will be persisted accross deployments. Click `reset` to resume normal scaling.\n![Component-stop-start-restart](https://radix.equinor.com/assets/images/Component-stop-start-restart-79693e0794991050c1714d59b2607752.png)\n## Scale[​](https://radix.equinor.com/guides/component-start-stop-restart/#scale \"Direct link to Scale\")\n_Scale_ will manually override the configured number of replicas. Click _reset_ to resume normal scaling.\n## Stop[​](https://radix.equinor.com/guides/component-start-stop-restart/#stop \"Direct link to Stop\")\n_Stop_ will manually scale the number of replicas to 0 for the component.\n## Reset[​](https://radix.equinor.com/guides/component-start-stop-restart/#reset \"Direct link to Reset\")\n_Reset_ removes the manually configured replica count and sets it to the value defined in [`replicas`](https://radix.equinor.com/radix-config/#replicas) or [`horizontalScaling`](https://radix.equinor.com/radix-config/#horizontalscaling) defined by the _active deployment_.\n## Restarting[​](https://radix.equinor.com/guides/component-start-stop-restart/#restarting \"Direct link to Restarting\")\n_Restarting_ the component will make a rolling restart of the _active deployment_. That means that the application will be responsive during the enire restart, just as with [rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/).\n[PreviousEnable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)[NextResource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Scale](https://radix.equinor.com/guides/component-start-stop-restart/#scale)\n  * [Stop](https://radix.equinor.com/guides/component-start-stop-restart/#stop)\n  * [Reset](https://radix.equinor.com/guides/component-start-stop-restart/#reset)\n  * [Restarting](https://radix.equinor.com/guides/component-start-stop-restart/#restarting)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/onboarding/#__docusaurus_skipToContent_fallback)\n[![Omnia Rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1010a79b763adc65f10c39fc81ed41aa", "__created_at__": 1748191392.2717485, "content": "-start-stop-restart/#stop)\n  * [Reset](https://radix.equinor.com/guides/component-start-stop-restart/#reset)\n  * [Restarting](https://radix.equinor.com/guides/component-start-stop-restart/#restarting)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/onboarding/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Onboarding\n\n\nOn this page\n# Onboarding\n[Radix team](https://radix.equinor.com/community/) offer onboard support for teams or projects, where we walk through your application and togheter try to find out if Radix is a good fit for you. Contact us on [slack](https://equinor.slack.com/archives/C8U7XGGAJ) for more information.\nYou should have a basic understanding of some technologies are required for working efficient with Radix.\nFor questions around topics covered in this section, its recommended to ask on slack and channel [developer_community](https://equinor.slack.com/archives/C3HLP8ZTQ). This is where the biggest number of people are ready to answer your questions.\n## git / github[​](https://radix.equinor.com/start/onboarding/#git--github \"Direct link to git / github\")\nA basic understanding of Git and GitHub is required to use Radix. [git - the simple guide](http://rogerdudler.github.io/git-guide/) is a good place to start.\n## docker / containers[​](https://radix.equinor.com/start/onboarding/#docker--containers \"Direct link to docker / containers\")\nEven if your not using Radix, we would still recommend you to learn how to use Docker for containerization, and use it for hosting. It has many benefits when utilizing cloud.\n[What is a container](https://www.youtube.com/watch?v=EnJ7qX9fkcU) and [Benefits of containers](https://www.youtube.com/watch?v=cCTLjAdIQho) are both good videos to explain what and why containers. [Best practice](https://radix.equinor.com/docs/topic-docker/) contains references to other relevant resources.\n## OAuth 2.0 - Authentication and Authorization[​](https://radix.equinor.com/start/onboarding/#oauth-20---authentication-and-authorization \"Direct link to OAuth 2.0 - Authentication and Authorization\")\nIf your API needs to be protected and only accessible for a group of users, understanding of OAuth 2.0 is required. Again this is not bound to Radix, but general knowledge needed when hosting applications in Azure (and cloud). [Radix authentication service](https://radix.equinor.com/guides/authentication/) can be a good place to start.\n## Azure services[​](https://radix.equinor.com/start/onboarding/#azure-services \"Direct link to Azure services\")\nOther Azure services, as storage, is often needed together with Radix.\n[PreviousRadix clusters](https://radix.equinor.com/start/radix-clusters/)[NextExamples](https://radix.equinor.com/start/examples/)\n  * [git / github](https://radix.equinor.com/start/onboarding/#git--github)\n  * [docker / containers](https://radix.equinor.com/start/onboarding/#docker--containers)\n  * [OAuth 2.0 - Authentication and Authorization](https://radix.equinor.com/start/onboarding/#oauth-20---authentication-and-authorization)\n  * [Azure services](https://radix.equinor.com/start/onboarding/#azure-services)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-uptime/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Om", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-fa8ef0864d2cf400d655d8357a65d5bb", "__created_at__": 1748191392.2717485, "content": "quinor.com/start/onboarding/#oauth-20---authentication-and-authorization)\n  * [Azure services](https://radix.equinor.com/start/onboarding/#azure-services)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-uptime/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Service, support, uptime and availability\n\n\nOn this page\n# Uptime and availability\nHistorical uptime is an indicator of the reliability of a service, in our case the Radix Kubernetes cluster. The Radix uptime is measured by sending requests from an external service every 1 minute to an endpoint running in Radix, and recording whether the request completed successfully or not. The uptime number is then calculated as the ratio (percentage) of aggregated time between consecutive successful requests over the length of the measurement period.\nRadix will only report the measured uptime for the Radix platform, and not the other services provided, i.e. build- deploy pipeline, montitoring, vulnerability scanning. We will use an external service that monitors an application running on the Radix Platform, from outside the Azure tenant, it will calculate availability of the applicable monitored service.\n|   \n---|---  \nService monitored:| `https://canary.radix.equinor.com`  \nTimeperiod:| Rolling last 90 days  \nMonitoring tool:| Dynatrace  \nAvailability calculation %:| Uptime / (Uptime + Downtime) x 100  \nThe [Uptime/Availability report](https://console.radix.equinor.com/about), will be an indication of future reliability of Radix Platform.\ntip\nThe monitoring has not been active for 90 days yet, so the current report will show the availability % for the number of days it has been running.\n  * **Planned maintenance:** We will announce, in our main Slack channel - [#omnia_radix](https://equinor.slack.com/archives/C8U7XGGAJ), planned maintenance at least 2 business days in advance. Downtime during planned maintenance does not affect uptime goals\n  * **Disaster Recovery:** A Disaster Recovery Procedure is in place and the procedure is executed on a weekly basis. Estimated time to recover a cluster is 15 minutes, estimated time to rebuild and recover a complete cluster is 1 hour. (A backup of all resources in the Kubernetes cluster is done every 1 hour, and is the main ingredient of the recovery recipe)\n\n\n## Platform cluster availability and services[​](https://radix.equinor.com/docs/topic-uptime/#platform-cluster-availability-and-services \"Direct link to Platform cluster availability and services\")\nThe Radix Platform should be used when your team has chosen Radix as PaaS (Platform-as-a-Service) for a product under development or in production.\nCluster| Purpose| Upgrade| Support  \n---|---|---|---  \n**Platform (North Europe)**|  Apps under development or in production| Every ~6 months| Yes  \n**Platform 2 (West Europe)**|  Apps under development or in production| Every ~6 months| Yes  \n**Playground**|  Testing and experimenting with Radix| | Best-effort  \n### Support[​](https://radix.equinor.com/docs/topic-uptime/#support \"Direct link to Support\")\nSchedule for Radix DevOps/Support team - 08:00 -", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d4aa6dfe5d1150aa32136213b7c8afdb", "__created_at__": 1748191392.2717485, "content": "|  Apps under development or in production| Every ~6 months| Yes  \n**Platform 2 (West Europe)**|  Apps under development or in production| Every ~6 months| Yes  \n**Playground**|  Testing and experimenting with Radix| | Best-effort  \n### Support[​](https://radix.equinor.com/docs/topic-uptime/#support \"Direct link to Support\")\nSchedule for Radix DevOps/Support team - 08:00 - 16:00 CET/CEST on Norwegian working days\n  * **Support channels:** File issue on [**radix** repo](https://github.com/equinor/radix/issues) or ask on [#omnia_radix_support](https://equinor.slack.com/messages/CBKM6N2JY) on Slack\n  * **Response time:** As soon as possible within business hours, at least next business day\n  * **On-call duty:** No, please contact us to discuss options\n  * **Resolution time:** Cannot be guaranteed, but for critical issues work on fixing the problem will start immediately and continue within business hours until resolved\n\n\n### Associated operational risks[​](https://radix.equinor.com/docs/topic-uptime/#associated-operational-risks \"Direct link to Associated operational risks\")\n  * No incident management beyond schedule \"Norway - default\" - i.e. no support after 16:00 CET/CEST on Norwegian working days\n  * Infrastructure downtime despite robust, high-availability infrastructure\n\n\n### Uptime risk management[​](https://radix.equinor.com/docs/topic-uptime/#uptime-risk-management \"Direct link to Uptime risk management\")\nA risk assessment for cluster uptime has been done, and the most critical risk scenarios are identified, and risk mitigation actions have been agreed upon and are implemented as required.\n### Disaster recovery[​](https://radix.equinor.com/docs/topic-uptime/#disaster-recovery \"Direct link to Disaster recovery\")\nApplication configuration is backed up every hour using Velero and that backup is stored in the Azure Storage account. We have created a script that can create a new AKS instance and migrate all applications from the affected cluster to the new one.\n**RTO (Recovery Time Objective)** has been estimated at 20 minutes from the moment the Radix team starts working on it. Keep in mind that the RTO is only an estimate since external factors can also influence the recovery time. For example, this time will increase if there is a high load on Azure REST API or Azure managed Kubernetes API server.\nSome of the failure events that can take down the service or introduce delays and timeouts:\n  * Bad commit can introduce a bad code/bug in Radix components\n  * Executing a command in the wrong cluster\n  * Resource exhaustion, CPU, Memory, Disk issues\n  * Upgrading 3rd party components\n  * Azure resources/services are deleted\n  * MS Azure services unavailable\n  * Kubernetes bugs\n  * Kubernetes API changes\n  * Expired certificates\n  * Network issues, DDOS\n  * Expired secrets\n\n\nWe are working hard to mitigate as much of these as possible.\n## Radix Playground services[​](https://radix.equinor.com/docs/topic-uptime/#radix-playground-services \"Direct link to Radix Playground services\")\nUse Playground for testing Radix, see if it’s a good fit for your projects, and provide feedback. When you are ready to commit, register your application in the Radix Platform, even if your application still is development stage. The Radix Platform has improved services.\n  * **Support channels:** Same as for Radix Platform (see above). Help will be provided when team has capacity\n  * **Uptime:** \"Best-effort\", but no guarantee of uptime. Planned maintenance is announced as early as possible\n\n\n### Automatic cleanup in Playground cluster[​](https://radix.equinor.com/docs/topic-uptime/#automatic-cleanup-in-playground-cluster \"Direct link to Automatic cleanup in Playground cluster\")\nA stricter lifecycle policy for using Radix Playground is in place, to make sure everybody share the resources and avoid unattended applications using unnecessary resources.\nAny application which has not been **deployed** or **restarted** in the last `7 days` will be stopped.\nAfter further `21 days` of inactivity, all stopped applications will be **deleted**.\n[PreviousRolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)[NextRadix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Platform cluster availability and services](https://radix.equinor.com/docs/topic-uptime/#platform-cluster-availability-and-services)\n    * [Support](https://radix.equinor.com/docs/topic-uptime/#support)\n    * [Associated operational risks](https://radix.equinor.com/docs/topic-uptime/#associated-operational-risks)\n    * [Uptime risk management](https://radix.equinor.com/docs/topic-uptime/#uptime-risk-management)\n    * [Disaster recovery](https://radix.equinor.com/docs/topic-uptime/#disaster-recovery)\n  * [Radix Playground services](https://radix.equinor.com/docs/topic-uptime/#radix-playground-services)\n    * [Automatic cleanup in Playground cluster](https://radix.equinor.com/docs/topic-uptime/#automatic-cleanup-in-playground-cluster)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/docker-useradd/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b5b4e3253630aa1e8a8a0c1b9e4c7dce", "__created_at__": 1748191392.2717485, "content": "radix.equinor.com/docs/topic-uptime/#radix-playground-services)\n    * [Automatic cleanup in Playground cluster](https://radix.equinor.com/docs/topic-uptime/#automatic-cleanup-in-playground-cluster)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/docker-useradd/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/docker-useradd/)\n    * [What is a Container](https://radix.equinor.com/guides/docker/)\n    * [Users in Containers](https://radix.equinor.com/guides/docker-useradd/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/docker-useradd/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/docker-useradd/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/docker-useradd/)\n  * [Jobs](https://radix.equinor.com/guides/docker-useradd/)\n  * [Volume Mounts](https://radix.equinor.com/guides/docker-useradd/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/docker-useradd/)\n  * [GitHub](https://radix.equinor.com/guides/docker-useradd/)\n\n\n  * [](https://radix.equinor.com/)\n  * Docker\n  * Users in Containers\n\n\nOn this page\n# Users in Containers\n## Add user and group in Docker[​](https://radix.equinor.com/guides/docker-useradd/#add-user-and-group-in-docker \"Direct link to Add user and group in Docker\")\n### Difference between “adduser” and “useradd”[​](https://radix.equinor.com/guides/docker-useradd/#difference-between-adduser-and-useradd \"Direct link to Difference between “adduser” and “useradd”\")\n\"useradd\" is native binary compiled with the system \"adduser\" is a perl script which uses useradd binary in back-end. It is more user-friendly and interactive compared to back-end useradd. With \"adduser\" the system level users account when created puts a user directory in home for the system user where \"useradd\" does not.\nFor non-root users ids above 999 should be used.\nDifferent distributions (and their flavours) might have different options:\n### Debian[​](https://radix.equinor.com/guides/docker-useradd/#debian \"Direct link to Debian\")\n[debian info](https://manpages.debian.org/jessie/adduser/adduser.8.en.html) (also [Ubuntu info](http://manpages.ubuntu.com/manpages/trusty/man8/adduser.8.html), etc.)\n**-g or --gid** groupadd --gid GID <groupname>\n**-g or --gid; -u or --uid** useradd --gid GID --uid UID <username>\n**only --gid** addgroup --gid GID <groupname>\n**only --uid and --gid** adduser --gid GID --uid UID <username>\n### Alpine[​](https://radix.equinor.com/guides/docker-useradd/#alpine \"Direct link to Alpine\")\n[Alpine info](https://wiki.alpinelinux.org/wiki/Setting_up_a_new_user), groupadd and useradd are not available\n**-g or --gid** addgroup -g GID <groupname>\n**only -g; -u or --uid** adduser -g GID -u UID <username>\n### Archlinux[​](https://radix.equinor.com/guides/docker-useradd/#archlinux \"Direct link to Archlinux\")\n[Archlinux info](https://wiki.archlinux.org/title/users_and_groups) - [more info...](https://aur.archlinux.org/packages/adduser/), addgroup and adduser are not available\n**-g or --gid** groupadd --gid GID groupname", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b078e8ed75705e0c426dc3f5799e86fc", "__created_at__": 1748191392.2717485, "content": "adduser -g GID -u UID <username>\n### Archlinux[​](https://radix.equinor.com/guides/docker-useradd/#archlinux \"Direct link to Archlinux\")\n[Archlinux info](https://wiki.archlinux.org/title/users_and_groups) - [more info...](https://aur.archlinux.org/packages/adduser/), addgroup and adduser are not available\n**-g or --gid** groupadd --gid GID groupname\n**-g or --gid; -u or --uid** useradd --gid GID --uid UID username\n[PreviousWhat is a Container](https://radix.equinor.com/guides/docker/)[NextBuild and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n  * [Add user and group in Docker](https://radix.equinor.com/guides/docker-useradd/#add-user-and-group-in-docker)\n    * [Difference between “adduser” and “useradd”](https://radix.equinor.com/guides/docker-useradd/#difference-between-adduser-and-useradd)\n    * [Debian](https://radix.equinor.com/guides/docker-useradd/#debian)\n    * [Alpine](https://radix.equinor.com/guides/docker-useradd/#alpine)\n    * [Archlinux](https://radix.equinor.com/guides/docker-useradd/#archlinux)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * What is Radix\n\n\nOn this page\n# What is Radix\nOmnia Radix is a Platform-as-a-Service (\"PaaS\", if you like buzzwords). It builds, deploys, and monitors applications, automating the boring stuff and letting developers focus on code. Applications run in ☁️ the cloud as 🐳 Docker containers, in environments that you define.\nYou can use Radix just to run code, but the main functionality is to integrate with a code repository so that it can continuously build, test, and deploy applications. For instance, Radix can react to a `git push` event, automatically start a new build, and push it to the `test` environment, ready to be tested by users.\ntip\nTo help improve Radix poke around in our **open sourced** repositories. We track **issues and feature requests** in the [radix](https://github.com/equinor/radix/issues) repo. Please log those! 🙂\n## Hosting/Infrastructure[​](https://radix.equinor.com/start/#hostinginfrastructure \"Direct link to Hosting/Infrastructure\")\nIn Radix we advocate [Infrastructure as code](https://en.wikipedia.org/wiki/Infrastructure_as_code) and more specifically declarative infrastructure. This is done through the 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) file where you define how you would like your application to be hosted.\nRadix is built on top of Kubernetes ☸️ hosted on Azure as a service (AKS). Knowledge around Kubernetes is NOT required for using Radix. However thoughts from Kubernetes has influenced Radix, so it can be a good with some basic understanding of what it is. VMware has a 5min video on [youtube](https://www.youtube.com/watch?v=PH-2FfFD2PU), or for those more interested we can recommend [Introduction to Kubernetes](https://training.linuxfoundation.org/resources/free-courses/introduction-to-kubernetes/) course by linuxfoundation.\nFun fact ☝️\nKubernetes originates from the Greek language, meaning helmsman or pilot. You'll sometimes see Kubernetes referred to as K8s, 8 for the number of letters between the K and S.\n## CI / CD[​](https://radix.equinor.com/start/#ci--cd \"Direct link to CI / CD\")\nRadix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2f277c2546532af8da42763ffdcc73ae", "__created_at__": 1748191392.2717485, "content": "to Kubernetes](https://training.linuxfoundation.org/resources/free-courses/introduction-to-kubernetes/) course by linuxfoundation.\nFun fact ☝️\nKubernetes originates from the Greek language, meaning helmsman or pilot. You'll sometimes see Kubernetes referred to as K8s, 8 for the number of letters between the K and S.\n## CI / CD[​](https://radix.equinor.com/start/#ci--cd \"Direct link to CI / CD\")\nRadix provide a simple way to automatically build and deploy (continuous integration/continuous deployment ♾️ - [ci/cd](https://en.wikipedia.org/wiki/CI/CD) your application based on the 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) file already mentioned. Alternatively, you can opt for using only the CD part of Radix. Teams that have a need for more advanced CI feature can use other CI tools and [deploy into Radix](https://radix.equinor.com/guides/deploy-only/).\n## Monitoring[​](https://radix.equinor.com/start/#monitoring \"Direct link to Monitoring\")\nRadix also provides monitoring for applications. There are default 📈 metrics (e.g. request latency, failure rate), but you can also output custom metrics from your code. Track things that are important for your application: uploaded file size, number of results found, or user preferences. Radix collects and monitors the data.\nGeneral information around [monitoring in Radix](https://radix.equinor.com/guides/monitoring/) in Radix guides. When you work with an application, link to a basic monitoring dashboard is available on your apps first page.\n[NextRadix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Hosting/Infrastructure](https://radix.equinor.com/start/#hostinginfrastructure)\n  * [CI / CD](https://radix.equinor.com/start/#ci--cd)\n  * [Monitoring](https://radix.equinor.com/start/#monitoring)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-security/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Security\n\n\nOn this page\n# Security\n## Role Based Access Control[​](https://radix.equinor.com/docs/topic-security/#role-based-access-control \"Direct link to Role Based Access Control\")\nThere are three roles which govern access to the management plane of Radix.\n#### Radix Platform User[​](https://radix.equinor.com/docs/topic-security/#radix-platform-user \"Direct link to Radix Platform User\")\nThe Radix Platform User role is scoped to the entirety of the Radix platform. Members of the Radix Platform User AD group are granted access to create new Radix applications, view the Radix Web Console and the Grafana Dashboard (Monitoring). Membership of this AD group is granted by submitting an application in AccessIT.\n#### Radix Application Admin Role[​](https://radix.equinor.com/docs/topic-security/#radix-application-admin-role \"Direct link to Radix Application Admin Role\")\nEach Radix application has a list of AD groups whose members are granted the Radix Application Admin role. Users with this role can view and modify all attributes of a Radix applications, including,", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-622bd5d667ab753da07f4105e03c3007", "__created_at__": 1748191392.2717485, "content": "Console and the Grafana Dashboard (Monitoring). Membership of this AD group is granted by submitting an application in AccessIT.\n#### Radix Application Admin Role[​](https://radix.equinor.com/docs/topic-security/#radix-application-admin-role \"Direct link to Radix Application Admin Role\")\nEach Radix application has a list of AD groups whose members are granted the Radix Application Admin role. Users with this role can view and modify all attributes of a Radix applications, including, but not limited to, the application's configuration, environment variables, and secrets.\n#### Radix Application Reader Role[​](https://radix.equinor.com/docs/topic-security/#radix-application-reader-role \"Direct link to Radix Application Reader Role\")\nSimilar to the Radix Application Admin role, each Radix application has a list of AD groups whose members are granted the Radix Application Reader role. This role is designed for users who require read-only access to information about a Radix application. These users can not perform any actions that could impact the application's state, such as starting or stopping components or deleting the application. Readers have the privilege to access logs associated with the application's replicas and jobs. This access enables troubleshooting and gathering insights without having the risk of impacting the application.\n## Authentication[​](https://radix.equinor.com/docs/topic-security/#authentication \"Direct link to Authentication\")\nIt is important to understand that **application authentication is not handled by Radix**. The application endpoints will be public. Each team managing an application hosted on Radix is responsible for authenticating their users.\nTo help with this, Radix allows to configure build in [authentication component](https://radix.equinor.com/radix-config#authentication). Please look at the [Authentication](https://radix.equinor.com/guides/authentication/) guide for more information. However, this component does not provide authentication for the application itself, the access needs to be configured by a team (e.g. limiting access to particular Microsoft Entra ID groups or users, etc.).\n[PreviousLogs](https://radix.equinor.com/docs/topic-logs/)[NextVulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Role Based Access Control](https://radix.equinor.com/docs/topic-security/#role-based-access-control)\n  * [Authentication](https://radix.equinor.com/docs/topic-security/#authentication)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-scenarios/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Scenarios\nOn this page you will find scenarios describing different app structures. For each scenario you can find example code for at least one programming language. The code is meant to give you an idea of how your project should look when deploying it to the radix platform. The examples are also a way for you to try out the platform, simply [clone](https://git-scm.com/docs/git-clone) or copy the code to your own repository and follow [these guide on how to configure an app](https://radix.equinor.com/start/config-your-app/).\ntip\n**If there are no examples for your programming language:** Note that the main difference between all the examples is in the `radixconfig.yaml` and `Dockerfile`s, so you might still find these files and the project structures useful\n## Authentication with AD[​](https://radix.equinor.com/docs/topic-scenarios/#authentication-with-ad \"Direct link to Authentication with AD\")\nApp which authenticates the user in AD, if logged in read basic user information from AD.\nExample for Omnia Radix showing how to use a OAuth proxy for authentication\n  * [Omnia Radix OAuth proxy for authentication](https://github.com/equinor/radix-public-site/tree/main/examples/radix-example-oauth-proxy)\n\n\n  * [Authentication with AD](https://radix.equinor.com/docs/topic-scenarios/#authentication-with-ad)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/alerting/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/alerting/)\n  * [CI/CD Pipeline](https://radix.equinor.com", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d523fa211721faf1436fd68470d703ac", "__created_at__": 1748191392.2717485, "content": "ix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/alerting/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/alerting/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/alerting/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/alerting/)\n  * [Jobs](https://radix.equinor.com/guides/alerting/)\n  * [Volume Mounts](https://radix.equinor.com/guides/alerting/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/alerting/)\n    * [Metrics](https://radix.equinor.com/guides/monitoring/)\n    * [Alerting](https://radix.equinor.com/guides/alerting/)\n  * [GitHub](https://radix.equinor.com/guides/alerting/)\n\n\n  * [](https://radix.equinor.com/)\n  * Monitoring\n  * Alerting\n\n\nOn this page\n# Alerting\nRadix can send alerts about failing pipeline jobs, components or jobs to Slack using [Incoming Webhooks](https://api.slack.com/messaging/webhooks).\nThe alert message contains information about the pipeline job, component or job that is failing, the name of the application and optionally the environment name where the alert was triggered.\nFor alerts that are triggered due to missing prerequisites, e.g. missing secrets for components or jobs, a **RESOLVED** message will be sent when the cause of the alert is fixed.\nAlerting must be enabled and configured per application for pipeline jobs, and for each environment within the application for components and jobs.\n## Configure alerting for components and jobs in an environment[​](https://radix.equinor.com/guides/alerting/#configure-alerting-for-components-and-jobs-in-an-environment \"Direct link to Configure alerting for components and jobs in an environment\")\nIf alerting is enabled for an application environment, Radix will send alerts to Slack if any of the following errors occur:\n  * A **component** or **job** is unable to start due to missing secrets, or if the [Readiness Probe](https://radix.equinor.com/docs/topic-rollingupdate/#readiness-probe) is unable to verify that the container is running correctly. A 10 minute grace period is given from the alert is triggered until the message is sent. A **RESOLVED** message is sent once the underlying cause of this alert is resolved.\n  * A **component** crashes/exits, e.g. due to insufficient memory or unhandled exceptions causing the application to exit. A **RESOLVED** message is sent once the component has been able to run for more than five minutes after this alert has been sent.\n  * A **job** exits with an non-zero exit code, or is killed due to insufficient memory.\n\n\n**Example of an alert message and corresponding RESOLVED message** ![component slack alert](https://radix.equinor.com/assets/images/component-slackalert-05e7ec08cd935eb157da3fccf2e9461b.png) ![component slack resolved](https://radix.equinor.com/assets/images/component-slackresolved-16aab9825e7e554c366527ee764905a1.png)\nTo enable alerting for an application environment, open [Radix Web Console](https://console.radix.equinor.com/), navigate to an application and open one of the environment pages. ![environment overview](https://radix.equinor.com/assets/images/environment-overview-bd796ddad49586930645a16c9042bd62.png)\nIn this example, alerting is disabled for components and jobs for the environment. To enable alerting, click **Setup alert** on the environment page and **Enable Alerts** in the dialog. ![alerting enable](https://radix.equinor.com/assets/images/alerting-enable-21cd7d283d68920eaa8524599610c58c.png)\nEnter the Slack Webhook URL where alerts should be sent in the text box and click **Save**. ![alerting webhook](https://radix.equinor.com/assets/images/alerting-setwebhook-62b7b5304c03ab2d3571173cd61a472e.png)\nIf save is successful, the text **Slack webhook URL is configured** is displayed in the", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-85aeae5532aae23c4bc40d28543f9598", "__created_at__": 1748191392.2717485, "content": "7d283d68920eaa8524599610c58c.png)\nEnter the Slack Webhook URL where alerts should be sent in the text box and click **Save**. ![alerting webhook](https://radix.equinor.com/assets/images/alerting-setwebhook-62b7b5304c03ab2d3571173cd61a472e.png)\nIf save is successful, the text **Slack webhook URL is configured** is displayed in the dialog. ![alerting configured](https://radix.equinor.com/assets/images/alerting-configured-46767447a6a55ad9800d47336beee720.png)\nTo disable alerting, click **Disable Alerts**. If alerting is re-enabled, the Slack webhook URL must be re-entered.\nTo update the Slack webhook URL, click **Setup alert** in the environment page, then **Edit** in the dialog, enter the the new URL and click **Save**.\n## Configure alerting for pipeline jobs[​](https://radix.equinor.com/guides/alerting/#configure-alerting-for-pipeline-jobs \"Direct link to Configure alerting for pipeline jobs\")\nWhen alerting is enabled for pipeline jobs, Radix will send an alert to Slack if a job fails. All job types (build-deploy, promote, deploy) for all environments are monitored.\n**Example of alert message for a failed pipeline job** ![pipeline-jobs slack alert](https://radix.equinor.com/assets/images/pipeline-job-slackmessage-ce7a879dd737f47fcc752e000f55ece0.png)\nTo enable alerting for pipeline jobs, open [Radix Web Console](https://console.radix.equinor.com/), navigate to an application and open **Pipeline Jobs**. Alerting status and configuration is located in the top-right area of the page. Follow the same procedure as described in [Configure alerting for components and jobs in an environment](https://radix.equinor.com/guides/alerting/#configure-alerting-for-components-and-jobs-in-an-environment) to configure alerting.\n![pipeline-job overview](https://radix.equinor.com/assets/images/pipeline-job-overview-670ae555295e903278f706f04d8e6e30.png)\n[PreviousMetrics](https://radix.equinor.com/guides/monitoring/)[NextGit submodules](https://radix.equinor.com/guides/git-submodules/)\n  * [Configure alerting for components and jobs in an environment](https://radix.equinor.com/guides/alerting/#configure-alerting-for-components-and-jobs-in-an-environment)\n  * [Configure alerting for pipeline jobs](https://radix.equinor.com/guides/alerting/#configure-alerting-for-pipeline-jobs)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-secrets/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/build-secrets/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/build-secrets/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/build-secrets/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/build-secrets/)\n  * [Jobs](https://radix.equinor.com/guides/build-secrets/)\n  * [Volume Mounts](https://radix.equinor.com/guides/build-secrets/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/build-secrets/)\n  * [GitHub](https://radix.equinor.com/guides/build-secrets/)\n\n\n  * [](https://radix.equinor.com/)\n  * Build Secrets\n\n\nOn this page\n# Build secrets\n  * [With an option `useBuildKit: false`](https://radix.equinor.com/guides/build-secrets/#", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2e9b0d0487ff0210032fb8447042d0fb", "__created_at__": 1748191392.2717485, "content": "/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/build-secrets/)\n  * [GitHub](https://radix.equinor.com/guides/build-secrets/)\n\n\n  * [](https://radix.equinor.com/)\n  * Build Secrets\n\n\nOn this page\n# Build secrets\n  * [With an option `useBuildKit: false`](https://radix.equinor.com/guides/build-secrets/#build-secrets-without-buildkit)\n  * [With an option `useBuildKit: true`](https://radix.equinor.com/guides/build-secrets/#build-secrets-with-buildkit)\n\n\n## Build secrets without BuildKit[​](https://radix.equinor.com/guides/build-secrets/#build-secrets-without-buildkit \"Direct link to Build secrets without BuildKit\")\nWith an option `spec.build.useBuildKit: false`, to ensure that multiline build secrets are handled correct by the build, **all** [Build secrets](https://radix.equinor.com/radix-config/#secrets) are passed as `ARG`-s during container build, base-64 encoded (they need to be decoded before use).\n```\nFROM alpine#an argument, passed to `docker build` with `--build-arg` optionARG SECRET1#decode `SECRET1` argument and assign it to `BUILD_ARG` variable for further commands in this `RUN`RUN BUILD_ARG=$(echo $SECRET1|base64 -d) && \\#instead of `echo...|wc` - use real command with $BUILD_ARG argument  echo $BUILD_ARG|wc -m\n```\n\nIn the example above - the actual command can be used instead of `echo` command. However `echo` is useful during development to validate what values have been passed via the `--build-arg` option to the `docker build` command (this is how [build secrets](https://radix.equinor.com/radix-config/#secrets) from `radixconfig` are passed in Radix during the build pipeline). Use `docker build` arguments `--progress=plain --no-cache` for such validation on development computer\n```\ndocker build . --build-arg SECRET1=$(echo\"some-build-arg\"|base64)--progress=plain --no-cache\n```\n\ntip\nNote! An `ARG` instruction _goes out of scope_ at the end of the build stage where it was defined. To use an `ARG` in multiple stages, each stage must include the `ARG` instruction ([docs](https://docs.docker.com/engine/reference/builder/#arg)):\n```\n# Use SDK image (first stage)FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build-env#an argument, passed to `docker build` with `--build-arg` optionARG SECRET1#.....# Build runtime image (second stage)FROM mcr.microsoft.com/dotnet/aspnet:5.0#repeate the argument, passed to `docker build` with `--build-arg` optionARG SECRET1#.....\n```\n\n## Build secrets with BuildKit[​](https://radix.equinor.com/guides/build-secrets/#build-secrets-with-buildkit \"Direct link to Build secrets with BuildKit\")\nWith an option `spec.build.useBuildKit: true`, build secrets are not available as `ARG`-s during container build. [Build secrets](https://radix.equinor.com/radix-config/#secrets) can be mounted as files within the `RUN` directive. BuildKit is an improved backend to replace the legacy builder. Read [more](https://docs.docker.com/build/buildkit/).\ntip\nDocker build workflow has some differences for the command `docker build`, for example how [ARG](https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact) with BuildKit [persists across build stages](https://github.com/moby/buildkit/issues/1977).\nMount a secret with secret name as `id:SECRET1` argument and assign its to `BUILD_ARG`, reading it from the file in the folder `/run/secrets`, where it is mounted with a file name same as the secret's name\nSyntax: `RUN --mount=type=secret,id=SECRET_NAME,dst=DESTINATION_PATH COMMAND`, where:\n  * `SECRET_NAME` is a name of a build secret, defined in the radixconfig.yaml `spec.build.secrets` option.\n  * `COMMAND` is a single or multiple commands (separated by &&, semicolon or space), which can use the file with a secret.\n  * `DESTINATION_PATH` is an optional path to a folder, where file with a secret will be created. Default is `/run/secrets`, if not specified.\n\n\n```\nFROM alpine#one secret in the specified destination file and folder /abc/my-secrets/secret-1.txtRUN--mount=type=secret,id=SECRET1,dst=/abc/my-secrets/secret-1.txt export BUILD_ARG=$(cat /abc/my-secrets/secret-1.txt) && \\#instead of `echo...|wc` - use real command with $BUILD_ARG argument  echo $BUILD_ARG|wc -m #one secret in the default destination file and folder /run/secrets and a file with a name, the same as the secret nameRUN--mount=type=secret,id=SECRET1 export BUILD_ARG=$(cat /run/secrets/SECRET1) && \\#instead of `echo...|wc` - use real command with $BUILD_ARG argument  echo $BUILD_ARG|wc -m \n```\n\n### Development and troubleshooting[​](", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-120238a5cef32cb3a3aa6aa9880610ab", "__created_at__": 1748191392.2717485, "content": "argument  echo $BUILD_ARG|wc -m #one secret in the default destination file and folder /run/secrets and a file with a name, the same as the secret nameRUN--mount=type=secret,id=SECRET1 export BUILD_ARG=$(cat /run/secrets/SECRET1) && \\#instead of `echo...|wc` - use real command with $BUILD_ARG argument  echo $BUILD_ARG|wc -m \n```\n\n### Development and troubleshooting[​](https://radix.equinor.com/guides/build-secrets/#development-and-troubleshooting \"Direct link to Development and troubleshooting\")\nFor verification that secrets are used as expected, Docker image can be built and run locally. Environment variable `DOCKER_BUILDKIT=1` is set for the command in case if the build ToolKit is not set [by default](https://docs.docker.com/build/buildkit/#getting-started) for the local Docker engine:\n  * Create a `Dockerfile`, which uses a secret (see an example above)\n  * Create a local file, containing a secret: `/some-path/secret1.txt`\n  * Build a Docker image with an option `--secret`, referring to this file path and the secret name, used in the Dockerfile \n```\nDOCKER_BUILDKIT=1docker build .--secretid=SECRET1,src=/some-path/secret1.txt -t some-image-name\n```\n\n    * To see full build log and avoid cached layers, add options `--progress=plain --no-cache`\n    * To easy run the built image, add a target image name `-t some-image-name`\n```\nDOCKER_BUILDKIT=1docker build .--secretid=SECRET1,src=/some-path/secret1.txt -t some-image-name --progress=plain --no-cache\n```\n\n  * Optionally, run the built image to verify that secrets used as expected \n```\ndocker run -it some-image-name\n```\n\n  * Multiple build secrets can be added as multiple `RUN --mount` options (and `docker build` options `--secrets`). Different `dst` files can be used \n```\nFROM alpine#one secret in the specified destination file and folder /abc/my-secrets/secret-1.txt#newer echo secrets in real codeRUN--mount=type=secret,id=SECRET1,dst=/abc/my-secrets/secret-1.txt\\--mount=type=secret,id=DB_PASSWORD,dst=/config/db-pass.txt\\  export BUILD_ARG=$(cat /abc/my-secrets/secret-1.txt) && \\  export DB_PASS=$(cat /config/db-pass.txt) && \\#instead of `echo...|wc` - use real command with $BUILD_ARG env-var  echo $BUILD_ARG|wc -m && \\#instead of `echo...|wc` - use real command with $DB_PASS env-var  echo $DB_PASS|wc -m\n```\n\nRun it locally \n```\nDOCKER_BUILDKIT=1docker build .--secretid=SECRET1,src=/some-path/secret1.txt --secretid=DB_PASSWORD,src=/maybe-another-path/db_password.txt -t some-image-name --progress=plain --no-cache\n```\n\n  * Files, created by a `RUN --mount` options are available only for commands, executed in that particular `RUN`, not in following `RUN` commands or within Docker container, running with this image.\n  * If a file, specified in the `dst` option already exists, it will be overridden in the `RUN`, where the `--mount` option use it, but it will have original content in further layers \n```\nFROM alpine#put some original text to a file /abc/db_server.txtRUN mkdir -p /abc && echo \"default-server-name\">/abc/db_server.txt#verify the file contents a text \"default-server-name\"RUN cat /abc/db_server.txt#get secret value to the same file and veryfy it contains a value from the secret, overriding the original textRUN--mount=type=secret,id=SECRET1,dst=/abc/db_server.txt cat /abc/db_server.txt#verify the file again contents text \"default-server-name\"RUN cat /abc/db_server.txt\n```\n\n  * Secrets can contain multi-line text, for example - configuration files\n  * With an option `spec.build.useBuildKit: true` components are built not in the Azure ACR task, but within the Radix Kubernetes cluster. Such pipeline job can encounter some performance difference, which will be monitored and tuned.\n\n\n[PreviousStatus Badges](https://radix.equinor.com/guides/pipeline-badge/)[NextEnvironment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Build secrets without BuildKit](https://radix.equinor.com/guides/build-secrets/#build-secrets-without-buildkit)\n  * [Build secrets with BuildKit](https://radix.equinor.com/guides/build-secrets/#build-secrets-with-buildkit)\n    * [Development and troubleshooting](https://radix.equinor.com/guides/build-secrets/#development-and-troubleshooting)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/apply-config/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-11c654449023ba612f9ba56c8d0f9d56", "__created_at__": 1748191392.2717485, "content": "[Skip to main content](https://radix.equinor.com/guides/apply-config/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/apply-config/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/apply-config/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Apply Config](https://radix.equinor.com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/apply-config/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/apply-config/)\n  * [Jobs](https://radix.equinor.com/guides/apply-config/)\n  * [Volume Mounts](https://radix.equinor.com/guides/apply-config/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/apply-config/)\n  * [GitHub](https://radix.equinor.com/guides/apply-config/)\n\n\n  * [](https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Apply Config\n\n\n# Apply Config\n[radixconfig.yaml](https://radix.equinor.com/radix-config/) has properties, which do not require redeploy of components. The `apply-config` pipeline workflow perform these changes without re-deploying components or jobs. Currently it apply changes in : [DNS alias](https://radix.equinor.com/radix-config/#dnsalias), [build secrets](https://radix.equinor.com/radix-config/#secrets), [environments](https://radix.equinor.com/radix-config/#environments) (create new or soft-delete existing).\n[PreviousDeployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)[NextSub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/features/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Features in Omnia Radix](https://radix.equinor.com/features/)\n\n\n  * [](https://radix.equinor.com/)\n  * Features in Omnia Radix\n\n\nOn this page\n# Features in Omnia Radix\nSorted sort of alphabeticly.\n## Alerting and notification[​](https://radix.equinor.com/features/#alerting-and-notification \"Direct link to Alerting and notification\")\nRadix can send alerts about failing pipeline jobs, components or jobs to Slack using Incoming Webhooks.\n[Guide](https://radix.equinor.com/guides/alerting/)\n## Authentication[​](https://radix.equinor.com/features/#authentication \"Direct link to Authentication\")\n[Guide](https://radix.equinor.com/guides/authentication", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e519a3d99cad17ad4b02d55000214b59", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/features/#alerting-and-notification \"Direct link to Alerting and notification\")\nRadix can send alerts about failing pipeline jobs, components or jobs to Slack using Incoming Webhooks.\n[Guide](https://radix.equinor.com/guides/alerting/)\n## Authentication[​](https://radix.equinor.com/features/#authentication \"Direct link to Authentication\")\n[Guide](https://radix.equinor.com/guides/authentication/) - [Radix config reference](https://radix.equinor.com/radix-config/#authentication)\n### Client certificates[​](https://radix.equinor.com/features/#client-certificates \"Direct link to Client certificates\")\nClientCertificates, which can be configured for a component or a specific environment.\n[Radix config reference](https://radix.equinor.com/radix-config/#clientcertificate)\n### OAuth service[​](https://radix.equinor.com/features/#oauth-service \"Direct link to OAuth service\")\nRadix provides built-in configuration for adding OAuth2 authorization with OIDC to the component. Common `oauth2` settings can be configured at component level and/or in the component's `environmentConfig` section.\n[Guide](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature) - [Radix config reference](https://radix.equinor.com/radix-config/#oauth2)\n## Azure Blob Storage CSI driver[​](https://radix.equinor.com/features/#azure-blob-storage-csi-driver \"Direct link to Azure Blob Storage CSI driver\")\nThis driver allows Kubernetes to access Azure Storage - Blobs.\n[Guide](https://radix.equinor.com/guides/volume-mounts) - [Radix config reference](https://radix.equinor.com/radix-config/#volumemounts)\n## Azure Key Vault integration[​](https://radix.equinor.com/features/#azure-key-vault-integration \"Direct link to Azure Key Vault integration\")\nAzure Key Vault secrets, keys and certificates can be used in Radix as secrets. Once configured, they are available in replicas of Radix application as environment variables and files.\n[Guide](https://radix.equinor.com/guides/azure-key-vaults/) - [Radix config reference](https://radix.equinor.com/radix-config/#azurekeyvault)\nKey Vault secret, keys and certificates are listed as variables in web console, including version information.\n[Guide](https://radix.equinor.com/guides/azure-key-vaults/#azure-key-vault-secret-certificate-and-key-versions)\nAutorotation of secrets\n[Guide](https://radix.equinor.com/guides/azure-key-vaults/#autorotation-of-secrets)\n## Azure Workload Identity[​](https://radix.equinor.com/features/#azure-workload-identity \"Direct link to Azure Workload Identity\")\nSome workloads (component or job replicas) running in Radix require credentials (JWT access tokens) for an Azure AD app registration or user-assigned managed identity to access Azure AD protected resources, like MS Graph, Key Vaults, Storage Accounts or Azure SQL Databases. Credentials for such workloads can be acquired using the OAuth 2.0 client credentials flow. The client credentials flow permits a workload to use its own credentials to access protected resources instead of impersonating a user. Credentials can be acquired by using either a shared secret, a certificate or with federated credentials.\n[Guide](https://radix.equinor.com/guides/workload-identity/) - [Radix config reference](https://radix.equinor.com/radix-config/#identity)\n## Backup[​](https://radix.equinor.com/features/#backup \"Direct link to Backup\")\nApplication configuration is backed up every hour using Velero and that backup is stored in the Azure Storage account.\n## Auto build and/or deploy on GitHub commit[​](https://radix.equinor.com/features/#auto-build-andor-deploy-on-github-commit \"Direct link to Auto build and/or deploy on GitHub commit\")\nContinuous integration/deployment (CI/CD), using a GitHub Webhook, secured by a deploy key and a webhook secret.\n[Doc](https://radix.equinor.com/start/radix-concepts/#continuous-integration-and-deployment) - [Guide](https://radix.equinor.com/guides/build-and-deploy/)\n### Workflows[​](https://radix.equinor.com/features/#workflows \"Direct link to Workflows\")\nIt is possible to use, for instance Git Flow or Trunk-based development. Radix gives us a couple of tools to shape our workflow: branch-environment mapping and deployment promotion.\n[Doc](https://radix.equinor.com/start/workflows/)\n## Build and deploy pipeline[​](https://radix.equinor.com/features/#build-and-deploy-pipeline \"Direct link to Build and deploy pipeline\")\nThe most used pipeline is the build and deploy pipeline, which builds the application and deploys the resulting image(s).\n[Guide](https://radix.equinor.com/guides/build-and-deploy/)\n## Deploy only pipeline[​](https://radix.equinor.com/features/#deploy-only-pipeline \"Direct link to Deploy only pipeline\")\nAnother pipeline is the deploy only pipeline, which deployes a already built image.\n[Guide](https://radix.equinor.com/guides/deploy-only/) - [Radix config reference](https://radix.equinor.com/guides/deploy-only/#the-radixconfigyaml-file)\n### AD Service Access Token[​](https://radix.e", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-fca033ed0248d895c81af5e43ce8133c", "__created_at__": 1748191392.2717485, "content": "](https://radix.equinor.com/features/#deploy-only-pipeline \"Direct link to Deploy only pipeline\")\nAnother pipeline is the deploy only pipeline, which deployes a already built image.\n[Guide](https://radix.equinor.com/guides/deploy-only/) - [Radix config reference](https://radix.equinor.com/guides/deploy-only/#the-radixconfigyaml-file)\n### AD Service Access Token[​](https://radix.equinor.com/features/#ad-service-access-token \"Direct link to AD Service Access Token\")\nIn order to run a deploy-only pipeline job, Azure service principals Azure AD app registration or user-assigned managed identity can be used.\n[Guide](https://radix.equinor.com/guides/deploy-only/#ad-service-principal-access-token)\n## Promote pipeline[​](https://radix.equinor.com/features/#promote-pipeline \"Direct link to Promote pipeline\")\nPromote a deployment to another or the same environment.\n[Guide](https://radix.equinor.com/guides/deployment-promotion/#promote-to-another-environment)\n### Rollback to any version (as part of Promote)[​](https://radix.equinor.com/features/#rollback-to-any-version-as-part-of-promote \"Direct link to Rollback to any version \\(as part of Promote\\)\")\nIt is easy to rollback to an earlier version, using the promote pipeline (yes, it should have been called demote - or rollback)\n[Guide](https://radix.equinor.com/guides/deployment-promotion/#promote-an-old-deploymentrollback)\n## Build secrets[​](https://radix.equinor.com/features/#build-secrets \"Direct link to Build secrets\")\nNamed values, entered in the Radix console, passed as arguments to a Dockerfile build operation.\n[Guide](https://radix.equinor.com/guides/build-secrets/) - [Radix config reference](https://radix.equinor.com/radix-config/#secrets)\n## Certificates, SSL certificates[​](https://radix.equinor.com/features/#certificates-ssl-certificates \"Direct link to Certificates, SSL certificates\")\nOnly HTTPS traffic is allowed in and out of the application. SSL certificates are automatically managed by Radix, except for custom external aliases.\n[Doc](https://radix.equinor.com/docs/topic-runtime-env/#traffic) - [Radix config reference](https://radix.equinor.com/radix-config/#clientcertificate)\n### Custom certificate[​](https://radix.equinor.com/features/#custom-certificate \"Direct link to Custom certificate\")\nManaging your own certificate is possible. Adding the certificate information to your application is done using the Radix Console\n[Guide](https://radix.equinor.com/guides/external-alias-certificate/)\n## Component and/or Environment stop/start/restart[​](https://radix.equinor.com/features/#component-andor-environment-stopstartrestart \"Direct link to Component and/or Environment stop/start/restart\")\nStop, Scale, Reset and Restart of a running component or all components in an environment can be done in the Web console.\n[Guide](https://radix.equinor.com/guides/component-start-stop-restart/)\n## Command Line (Radix CLI)[​](https://radix.equinor.com/features/#command-line-radix-cli \"Direct link to Command Line \\(Radix CLI\\)\")\nRadix offers a command line interface - Radix CLI, which uses the command rx.\n[Docs](https://radix.equinor.com/docs/topic-radix-cli/)\n## Container logs in Radix console and Radix CLI[​](https://radix.equinor.com/features/#container-logs-in-radix-console-and-radix-cli \"Direct link to Container logs in Radix console and Radix CLI\")\nContainer logs can be accessed using Radix Web Console or Radix CLI.\n[Docs](https://radix.equinor.com/docs/topic-logs/)\n## Code editor integrations - radixconfig.yaml schema validation[​](https://radix.equinor.com/features/#code-editor-integrations---radixconfigyaml-schema-validation \"Direct link to Code editor integrations - radixconfig.yaml schema validation\")\nEnable auto-completion and schema validation for `radixconfig.yaml` in VS Code and Jetbrains IDEs.\n[Guide](https://radix.equinor.com/docs/topic-code-editor-integration)\n## Cost calculation[​](https://radix.equinor.com/features/#cost-calculation \"Direct link to Cost calculation\")\nCost calculation is based on the total time the replicas(containers) belonging to an application has been running, and how much CPU and memory the replicas requested.\n[Doc](https://radix.equinor.com/docs/topic-cost/#how-is-the-cost-calculated)\n## DNS aliases[​](https://radix.equinor.com/features/#dns-aliases \"Direct link to DNS aliases\")\nEach application can have one specific component in one specific environment set as the default alias.\n[Doc](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias) - [Radix config reference](https://radix.equinor.com/radix-config/#dnsappalias)\n## External alias[​](https://radix.equinor.com/features/#external-alias \"Direct link to External alias\")\nIt is possible to have multiple custom DNS aliases (i.e. to choose your own custom domain) for the application.\n[Doc](https://radix.equinor.com/docs/topic-domain-names/#external-alias) [Guide](https://radix.equinor.com/guides/external-alias/) - [Radix config reference](https://radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-8b467174fed8e78b9ed6b75bd9de9c84", "__created_at__": 1748191392.2717485, "content": "External alias[​](https://radix.equinor.com/features/#external-alias \"Direct link to External alias\")\nIt is possible to have multiple custom DNS aliases (i.e. to choose your own custom domain) for the application.\n[Doc](https://radix.equinor.com/docs/topic-domain-names/#external-alias) [Guide](https://radix.equinor.com/guides/external-alias/) - [Radix config reference](https://radix.equinor.com/radix-config/#dnsexternalalias)\n## Egress rules[​](https://radix.equinor.com/features/#egress-rules \"Direct link to Egress rules\")\nAn egress configuration can define rules for outbound traffic from a Radix application.\n[Guide](https://radix.equinor.com/guides/egress-config/) - [Radix config reference](https://radix.equinor.com/radix-config/#egress)\n## Enable/disable components[​](https://radix.equinor.com/features/#enabledisable-components \"Direct link to Enable/disable components\")\nComponents can be enabled or disabled for all or only certain environments.\n[Guide](https://radix.equinor.com/guides/enable-and-disable-components/) - [Radix config reference](https://radix.equinor.com/radix-config/#enabled)\n## Environment(s)[​](https://radix.equinor.com/features/#environments \"Direct link to Environment\\(s\\)\")\n[Doc](https://radix.equinor.com/start/radix-concepts/#environment)\n### Environment variables[​](https://radix.equinor.com/features/#environment-variables \"Direct link to Environment variables\")\n[Doc](https://radix.equinor.com/docs/topic-runtime-env/#environment-variables) - [Guide](https://radix.equinor.com/guides/environment-variables)\n### Multiple environments[​](https://radix.equinor.com/features/#multiple-environments \"Direct link to Multiple environments\")\n[Doc](https://radix.equinor.com/start/workflows/#branches-mapped-to-different-environments)\n## Horizontal autoscaling[​](https://radix.equinor.com/features/#horizontal-autoscaling \"Direct link to Horizontal autoscaling\")\nNumber of replicas can be used to horizontally scale.\n[Radix config](https://radix.equinor.com/radix-config/#horizontalscaling)\n## Job manager[​](https://radix.equinor.com/features/#job-manager \"Direct link to Job manager\")\n[Guide](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) - [Radix config reference](https://radix.equinor.com/radix-config/#jobs)\n## Job batches[​](https://radix.equinor.com/features/#job-batches \"Direct link to Job batches\")\n[Guide](https://radix.equinor.com/guides/jobs/configure-jobs)\n## Jobs[​](https://radix.equinor.com/features/#jobs \"Direct link to Jobs\")\n[Guide](https://radix.equinor.com/guides/jobs)\n## Kubernetes Cluster node autoscaling[​](https://radix.equinor.com/features/#kubernetes-cluster-node-autoscaling \"Direct link to Kubernetes Cluster node autoscaling\")\nFor modern application development in Kubernetes and in Radix it is preferred to create applications that scales horizontally rather than vertically.\n[Guide](https://radix.equinor.com/guides/resource-request/#autoscaling)\n## Advanced autoscaling using KEDA[​](https://radix.equinor.com/features/#advanced-autoscaling-using-keda \"Direct link to Advanced autoscaling using KEDA\")\nSupport for advanced autoscaling enabled, KEDA triggers. Scaling of pods based on messages in a Azure Service Bus, or based on a CRON Schedule, as well as resource metrics (CPU/Memory). If you are using a non-resource trigger, we also support scaling to 0 replicas!\n[Radix config reference](https://radix.equinor.com/radix-config/#horizontalscaling)\n## Monorepo[​](https://radix.equinor.com/features/#monorepo \"Direct link to Monorepo\")\nIt is possible to have multiple Radix applications, using the same GitHub repository, also known as monorepo software development strategy.\n[Guide](https://radix.equinor.com/guides/monorepo)\n## Monitoring and metrics[​](https://radix.equinor.com/features/#monitoring-and-metrics \"Direct link to Monitoring and metrics\")\nPrometheus and Grafana are the main tools provided in Radix for analytics and monitoring visualisation.\n[Guide](https://radix.equinor.com/guides/monitoring/) - [Doc](https://radix.equinor.com/docs/topic-monitoring/) - [Radix config reference](https://radix.equinor.com/radix-config/#monitoring) and [config reference](https://radix.equinor.com/radix-config/#monitoringconfig)\n## Sub-pipelines (Tekton)[​](https://radix.equinor.com/features/#sub-pipelines-tekton \"Direct link to Sub-pipelines \\(Tekton\\)\")\nAfter \"Build components\" step (if it does not exist - after \"Prepare pipeline\" step), the step \"Run sub-pipeline\" runs optional sub-pipeline. Using the Tekton CI/CD framework.\n[Doc](https://radix.equinor.com/start/radix-concepts/#sub-pipeline) [Guide](https://radix.equinor.com/guides/sub-pipeline/) - [Tekton documentation](https://tekton", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f261a0ac3428a8710b28154f45d6f7b0", "__created_at__": 1748191392.2717485, "content": "Sub-pipelines \\(Tekton\\)\")\nAfter \"Build components\" step (if it does not exist - after \"Prepare pipeline\" step), the step \"Run sub-pipeline\" runs optional sub-pipeline. Using the Tekton CI/CD framework.\n[Doc](https://radix.equinor.com/start/radix-concepts/#sub-pipeline) [Guide](https://radix.equinor.com/guides/sub-pipeline/) - [Tekton documentation](https://tekton.dev/docs/pipelines/pipelines/)\n## Pipeline status badges[​](https://radix.equinor.com/features/#pipeline-status-badges \"Direct link to Pipeline status badges\")\nA pipeline status badge shows the status of the latest pipeline job of a specific type in a specific environment. Status is one of success, failing, stopped, pending or running.\n[Guide](https://radix.equinor.com/guides/pipeline-badge/)\n## Private container image repositories[​](https://radix.equinor.com/features/#private-container-image-repositories \"Direct link to Private container image repositories\")\nWhen using a Deploy only strategy, a private image is often used.\n[Guide](https://radix.equinor.com/guides/deploy-only/#the-radixconfigyaml-file) - [Radix config reference](https://radix.equinor.com/radix-config/#privateimagehubs)\n## Probes, monitoring container liveness[​](https://radix.equinor.com/features/#probes-monitoring-container-liveness \"Direct link to Probes, monitoring container liveness\")\nRadix uses readiness probe to minimize this downtime as close to zero as possible.\n[Doc](https://radix.equinor.com/docs/topic-rollingupdate/#readiness-probe)\n## Replica[​](https://radix.equinor.com/features/#replica \"Direct link to Replica\")\nA replica is a running instance of a component. As a normal process, it can write to the standard output (stdout), which is made available for inspection by Radix.\n[Doc](https://radix.equinor.com/start/radix-concepts/#replica)\n## Resource request[​](https://radix.equinor.com/features/#resource-request \"Direct link to Resource request\")\n`resources` is used to ensure that each container is allocated enough resources to run as it should.\n[Guide](https://radix.equinor.com/guides/resource-request/)\n## Rolling updates[​](https://radix.equinor.com/features/#rolling-updates \"Direct link to Rolling updates\")\nRadix aims to support zero downtime application re-deployment by utilising Kubernetes' rolling update and readiness probe features.\n[Doc](https://radix.equinor.com/docs/topic-rollingupdate/)\n## Runtime secrets[​](https://radix.equinor.com/features/#runtime-secrets \"Direct link to Runtime secrets\")\nSecrets are made available to components as environment variables\n[Doc](https://radix.equinor.com/start/radix-concepts/#secret)\n## Git Submodules[​](https://radix.equinor.com/features/#git-submodules \"Direct link to Git Submodules\")\nSubmodules is a native git feature which enables git repositories within other git repositories.\n[Guide](https://radix.equinor.com/guides/git-submodules/)\n## Vulnerability scanning[​](https://radix.equinor.com/features/#vulnerability-scanning \"Direct link to Vulnerability scanning\")\n## Web console (dashboard)[​](https://radix.equinor.com/features/#web-console-dashboard \"Direct link to Web console \\(dashboard\\)\")\n[Radix Web Console](https://console.radix.equinor.com/)\n  * [Alerting and notification](https://radix.equinor.com/features/#alerting-and-notification)\n  * [Authentication](https://radix.equinor.com/features/#authentication)\n    * [Client certificates](https://radix.equinor.com/features/#client-certificates)\n    * [OAuth service](https://radix.equinor.com/features/#oauth-service)\n  * [Azure Blob Storage CSI driver](https://radix.equinor.com/features/#azure-blob-storage-csi-driver)\n  * [Azure Key Vault integration](https://radix.equinor.com/features/#azure-key-vault-integration)\n  * [Azure Workload Identity](https://radix.equinor.com/features/#azure-workload-identity)\n  * [Backup](https://radix.equinor.com/features/#backup)\n  * [Auto build and/or deploy on GitHub commit](https://radix.equinor.com/features/#auto-build-andor-deploy-on-github-commit)\n    * [Workflows](https://radix.equinor.com/features/#workflows)\n  * [Build and deploy pipeline](https://radix.equinor.com/features/#build-and-deploy-pipeline)\n  * [Deploy only pipeline](https://radix.equinor.com/features/#deploy-only-pipeline)\n    * [AD Service Access Token](https://radix.equinor.com/features/#ad-service-access-token)\n  * [Promote pipeline](https://radix.equinor.com/features/#promote-pipeline)\n    * [Rollback to any version (as part of Promote)](https://radix.equinor.com/features/#rollback-to-any-version-as-part-of-promote)\n  * [Build secrets](https://radix.equinor.com/features/#build-secrets)\n  * [Certificates, SSL certificates](https://radix.equinor.com/features/#certificates-ssl-certificates)\n    * [Custom certificate](https://radix.equinor.com/features/#custom-certificate)\n  * [Component and/or Environment stop/start/restart](https://rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-324f131e7308fe6645eafa60430da1c4", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/features/#rollback-to-any-version-as-part-of-promote)\n  * [Build secrets](https://radix.equinor.com/features/#build-secrets)\n  * [Certificates, SSL certificates](https://radix.equinor.com/features/#certificates-ssl-certificates)\n    * [Custom certificate](https://radix.equinor.com/features/#custom-certificate)\n  * [Component and/or Environment stop/start/restart](https://radix.equinor.com/features/#component-andor-environment-stopstartrestart)\n  * [Command Line (Radix CLI)](https://radix.equinor.com/features/#command-line-radix-cli)\n  * [Container logs in Radix console and Radix CLI](https://radix.equinor.com/features/#container-logs-in-radix-console-and-radix-cli)\n  * [Code editor integrations - radixconfig.yaml schema validation](https://radix.equinor.com/features/#code-editor-integrations---radixconfigyaml-schema-validation)\n  * [Cost calculation](https://radix.equinor.com/features/#cost-calculation)\n  * [DNS aliases](https://radix.equinor.com/features/#dns-aliases)\n  * [External alias](https://radix.equinor.com/features/#external-alias)\n  * [Egress rules](https://radix.equinor.com/features/#egress-rules)\n  * [Enable/disable components](https://radix.equinor.com/features/#enabledisable-components)\n  * [Environment(s)](https://radix.equinor.com/features/#environments)\n    * [Environment variables](https://radix.equinor.com/features/#environment-variables)\n    * [Multiple environments](https://radix.equinor.com/features/#multiple-environments)\n  * [Horizontal autoscaling](https://radix.equinor.com/features/#horizontal-autoscaling)\n  * [Job manager](https://radix.equinor.com/features/#job-manager)\n  * [Job batches](https://radix.equinor.com/features/#job-batches)\n  * [Jobs](https://radix.equinor.com/features/#jobs)\n  * [Kubernetes Cluster node autoscaling](https://radix.equinor.com/features/#kubernetes-cluster-node-autoscaling)\n  * [Advanced autoscaling using KEDA](https://radix.equinor.com/features/#advanced-autoscaling-using-keda)\n  * [Monorepo](https://radix.equinor.com/features/#monorepo)\n  * [Monitoring and metrics](https://radix.equinor.com/features/#monitoring-and-metrics)\n  * [Sub-pipelines (Tekton)](https://radix.equinor.com/features/#sub-pipelines-tekton)\n  * [Pipeline status badges](https://radix.equinor.com/features/#pipeline-status-badges)\n  * [Private container image repositories](https://radix.equinor.com/features/#private-container-image-repositories)\n  * [Probes, monitoring container liveness](https://radix.equinor.com/features/#probes-monitoring-container-liveness)\n  * [Replica](https://radix.equinor.com/features/#replica)\n  * [Resource request](https://radix.equinor.com/features/#resource-request)\n  * [Rolling updates](https://radix.equinor.com/features/#rolling-updates)\n  * [Runtime secrets](https://radix.equinor.com/features/#runtime-secrets)\n  * [Git Submodules](https://radix.equinor.com/features/#git-submodules)\n  * [Vulnerability scanning](https://radix.equinor.com/features/#vulnerability-scanning)\n  * [Web console (dashboard)](https://radix.equinor.com/features/#web-console-dashboard)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/)\n  * [Jobs](https://radix.equinor.com/guides/)\n  * [Volume Mounts](https://radix.equinor.com/guides/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-181fdeeb68dc13856581e81f6131b2e6", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/)\n  * [Jobs](https://radix.equinor.com/guides/)\n  * [Volume Mounts](https://radix.equinor.com/guides/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/)\n  * [GitHub](https://radix.equinor.com/guides/)\n\n\n  * [](https://radix.equinor.com/)\n  * Guides\n\n\n# Radix guides\nThe basic requirements are covered in [Getting started](https://radix.equinor.com/start/).\nThese guides will provide a more elaborate description of features in Radix.\n[NextWhat is a Container](https://radix.equinor.com/guides/docker/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/build-and-deploy/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Apply Config](https://radix.equinor.com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/build-and-deploy/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/build-and-deploy/)\n  * [Jobs](https://radix.equinor.com/guides/build-and-deploy/)\n  * [Volume Mounts](https://radix.equinor.com/guides/build-and-deploy/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/build-and-deploy/)\n  * [GitHub](https://radix.equinor.com/guides/build-and-deploy/)\n\n\n  * [](https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Build and Deploy\n\n\nOn this page\n# Build and Deploy\nTL;DR\n  * Pipeline jobs created manually from `Radix Web Console` or `Radix CLI` will always build all components and jobs.\n  * For pipeline jobs created from a `Github webhook`, Radix will only build components and jobs that affected by the changes, and reuse images from the active deployment for unchanged components/jobs.\n  * When Radix detects that `radixconfig.yaml` is modified, all components and jobs are built.\n  * When values for `build secrets` defined in radixconfig.yaml, are updated, the next pipeline job will build all components and jobs.\n\n\nThe [`build-deploy`](https://radix.equinor.com/start/workflows/) pipeline builds and deploys container images from Dockerfiles for components and jobs that do not have the [`image`](https://radix.equinor.com/radix-config/#image) property set", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-68066384e25ee24bb784242ab9e1e4cd", "__created_at__": 1748191392.2717485, "content": "ixconfig.yaml` is modified, all components and jobs are built.\n  * When values for `build secrets` defined in radixconfig.yaml, are updated, the next pipeline job will build all components and jobs.\n\n\nThe [`build-deploy`](https://radix.equinor.com/start/workflows/) pipeline builds and deploys container images from Dockerfiles for components and jobs that do not have the [`image`](https://radix.equinor.com/radix-config/#image) property set in [`radixconfig.yaml`](https://radix.equinor.com/radix-config). The name and path of the Dockerfile for each component and job is defined in the [`dockerfileName`](https://radix.equinor.com/radix-config/#dockerfilename) and [`src`](https://radix.equinor.com/radix-config/#src) properties.\nBy default, the container image is built and deployed using `amd64` CPU architecture, but this can be configured to use `arm64` in the [`runtime`](https://radix.equinor.com/radix-config/#runtime-1) section in `radixconfig.yaml`.\nA `build-deploy` pipeline job can be created manually from [`Radix Web Console`](https://console.radix.equinor.com/) or [`Radix CLI`](https://radix.equinor.com/docs/topic-radix-cli/), or automatically when code is pushed to the application's Github repository, if a [GitHub webhook](https://docs.github.com/en/developers/webhooks-and-events/webhooks/about-webhooks) is configured. Instructions on how to configure a Github webhook can be found in the `Webhook` section on the application's configuration page in Radix Web Console.\nFor manually created pipeline jobs, Radix will always build container images for all components and jobs. When a pipeline job is created by a Github webhook, Radix compares the commit ID from the webhook request body with the commit ID of the active deployment, to detect which directories have changed. The list of changed directories are then compared to the path of the Dockerfile for each component and job. If any of the changed directories are equal to, or a child of the Dockerfile path, a new image is built for the matching component or job. Radix will reuse the image from the current active deployment for components and jobs that have not changed.\ntip\nThe path to the Dockerfile is defined by the `src` and `dockerfileName` properties. `dockerfileName` can contain path elements relative to `src`, for example `../Dockerfile` or `myfolder/Dockerfile`.\nSee [`dockerfileName`](https://radix.equinor.com/radix-config/#dockerfilename) and [`src`](https://radix.equinor.com/radix-config/#src) for more information.\nWhen Radix detects that `radixconfig.yaml` or `build secret` values have changed, all components and jobs are built.\nIf no changes are detected, and [`sub-pipeline`](https://radix.equinor.com/guides/sub-pipeline/) is not configured, the pipeline job is stopped with status `Stopped no changes`.\nThe log from the `Orchestrating pipeline` step prints decisions made by Radix whether to build new images, reuse images from current deployment or use images from `image` property in `radixconfig`.\n#### Log examples[​](https://radix.equinor.com/guides/build-and-deploy/#log-examples \"Direct link to Log examples\")\nComponent `server` was changed, and a new container image is built. `compute` and `compute2` are unchanged, and images from active deployment are used. Image for `redis` is configured in `image` property in `radixconfig`:\n```\ntime=\"2023-11-13T14:44:31Z\" level=info msg=\"Component image source in environments:\"time=\"2023-11-13T14:44:31Z\" level=info msg=\" qa:\"time=\"2023-11-13T14:44:31Z\" level=info msg=\"  - server (arch: amd64) from build\"time=\"2023-11-13T14:44:31Z\" level=info msg=\"  - redis from image in radixconfig\"time=\"2023-11-13T14:44:31Z\" level=info msg=\"  - compute from active deployment\"time=\"2023-11-13T14:44:31Z\" level=info msg=\"  - compute2 from active deployment\"\n```\n\nChanged `radixconfig`, requiring all components to be built:\n```\ntime=\"2023-11-13T14:42:56Z\" level=info msg=\"RadixApplication updated since last deployment to environment qa\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"Component image source in environments:\"time=\"2023-11-13T14:42:56Z\" level=info msg=\" qa:\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"  - server (arch: amd64) from build\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"  - redis from image in radixconfig\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"  - compute (arch: amd64) from build\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"  - compute2 (arch: amd64) from build\"\n```\n\nChanged `build secret` values, requiring all components to be built:\n```\ntime=\"2023-11-", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-032da5d2e404fcccdd079fb8e85ea5ed", "__created_at__": 1748191392.2717485, "content": "=\"  - redis from image in radixconfig\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"  - compute (arch: amd64) from build\"time=\"2023-11-13T14:42:56Z\" level=info msg=\"  - compute2 (arch: amd64) from build\"\n```\n\nChanged `build secret` values, requiring all components to be built:\n```\ntime=\"2023-11-13T14:37:44Z\" level=info msg=\"Build secrets updated since last deployment to environment dev\"time=\"2023-11-13T14:37:44Z\" level=info msg=\"Component image source in environments:\"time=\"2023-11-13T14:37:44Z\" level=info msg=\" qa:\"time=\"2023-11-13T14:37:44Z\" level=info msg=\"  - server (arch: amd64) from build\"time=\"2023-11-13T14:37:44Z\" level=info msg=\"  - redis from image in radixconfig\"time=\"2023-11-13T14:37:44Z\" level=info msg=\"  - compute (arch: amd64) from build\"time=\"2023-11-13T14:37:44Z\" level=info msg=\"  - compute2 (arch: amd64) from build\"\n```\n\n#### Example[​](https://radix.equinor.com/guides/build-and-deploy/#example \"Direct link to Example\")\nTo illustrate, consider an application with the following directory layout:\n```\n├── foo/│  ├── images/│  │  └── logo.jpg│  ├── main.js│  └── Dockerfile├── bar/│  ├── main.js│  ├── README.md│  └── Dockerfile├── CHANGE_LOG.md└── radixconfig.yaml\n```\n\nand corresponding radixconfig.yaml:\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: myappspec:build:secrets:- SECRET1- SECRET2components:-name: foosrc: /foo-name: barsrc: /bar\n```\n\nComponents `foo` and `bar` are configured with different directories for their Dockerfiles. We assume that an active deployment already exist, created from a `build-deploy` pipeline that built and deployed images named `foo:tag1` and `bar:tag1` for the `foo` and `bar` components respectively.\nThe application developer performs the following actions:\n  1. Pushes a new file, `/foo/images/header.jpg`, to the repository: \n     * A new `build-deploy` pipeline is created by the Github webook.\n     * Radix compares the commit ID received from the webhook with the commit ID of the current deployment, and detects that directory `/foo/images` has changed. This directory is a child of `/foo`, the path to the Dockerfile for component `foo`.\n     * A new image, `foo:tag2`, is built for the `foo` component.\n     * The `bar` component is unchanged, and Radix will reuse image `bar:tag1` from the current active deployment.\n     * Once the build step is completed, the pipeline creates a new deployment where `foo` is configured to run the newly built `foo:tag2` image, and `bar` is configured to run the `bar:tag1` image from the previous deployment.\n  2. The `/bar/README.md` file is updated. \n     * A new `build-deploy` job is created by the Github webhook.\n     * Radix detects that the `/bar` directory has changed, the path to the Dockerfile for component `bar`.\n     * A new image, `bar:tag3`, is built for the `bar` component.\n     * The `foo` component is unchanged, and Radix will reuse image `foo:tag2`.\n     * The new deployment is configured to run image `foo:tag2` for the `foo` component, and `bar:tag3` for the `bar` component.\n  3. The `/CHANGE_LOG.md` is updated. \n     * A new `build-deploy` pipeline is triggered.\n     * Radix detects that the `/` (root) directory has changed. This directory is not equal to, or a child of the path to the Dockerfiles for any components.\n     * Radix aborts the pipeline with status `Stopped no changes`.\n  4. Files `/foo/main.js` and `/bar/main.js` are updated. \n     * A new `build-deploy` pipeline is triggered.\n     * Radix detects that directories `/foo` and `/bar` have changed, matching the path to the Dockerfiles for both components.\n     * New images, `foo:tag4` and `bar:tag4`, are built for the components.\n     * The new deployment is configured to run image `foo:tag4` for the `foo` component, and `bar:tag4` for the `bar` component.\n  5. The `radixconfig.yaml` is updated. \n     * A new `build-deploy` pipeline is triggered.\n     * Radix detects that the `/` (root) directory has changed. This directory does not match the path to the Dockerfiles for any components, but Radix detects that `radixconfig.yaml` is modified.\n     * New images, `foo:tag5` and `bar:tag5`, are built for the components.\n     * The new deployment is configured to run image `foo:tag5` for", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-cbe179518b24b40af097e6d5aac34205", "__created_at__": 1748191392.2717485, "content": "* A new `build-deploy` pipeline is triggered.\n     * Radix detects that the `/` (root) directory has changed. This directory does not match the path to the Dockerfiles for any components, but Radix detects that `radixconfig.yaml` is modified.\n     * New images, `foo:tag5` and `bar:tag5`, are built for the components.\n     * The new deployment is configured to run image `foo:tag5` for the `foo` component, and `bar:tag5` for the `bar` component.\n  6. The developer updates the value for build secret `SECRET1`. \n     * At a later time, the `/CHANGE_LOG.md` is updated, and a new `build-deploy` pipeline is triggered.\n     * Radix detects that the `/` (root) directory has changed, This directory does not match the path to the Dockerfiles for any components, but Radix detects that `build secrets` have changed since last deployment.\n     * New images, `foo:tag6` and `bar:tag6`, are built for the components.\n     * The new deployment is configured to run image `foo:tag6` for the `foo` component, and `bar:tag6` for the `bar` component.\n\n\nIf the Dockerfiles for the two components in the previous example are placed in the same directory, e.g. `/src`, then Radix will not be able to distinguish between them. Any change in `/src`, or any of its sub-folders, will always match both components. See example below:\n```\n├── src/│  ├── foo/│  │  ├── images/│  │  │  └── logo.jpg│  │  └── main.js│  ├── bar/│  │  ├── main.js│  │  └── README.md│  ├── foo.Dockerfile│  └── bar.Dockerfile├── CHANGE_LOG.md└── radixconfig.yaml\n```\n\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: myappspec:components:-name: foosrc: srcdockerfileName: foo.Dockerfile-name: barsrc: srcdockerfileName: bar.Dockerfile\n```\n\n#### More examples[​](https://radix.equinor.com/guides/build-and-deploy/#more-examples \"Direct link to More examples\")\n  * [One component with the source in a sub-folder](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-subfolder)\n  * [One component with the source in the root](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root)\n  * [Multiple components with the code in sub-folders](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders)\n  * [Multiple components in the root](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root)\n  * [Multiple Radix applications with the source in the same GitHub repository](https://radix.equinor.com/guides/build-and-deploy/example-monorepo-for-multiple-applications-with-same-repository)\n\n\n[PreviousUsers in Containers](https://radix.equinor.com/guides/docker-useradd/)[NextDeploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-rollingupdate/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d9e7f96355a8049e68feb0dd7a899f1a", "__created_at__": 1748191392.2717485, "content": ".com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Rolling updates\n\n\nOn this page\n# Rolling updates\nRadix aims to support zero downtime application re-deployment by utilising Kubernetes' [rolling update](https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/) and [readiness probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/) features.\nRolling updates allow applications to be incrementally updated by specifying the following two parameters.\n  * Maximum number of pods that can be unavailable during an application update (currently set by Radix to 25% of the number of requested replicas)\n  * Maximum number of new pods that can be created during an application update (currently set by Radix to 25% of the number of requested replicas)\n\n\nBy using rolling updates, Radix makes sure that old pods are not deleted before new pods are created and in ready state.\n## Readiness probe[​](https://radix.equinor.com/docs/topic-rollingupdate/#readiness-probe \"Direct link to Readiness probe\")\nRolling updates ensure that the application is always available at pod level. However, as soon as new pods are in ready state, request traffic will be automatically re-routed to the new pods and the old pods are deleted. An issue that typically arises in this scenario is that the actual applications that run inside the containers in the new pods are not ready to receive traffic yet (e.g. still being bootstrapped), and thus, causing a short downtime.\nRadix uses readiness probe to minimize this downtime as close to zero as possible, where TCP socket is utilized. Kubernetes will attempt to open a TCP socket to the application container on the port specified in `radixconfig.yaml` file according to the following two parameters.\ntip\nThe probe will be used only when a Radix application component has at leas one port specified in the `radixconfig.yaml`\n  * Initial delay seconds where Kubernetes will wait before performing the first probe after the container has started (currently set by Radix to 5 seconds)\n  * Period seconds interval where Kubernetes will perform the probes after the initial probe (currently set by Radix to 10 seconds)\n\n\n[PreviousRadix cost](https://radix.equinor.com/docs/topic-cost/)[NextService, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Readiness probe](https://radix.equinor.com/docs/topic-rollingupdate/#readiness-probe)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-runtime-env/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2e2520b62a3b697fbe504ae7b1587782", "__created_at__": 1748191392.2717485, "content": "or.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Runtime environment\n\n\nOn this page\n# Runtime environment\nRunning an application in Radix is not much different to running Docker containers locally. However, you should be aware of some special behaviours and constraints.\n## Networking[​](https://radix.equinor.com/docs/topic-runtime-env/#networking \"Direct link to Networking\")\n### Traffic[​](https://radix.equinor.com/docs/topic-runtime-env/#traffic \"Direct link to Traffic\")\nOnly HTTPS traffic is allowed into the application. There is no protocol restriction on outbound traffic. SSL certificates are automatically managed by Radix, [external aliases](https://radix.equinor.com/guides/external-alias/) can also be managed by Radix, i.e. automatically refreshed.\nInternally - within the same environment/namespace, [components](https://radix.equinor.com/start/radix-concepts/#component) can communicate with each other using other protocols and [ports](https://radix.equinor.com/radix-config/#components), provided they use TCP.\n### Internal DNS[​](https://radix.equinor.com/docs/topic-runtime-env/#internal-dns \"Direct link to Internal DNS\")\nCommunicating between components should be done using short DNS names. For instance, to access the `dataqueue` component from the `middleware` component, simply use the DNS name `dataqueue`. If this communication happens over HTTP, the internal URL to use would be `http://dataqueue`.\nOther ports/protocols can be used, e.g. `fileserver:22` for an FTP port.\n### Request size[​](https://radix.equinor.com/docs/topic-runtime-env/#request-size \"Direct link to Request size\")\nFor external requests there is an upload limit of 100MB. If your application needs to receive larger payloads, these should be split across separate requests.\n### Request headers[​](https://radix.equinor.com/docs/topic-runtime-env/#request-headers \"Direct link to Request headers\")\nRequests reaching your components from outside Radix are routed, and will have some extra HTTP headers with information about the original request\n  * `X-Forwarded-For`: List of IP addresses that have proxied the request (leftmost is original requester)\n  * `X-Forwarded-Host`: Hostname requested\n  * `X-Forwarded-Port`: Port requested (usually `443`)\n  * `X-Forwarded-Proto`: Protocol used (usually `https`)\n  * `X-Original-URI`: Path of original requested (e.g. `/item/widget`)\n  * `X-Real-IP`: Source IP seen by Radix (depending on client-side proxies, this can be different from `X-Forwarded-For`)\n  * `X-Request-ID`: A unique random ID for the request; can be used for [correlation tracking](https://theburningmonk.com/2015/05/a-consistent-approach-to-track-correlation-ids-through-microservices/)\n  * `X-Scheme`: Same as `X-Forwarded-Proto`\n\n\n## Storage[​](https://radix.equinor.com/docs/topic-runtime-env/#storage \"Direct link to Storage\")\nRadix **does not** support persistent storage. Any files written to the filesystem will be lost when a component restarts or is redeployed. If you need persistence, cloud-based systems like [Azure storage](https://docs.microsoft.com/en-us/azure/storage/common/storage-introduction) are recommended, these can be [mounted as volumes](https://radix.equinor.com/guides/volume-mounts/).\n## Multiple copies[​](https://radix.equinor.com/docs/topic-runtime-env/#multiple-copies \"Direct link to Multiple copies\")\nAlthough you can configure the number of [replicas](https://radix.equinor.com/start/radix-concepts/#replica) for a component, Radix will occasionally run a different number of these. For instance, a component that has been configured to run with just one replica (this is the default) might momentarily have two replicas running during a Radix cluster migration.\nThis is a common characteristic of high-availability cloud-based environments. Your application should be written in a way that can cope with multiple running copies of a component (or the whole application), even if momentarily.\n## Environment variables[​](https://radix.equinor.com/docs/topic-runtime-env/#environment-variables \"Direct link to Environment variables\")\nIn addition to [variables defined in `radixconfig.yaml`](https://radix.equinor.com/radix-config/#variables-common), Radix will automatically set the following variables\n  * `RADIX_ACTIVE_CLUSTER_EGRESS_IPS`: IP address range of the current cluster\n  * `RADIX_APP`: The name of the Radix application\n  * `RADIX_CANONICAL_DOMAIN_NAME`: The [canonical domain name](https://radix.equinor.com/docs/topic-domain-names/#canonical-name) of the component\n  * `RADIX_CLUSTERNAME`: The canonical name of the Radix cluster (", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c33986ec22888f94f7db939486a740dc", "__created_at__": 1748191392.2717485, "content": "), Radix will automatically set the following variables\n  * `RADIX_ACTIVE_CLUSTER_EGRESS_IPS`: IP address range of the current cluster\n  * `RADIX_APP`: The name of the Radix application\n  * `RADIX_CANONICAL_DOMAIN_NAME`: The [canonical domain name](https://radix.equinor.com/docs/topic-domain-names/#canonical-name) of the component\n  * `RADIX_CLUSTERNAME`: The canonical name of the Radix cluster (e.g. \"eu-8\")\n  * `RADIX_CLUSTER_TYPE`: The type of cluster (\"production\", \"playground\", \"development\")\n  * `RADIX_COMPONENT`: Name of the current component\n  * `RADIX_CONTAINER_REGISTRY`: Container image registry where component images are downloaded from\n  * `RADIX_DNS_ZONE`: Cluster DNS zone (e.g. _`radix.equinor.com`_)\n  * `RADIX_ENVIRONMENT`: The application's current environment\n  * `RADIX_GIT_COMMIT_HASH`: Git commit hash of source code from which current deployment was built. Only applicable for deployments with one or more container images built by Radix pipeline.\n  * `RADIX_GIT_TAGS`: Space-separated list of git tags which point to `$RADIX_GIT_COMMIT_HASH` at the time of container image build.\n  * `RADIX_PORTS`: Space-separated list of open ports, enclosed in parentheses. E.g. (8888) and (8888 8889)\n  * `RADIX_PORT_NAMES`: List of open ports (names; only if set)\n  * `RADIX_PUBLIC_DOMAIN_NAME`: [Public domain name](https://radix.equinor.com/docs/topic-domain-names/#public-name) of the component (if the component has been made public)\n\n\n[PreviousDocker & containers](https://radix.equinor.com/docs/topic-docker/)[NextLogs](https://radix.equinor.com/docs/topic-logs/)\n  * [Networking](https://radix.equinor.com/docs/topic-runtime-env/#networking)\n    * [Traffic](https://radix.equinor.com/docs/topic-runtime-env/#traffic)\n    * [Internal DNS](https://radix.equinor.com/docs/topic-runtime-env/#internal-dns)\n    * [Request size](https://radix.equinor.com/docs/topic-runtime-env/#request-size)\n    * [Request headers](https://radix.equinor.com/docs/topic-runtime-env/#request-headers)\n  * [Storage](https://radix.equinor.com/docs/topic-runtime-env/#storage)\n  * [Multiple copies](https://radix.equinor.com/docs/topic-runtime-env/#multiple-copies)\n  * [Environment variables](https://radix.equinor.com/docs/topic-runtime-env/#environment-variables)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-releases/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * What's new\n\n\nOn this page\n# What's new\n## 2025[​](https://radix.equinor.com/docs/topic-releases/#2025 \"Direct link to 2025\")\n### 2025-05-14[​](https://radix.equinor.com/docs/topic-releases/#2025-05-14 \"Direct link to 2025-05-14\")", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d8cdb9fe0d707a0d1f1f0906634cca59", "__created_at__": 1748191392.2717485, "content": "redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * What's new\n\n\nOn this page\n# What's new\n## 2025[​](https://radix.equinor.com/docs/topic-releases/#2025 \"Direct link to 2025\")\n### 2025-05-14[​](https://radix.equinor.com/docs/topic-releases/#2025-05-14 \"Direct link to 2025-05-14\")\nReleased Radix Github Actions v2.0.0 with breaking changes.\n  * The `args` command no longer executes.\n  * The action will now install `rx` into the worklow environment\n  * Optionally authenticate with Github Workload Identity and Federaded Credentials, or Client Secret\n  * Automatically runs `rx logout` after the workflow has completed to make sure any Radix authentication tokens are removed from the environment.\n\n\nRead details about the migrations here: [Migrating Radix Github Actions v1 to v2](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2)\n### 2025-05-15[​](https://radix.equinor.com/docs/topic-releases/#2025-05-15 \"Direct link to 2025-05-15\")\nAdded an option to refresh build cache. It is applicable when a radixconfig.yaml property `useBuildKit` is set to `true`. Read more in [radixconfig](https://radix.equinor.com/radix-config/#refresh-build-cache):\n### 2025-05-10[​](https://radix.equinor.com/docs/topic-releases/#2025-05-10 \"Direct link to 2025-05-10\")\nAdded `nodeType` to the [`runtime`](https://radix.equinor.com/radix-config#runtime-1) section in [radixconfig](https://radix.equinor.com/radix-config/):\n### 2025-04-25[​](https://radix.equinor.com/docs/topic-releases/#2025-04-25 \"Direct link to 2025-04-25\")\nAdded `webhookEnabled` to the [`environments.build`](https://radix.equinor.com/radix-config#webhookenabled) section in [radixconfig](https://radix.equinor.com/radix-config/):\n### 2025-04-08[​](https://radix.equinor.com/docs/topic-releases/#2025-04-08 \"Direct link to 2025-04-08\")\nAdded `proxyBufferSize` to the [`network.ingress.public`](https://radix.equinor.com/radix-config/#network-1) section in [radixconfig](https://radix.equinor.com/radix-config/):\n`proxyBufferSize` defines the size of the buffer used for reading the first part of the response received from the proxied server. The size must be large enough to hold the response headers.\n### 2025-03-17[​](https://radix.equinor.com/docs/topic-releases/#2025-03-17 \"Direct link to 2025-03-17\")\n  * Fixed [issue](https://github.com/equinor/radix/issues/348) with stale files when mounting Azure storage account blob containers.\n  * Add block cache support, and use as default instead of the [deprecated streaming option](https://radix.equinor.com/guides/volume-mounts/#deprecated-options), for [blobFuse2](https://radix.equinor.com/radix-config/#blobfuse2). See [guide](https://radix.equinor.com/guides/volume-mounts/) for details.\n\n\n### 2025-03-03[​](https://radix.equinor.com/docs/topic-releases/#2025-03-03 \"Direct link to 2025-03-03\")\nRadix API and Radix CLI can be used to [get](https://radix.equinor.com/docs/topic-radix-cli/#get-scheduled-batches-and-jobs) and [stop](https://radix.equinor.com/docs/topic-radix-cli/#stop-scheduled-batches-and-jobs) Radix scheduled batches and jobs.\n### 2025-02-21[​](https://radix.equinor.com/docs/topic-releases/#2025-02-21 \"Direct link to 2025-02-21\")\nRadix CLI (v1.26.0) now supports getting vulnerability reports for your applications. Try `rx get vulnerability --application your-app-name` to see it in action. Read more [here](https://radix.equinor.com/docs/topic-radix-cli/#get-vulnearbility-scan-reports)\n### 2025-02-20[​](https://radix.equinor.com/docs/topic-releases/#2025-02-20 \"Direct link to 2025-02-20\")\nRadix now supports two options for authentication to OAuth2 proxy for a Radix application component\n  * [Client Secret](https://radix.equinor.com/guides/authentication/#authentication-with-client-secret), already existing\n  * [Azure Workload Identity](https://radix.equinor.com/guides/authentication/#authentication-with-azure-workload-identity), available from now, authentication without need of Client secret.\n\n\n### 2025-02-10[​](https://radix.equinor.com/docs/topic-releases/#2025-02-10 \"Direct link to 202", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-0b7b5548bf86a37cb5737b4b6f1f979c", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/guides/authentication/#authentication-with-client-secret), already existing\n  * [Azure Workload Identity](https://radix.equinor.com/guides/authentication/#authentication-with-azure-workload-identity), available from now, authentication without need of Client secret.\n\n\n### 2025-02-10[​](https://radix.equinor.com/docs/topic-releases/#2025-02-10 \"Direct link to 2025-02-10\")\nRadix now supports two options for authentication to Azure Storage Account from a Radix application component\n  * [Azure Storage Account Keys](https://radix.equinor.com/guides/volume-mounts/#access-keys), already existing\n  * [Azure Workload Identity](https://radix.equinor.com/guides/volume-mounts/#azure-workload-identity), available from now, authentication without need of Azure Storage Account key\n\n\n## 2024[​](https://radix.equinor.com/docs/topic-releases/#2024 \"Direct link to 2024\")\n### 2024-12-20 Relaxed Memory limit rules[​](https://radix.equinor.com/docs/topic-releases/#2024-12-20-relaxed-memory-limit-rules \"Direct link to 2024-12-20 Relaxed Memory limit rules\")\nYou can now have a higher memory limit than your requested limits. Beware that the memory abouve your requested amount might not be available and can lead to a Out Of Memory Exception that will terminate and restart your component.\n### 2024-12-19 Advanced Health Checks[​](https://radix.equinor.com/docs/topic-releases/#2024-12-19-advanced-health-checks \"Direct link to 2024-12-19 Advanced Health Checks\")\nA new `healthChecks` field is introduced to the `components` and `environmentConfig` section of your `radixconfig.yaml` file. This allows for more fine grained rules that will tell Radix when your application is ready for smoother upgrades and rollouts of new versions, or when we upgrade or replace a node.\nSee more in the in the [reference](https://radix.equinor.com/radix-config#healthchecks)\n### 2024-12-17 Controlling batch job failures using exit codes[​](https://radix.equinor.com/docs/topic-releases/#2024-12-17-controlling-batch-job-failures-using-exit-codes \"Direct link to 2024-12-17 Controlling batch job failures using exit codes\")\nWe have added a new (optional) configuration option [failurePolicy](https://radix.equinor.com/radix-config#failurepolicy) for jobs in radixconfig. This allows you to control how job failures should be counted towards the backofflimit for different exit codes, for example by using FailJob to prevent retries in case of a software bug or configuration error, or not incrementing the counter toward backoffLimit in case of transient errors like connection issues by using Ignore.\n### 2024-11-12 Radix CLI and gitHub action updates[​](https://radix.equinor.com/docs/topic-releases/#2024-11-12-radix-cli-and-github-action-updates \"Direct link to 2024-11-12 Radix CLI and gitHub action updates\")\n[Radix CLI 1.24](https://github.com/equinor/radix-cli/releases/tag/v1.24.0) and Radix github action v1 now support announced earlier ⬆️ :\n  * \"apply-config\" pipeline job with an option `--deploy-external-dns-alias` true|false (by default `false` )\n  * \"build-deploy\" pipeline job with an option `--environment` in addition to mandatory `--branch`\n\n\n### 2024-11-11 Changes to Radix pipeline jobs[​](https://radix.equinor.com/docs/topic-releases/#2024-11-11-changes-to-radix-pipeline-jobs \"Direct link to 2024-11-11 Changes to Radix pipeline jobs\")\nThe pipeline job \"apply-config\" can now optionally apply changes of External DNS aliases in the radixconfig without need to explicitly re-deploy connected environment (a new deployment willbe created though automatically) The pipeline job \"build-deploy\" can now optionally have selected environment, if a selected branch is used in more then one environment or a build.from template matches to multiple environments. Support in Radix cli and github action will follow soon.\n### 2024-11-11 Some UI (Web Console) improvements[​](https://radix.equinor.com/docs/topic-releases/#2024-11-11-some-ui-web-console-improvements \"Direct link to 2024-11-11 Some UI \\(Web Console\\) improvements\")\nThe sections events, environment variables, scheduled job and batches list now keep its last collapsed/expanded state in the browser local storage.\nScheduled batch page and its job has extended breadcrumb and properties\nTips\nPlease hit Ctrl+F5 (⌘-R) if changes are not seen in the web-console\n### 2024-10-30 Components and pods events in the Radix console[​](https://radix.equinor.com/docs/topic-releases/#2024-10-30-components-and-pods-events-in-the-radix-console \"Direct link to 2024-10-30 Components and pods events in the Radix console\")\nIn addition to app-environment events, Radix console now shows events on component page (component-related) and replica page (replica's component and replica itself related).\nNote", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c2aae778b4518038e6db7f3cf247b9a1", "__created_at__": 1748191392.2717485, "content": "30 Components and pods events in the Radix console[​](https://radix.equinor.com/docs/topic-releases/#2024-10-30-components-and-pods-events-in-the-radix-console \"Direct link to 2024-10-30 Components and pods events in the Radix console\")\nIn addition to app-environment events, Radix console now shows events on component page (component-related) and replica page (replica's component and replica itself related).\nNote\nJust to remember - each event remains during only one hour.\n### 2024-10-24 Update on Azure PostgreSQL Flexible Server DNS resolution[​](https://radix.equinor.com/docs/topic-releases/#2024-10-24-update-on-azure-postgresql-flexible-server-dns-resolution \"Direct link to 2024-10-24 Update on Azure PostgreSQL Flexible Server DNS resolution\")\nMicrosoft has reverted the temporary DNS configuration for PostgreSQL servers described in this post: <https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/concepts-networking-private-link#private-link-and-dns>\nThe new DNS configuration for PostgreSQL servers will only resolve to `\"server-name\".privatelink.postgres.database.azure.com` if the server has a private endpoint.\nInfo\nThis means to you are no longer required to use private links from Radix to PostgreSQL servers.\n### 2024-10-14 Radix - new platform location[​](https://radix.equinor.com/docs/topic-releases/#2024-10-14-radix---new-platform-location \"Direct link to 2024-10-14 Radix - new platform location\")\nIt is now an option to run your application in the West Europe data centre. This can be a good option if your data also is located in the same data centre. You will now find two platforms in the Radix, named Platform (North Europe)🇮🇪 and Platform 2 (West Europe)🇳🇱\n### 2024-10-09 Public endpoint configuration options[​](https://radix.equinor.com/docs/topic-releases/#2024-10-09-public-endpoint-configuration-options \"Direct link to 2024-10-09 Public endpoint configuration options\")\nWe have added three setting to [radixconfig](https://radix.equinor.com/radix-config#network-1) for configuration of limits for public endpoints:\n`proxyReadTimeout`: Defines a timeout, in seconds, for reading a response from the proxied server. The timeout is set only between two successive read operations, not for the transmission of the whole response. Default is 60 seconds.\n`proxySendTimeout`: Defines a timeout, in seconds, for transmitting a request to the proxied server. The timeout is set only between two successive write operations, not for the transmission of the whole request: Defaults to 60 seconds.\n`proxyBodySize`: Sets the maximum allowed size of the client request body. Default is 100M.\nCaution\nSetting `proxyBodySize` to \"0\", or an unnecessary high value, can lead to instability/denial of service or increased cost, depending on how the request body is processed by the backend, e.g. when buffering to memory or storing the content to disk, either locally or remotely. Never set the value to \"0\" unless the backend component is configured to enforce a limit.\n### 2024-09-27 Add service principals to the application's administrators/readers list in Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#2024-09-27-add-service-principals-to-the-applications-administratorsreaders-list-in-radix-web-console \"Direct link to 2024-09-27 Add service principals to the application's administrators/readers list in Radix Web Console\")\nYou can now add service principals (App Registration or Managed Identity) to the Administrators or Readers list in the application configuration page. You no longer have to go via a group.\nThe drop-down will search for groups and service principals when you start typing. Groups and service principals are grouped in the result list, showing groups first and service principals last. See attached screen recording.\n### 2024-09-27 Restrict access to public components by IP address or CIDR[​](https://radix.equinor.com/docs/topic-releases/#2024-09-27-restrict-access-to-public-components-by-ip-address-or-cidr \"Direct link to 2024-09-27 Restrict access to public components by IP address or CIDR\")\nYou can restrict access to the public endpoints for a component by configuring a list of IP addresses or CIDRs in the `network.ingress.public.allow` field in [radixconfig](https://radix.equinor.com/radix-config#network-1).\nWhen this field is set, only IP addresses matching items in the list can access the public endpoints for the component. Unauthorized IP addresses will receive a 403 response.\nThe component page in Radix Web Console will show information when IP filtering is active, or if all IPs are allowed.\n### 2024-09-18 Fix for docker.io rate limit during build[​](https://radix.equinor.com/docs/topic-releases/#2024-09-18--fix-for-dockerio-rate-limit-during-build \"Direct link to 2024-09-18 Fix for docker.io rate limit during build\")\nThis fix will resolve docker.io rate limit errors during the build step for applications using [useBuildKit](https://radix.equinor.com/radix-config#usebuildkit).\nIf your Dockerfile uses images from docker.io in the FROM instruction, Radix will pull the image as an authenticated used instead of as anonymous. This increases", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-9a7a4df6dbb43a577fd2daf98a7fe10d", "__created_at__": 1748191392.2717485, "content": "--fix-for-dockerio-rate-limit-during-build \"Direct link to 2024-09-18 Fix for docker.io rate limit during build\")\nThis fix will resolve docker.io rate limit errors during the build step for applications using [useBuildKit](https://radix.equinor.com/radix-config#usebuildkit).\nIf your Dockerfile uses images from docker.io in the FROM instruction, Radix will pull the image as an authenticated used instead of as anonymous. This increases the rate limit to 5000 pulls per day, instead of 100 per 6 hours.\nIf you have configured credentials for docker.io in radixconfig ([privateImageHubs](https://radix.equinor.com/radix-config#privateimagehubs)), these will be used instead.\n### 2024-09-17 Manual Component Scaling[​](https://radix.equinor.com/docs/topic-releases/#2024-09-17-manual-component-scaling \"Direct link to 2024-09-17 Manual Component Scaling\")\nA new Scaling feature has been added to Radix Web Console and to RX, while also supports overriding any automatic scaling. Any manually scaled components (even scaled to 0, ie. Stopped) will retain the custom scaled untill its been reset, even across new deployments.\nStart component has now been deprecated and should be replaced with reset-scale (both in the radix-api and in rx cli, and will be removed after August 2025).\n![reset-scaled-component.png](https://radix.equinor.com/docs/topic-releases/)\n### 2024-07-10 Custom batch status in Radix scheduled jobs[​](https://radix.equinor.com/docs/topic-releases/#2024-07-10-custom-batch-status-in-radix-scheduled-jobs \"Direct link to 2024-07-10 Custom batch status in Radix scheduled jobs\")\nRadix now supports an optional custom rules defining a [batch status](https://radix.equinor.com/radix-config/#batchstatusrules) by batch job statuses. If rules are not set or none of them matching, the base (previously defined) rules are applied.\n### 2024-06-06 Support for advanced horizontal scaling (KEDA)[​](https://radix.equinor.com/docs/topic-releases/#2024-06-06-support-for-advanced-horizontal-scaling-keda \"Direct link to 2024-06-06 Support for advanced horizontal scaling \\(KEDA\\)\")\nWe have released initial support for KEDA Triggers, to enable scaling of pods based on messages in a Azure Service Bus, or based on a CRON Schedule, as well as resource metrics as before (CPU/Memory). If you are using a non-resource trigger, we also support scaling to 0 replicas! See [radixconfig.yaml](https://radix.equinor.com/radix-config/#horizontalscaling) for more details.\ntip\nWe recommend scaling most environments to 0 when not in use, this will save on cost and the environment 🌳💸\n#### Example:[​](https://radix.equinor.com/docs/topic-releases/#example \"Direct link to Example:\")\n  * Scales to 0 at night\n  * Scales to minimum 1 at day time\n  * Scales up to maximum 5 at heavy load (the trigger with the highest number of target replicas will win)\n\n\n```\nhorizontalScaling:maxReplicas:5minReplicas:0triggers:-name: cpucpu:value:50-name: croncron:timezone: Europe/Oslostart: 0 7 * * 1-5# 07:00 Monday - Fridayend: 0 17 * * 1-5# 17:00 Monday - FridaydesiredReplicas:1\n```\n\n### 2024-06-04 Strict validation of RadixConfig.yaml in Radix CLI[​](https://radix.equinor.com/docs/topic-releases/#2024-06-04-strict-validation-of-radixconfigyaml-in-radix-cli \"Direct link to 2024-06-04 Strict validation of RadixConfig.yaml in Radix CLI\")\n`rx` (radix cli) and `radix-github-action` have received upgraded validation. It will now check for misplaced/misspelled keys, and with even more checks than before!\n### 2024-05-06 New option in radixconfig.yaml - sub-pipeline[​](https://radix.equinor.com/docs/topic-releases/#2024-05-06-new-option-in-radixconfigyaml---sub-pipeline \"Direct link to 2024-05-06 New option in radixconfig.yaml - sub-pipeline\")\n[radixconfig.yaml](https://radix.equinor.com/radix-config/) has new option subPipeline in `build` and `environments` properties. Currently it has [variables](https://radix.equinor.com/radix-config/#variables) (handovers from `build.variables` and `environments.variables` for sub-pipelines, backward compatible) and [identity](https://radix.equinor.com/radix-config#identity) (also in environments).\nWhen this `subPipeline`'s `identity.azure.clientId` option is set, the environment variable `AZURE_CLIENT_ID` with its value is automatically added to the running pipeline, and it can be used in this pipeline tasks. Read more about the identity in the [component identity](https://radix.equinor.com/radix-config/#identity-1) option and about using it in the sub-pipeline in the [Pipeline with Azure workload identity](https://radix.equinor.com/guides/sub-p", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-00cac8828b5ff042748f1add51ee7c53", "__created_at__": 1748191392.2717485, "content": "`identity.azure.clientId` option is set, the environment variable `AZURE_CLIENT_ID` with its value is automatically added to the running pipeline, and it can be used in this pipeline tasks. Read more about the identity in the [component identity](https://radix.equinor.com/radix-config/#identity-1) option and about using it in the sub-pipeline in the [Pipeline with Azure workload identity](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity) example.\n### 2024-04-19 New pipeline job type: apply-config[​](https://radix.equinor.com/docs/topic-releases/#2024-04-19-new-pipeline-job-type-apply-config \"Direct link to 2024-04-19 New pipeline job type: apply-config\")\nSometimes radixconfig.yaml has properties, which does not require a re-deploy of components. The `apply-config` pipeline workflow perform these changes without re-deploying components or jobs. Currently it apply changes in : [DNS alias](https://radix.equinor.com/radix-config/#dnsalias), [build secrets](https://radix.equinor.com/radix-config/#secrets), [environments](https://radix.equinor.com/radix-config/#environments) (create new or soft-delete existing environments).\nIt is available in Radix CLI 1.17.0 and in the [Radix GitHub action](https://github.com/equinor/radix-github-actions).\n### 2024-04-18 Extended scheduled job statuses[​](https://radix.equinor.com/docs/topic-releases/#2024-04-18-extended-scheduled-job-statuses \"Direct link to 2024-04-18 Extended scheduled job statuses\")\nRadix recently got extended information in its console for scheduled jobs - more detailed info about job replicas, including failed ones.\nJob API also [provides extended status](https://radix.equinor.com/guides/jobs/job-manager-and-job-api#get-a-state-of-a-batch) info (and extra field `updated` and timestamp when the status was last updated). Job statuses includes statuses of one or several replicas. New job status was added `Active` (in addition to `Waiting`, `Stopping`, `Stopped`, `Running`, `Successful`, `Failed`, `DeadlineExceeded`), which means that the job has a replica created, but it is not ready (reasons can be volume mount is not ready, or it is a problem to schedule replica on a node because not enough memory available, etc).\nnote\nThis [extension](https://radix.equinor.com/guides/jobs/notifications#radix-batch-event) is also included in Notifications\n### 2024-04-16 Environment specific options now available on component level[​](https://radix.equinor.com/docs/topic-releases/#2024-04-16-environment-specific-options-now-available-on-component-level \"Direct link to 2024-04-16 Environment specific options now available on component level\")\nIn Radixconfig the properties [monitoring](https://radix.equinor.com/radix-config/#monitoring-1), [horizontalScaling](https://radix.equinor.com/radix-config/#horizontalscaling-1) and [volumeMounts](https://radix.equinor.com/radix-config/#volumemounts-1) could only be set in [environmentConfig](https://radix.equinor.com/radix-config/#environmentconfig) . Now these properties is supported in radixconfig on component (and job) level (monitoring, horizontalScaling and volumeMounts), in environments they can be overridden/altered or new can be added. Configurations in existing applications are still valid, no changes required (if not needed).\n### 2024-04-12 Read-only root filesystem[​](https://radix.equinor.com/docs/topic-releases/#2024-04-12-read-only-root-filesystem \"Direct link to 2024-04-12 Read-only root filesystem\")\n`Containers should run with read-only root filesystem` In our Radix cluster a new security option has been enabled (but not enforced). However we encourage all teams to look into this and [opt in for the configuration](https://radix.equinor.com/radix-config/#readonlyfilesystem-1). An immutable root filesystem prevents applications from writing to the local disk. This is desirable, in case of an intrusion from the attacker will not be able to tamper with the filesystem or write foreign executables to disk.\nThe [container’s](https://radix.equinor.com/docs/topic-docker/) **root filesystem** should be treated as not usable. This prevents any writes to the container’s root filesystem at container runtime and enforces the principle of immutable infrastructure. Read about read-only filesystems in Kubernetes for more info.\nSome options you can consider\n  * If you want to write it to a file, [mount a volume](https://radix.equinor.com/guides/volume-mounts/) instead.\n  * For temporary files or local caching, en **emptyDir** volume can be mounted with type Memory\n  * Any volume mounted into the container will have its own filesystem permissions\n\n\n**What about logs** If this is really about logs a better solution might be to reconfigure your application to send its logs to `stdout`, typical log collectors know how to read the container logs.\n**emptyDir**\nA container crashing does not remove a Pod from a node. The data in an emptyDir volume is safe across container crashes.\nSome uses for an emptyDir are:\n  * Scratch space, such as", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-17c6cb44df8104a2da08bd7b9dfa5e40", "__created_at__": 1748191392.2717485, "content": "* Any volume mounted into the container will have its own filesystem permissions\n\n\n**What about logs** If this is really about logs a better solution might be to reconfigure your application to send its logs to `stdout`, typical log collectors know how to read the container logs.\n**emptyDir**\nA container crashing does not remove a Pod from a node. The data in an emptyDir volume is safe across container crashes.\nSome uses for an emptyDir are:\n  * Scratch space, such as for a disk-based merge sort\n  * Checkpointing a long computation for recovery from crashes\n  * Holding files that a content-manager container fetches while a webserver container serves the data\n\n\n### 2024-03-07 Environment specific `image`, src , dockerfileName in radixconfig.yaml[​](https://radix.equinor.com/docs/topic-releases/#2024-03-07-environment-specific-image-src--dockerfilename-in-radixconfigyaml \"Direct link to 2024-03-07-environment-specific-image-src--dockerfilename-in-radixconfigyaml\")\nSo far a component could be built from for all environments from the same `src` and `dockerfileName` (or \".\" and \"Dockerfile\" by default), or it could be deployed with an image, specified in `image` option (with possible altering by `imageTagName` for environments).\nNow these options can be different for individual environments of one component. Motivation was to allow building the component for one environment, but keep other environments being deployed from pre-built images (and vice-versa).\nPlease read more about `environmentConfig` with [src](https://radix.equinor.com/radix-config/#src-1), [dockerfileName](https://radix.equinor.com/radix-config/#dockerfilename-1) and [image](https://radix.equinor.com/radix-config/#image-1).\n### 2024-03-06 automatic issuance of Digicert (equinor.com) certificates[​](https://radix.equinor.com/docs/topic-releases/#2024-03-06-automatic-issuance-of-digicert-equinorcom-certificates \"Direct link to 2024-03-06 automatic issuance of Digicert \\(equinor.com\\) certificates\")\nManaging SSL/TLS certificates can be a daunting task that requires a lot of manual effort. But now, with our new automated process, you can take the hassle out of issuing SSL/TLS certificates and let us handle it for you with ease.\nWith this feature, you can ensure that all your certificates are up-to-date and issued on time. Our system will automatically generate and renew certificates for you, so you’re always one step ahead.\nMore information regarding this feature can be found in the [External Alias Guide](https://radix.equinor.com/guides/external-alias/)\n### 2024-03-04 Updated Radix documentation website[​](https://radix.equinor.com/docs/topic-releases/#2024-03-04-updated-radix-documentation-website \"Direct link to 2024-03-04 Updated Radix documentation website\")\nRadix documentation website has been migrated to the framework [Docusaurus](https://docusaurus.io/) due to previously used VuePress is retired. We also rearranged some of menu items.\n### 2024-01-25 Option \"component\" added to deploy-only pipeline job[​](https://radix.equinor.com/docs/topic-releases/#2024-01-25-option-component-added-to-deploy-only-pipeline-job \"Direct link to 2024-01-25 Option \"component\" added to deploy-only pipeline job\")\nOne or several components can be specified for a [deploy pipeline workflow](https://radix.equinor.com/guides/deploy-only/#deploy-only-specific-component) with the new option `component` for [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/#deploy-pipeline-job), [Radix GitHub action](https://github.com/equinor/radix-github-actions) and [Radix API](https://api.radix.equinor.com/swaggerui/).\n### Custom DNS for your application - within radix.equinor.com[​](https://radix.equinor.com/docs/topic-releases/#custom-dns-for-your-application---within-radixequinorcom \"Direct link to Custom DNS for your application - within radix.equinor.com\")\nRadix now allows you to configure a custom FQDN in a form `*abc*.radix.equinor.com` Multiple FQDNs can be defined in the [radixconfig dnsAlias](https://radix.equinor.com/radix-config/#dnsalias) property (similar to [dnsAppAlias](https://radix.equinor.com/radix-config/#dnsappalias), but with less limitations and without .app in FQDN) for any environment component with public port. A supporting certificate is issued automatically.\nFor the Playground cluster FQDN will be like `abc.playground.radix.equinor.com`\nConfigured FQDNs are shown in the Radix application and component web-console forms ![DNS alias](https://radix.equinor.com/assets/images/custom-alias-ac8b0608c975b8e4a2e08bd973857506.png) ![alias link](https://radix.equinor.com/assets/images/alias-link-b0ab36cbd8f39259c24b86ba3e5795dc.png)\n### 2024-01-03 Sub-Pipeline can now use Workload Identity (Tekton)[​](https://rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-0bc4911fb7773ab07dad0940c5d8c84b", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/assets/images/custom-alias-ac8b0608c975b8e4a2e08bd973857506.png) ![alias link](https://radix.equinor.com/assets/images/alias-link-b0ab36cbd8f39259c24b86ba3e5795dc.png)\n### 2024-01-03 Sub-Pipeline can now use Workload Identity (Tekton)[​](https://radix.equinor.com/docs/topic-releases/#2024-01-03-sub-pipeline-can-now-use-workload-identity-tekton \"Direct link to 2024-01-03 Sub-Pipeline can now use Workload Identity \\(Tekton\\)\")\nWe now support the use of Azure Workload Identity for Sub-Pipelines. With this release, a unique credential for each of your environments is provided, which will allow you to use Federated Credential wherever needed. [Sub-Pipeline guide with Workload Identity](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity)\n### 2024-01-02 New command available in Radix CLI[​](https://radix.equinor.com/docs/topic-releases/#2024-01-02-new-command-available-in-radix-cli \"Direct link to 2024-01-02 New command available in Radix CLI\")\nRuntime environment variable can be set or changed not only in the `radixconfig` or Radix console, now also in the Radix CLI\n```\nrx set environment-variable --application your-app1 --environment your-env --component your-component1 --variable LOG_LEVEL --value DEBUG\n```\n\nUse with github action\n```\n   - name: Set variable    uses: equinor/radix-github-actions@v1    with:     args: >      set environment-variable       --application your-app1      --environment your-env      --component your-component1      --variable LOG_LEVEL       --value DEBUG  \n```\n\n## 2023[​](https://radix.equinor.com/docs/topic-releases/#2023 \"Direct link to 2023\")\n### 2023-12-05 Support for using images from private repositories[​](https://radix.equinor.com/docs/topic-releases/#2023-12-05-support-for-using-images-from-private-repositories \"Direct link to 2023-12-05 Support for using images from private repositories\")\nWe have released support for using images from private repositories in the Dockerfile `FROM` instruction.\n```\nFROM myappacr.azurecr.io/myapp-base:latest\n```\n\nIt requires `useBuildKit: true` in the radixconfig.\n### 2023-11-14 Only build changed components and jobs[​](https://radix.equinor.com/docs/topic-releases/#2023-11-14-only-build-changed-components-and-jobs \"Direct link to 2023-11-14 Only build changed components and jobs\")\n[`build-deploy`](https://radix.equinor.com/guides/build-and-deploy/) pipeline jobs created from a Github webhook will only build changed components and jobs. The commit ID from the webhook is compared with the commit ID from the active deployment to generate a list of changed directories. This list is compared with the path of the Dockerfile for each component and job. The component/job is built if the Dockerfile path is equal to, or a parent of any changed directory.\n### 2023-11-13 New version of Radix CLI[​](https://radix.equinor.com/docs/topic-releases/#2023-11-13-new-version-of-radix-cli \"Direct link to 2023-11-13 New version of Radix CLI\")\nWe have just released a new version of Radix CLI v1.12.1 with a `validate radix-config` command. It checks radixconfig.yaml for structural and logical errors Also available as a GitHub action step\n```\n-name:'Validate RadixConfig file 'uses: equinor/radix-github-actions@v1with:args: validate radix-config --print\n```\n\n### 2023-10-20 Commit ID option in deploy-only pipeline jobs[​](https://radix.equinor.com/docs/topic-releases/#2023-10-20-commit-id-option-in-deploy-only-pipeline-jobs \"Direct link to 2023-10-20 Commit ID option in deploy-only pipeline jobs\")\nRadix CLI v1.10.0 and Radix GitHub action support an additional option `commitID` in the command `rx create pipeline-job deploy` . It is a 40 chars text field, which can have a reference to a GitHub commit-id, which will be shown in the Radix console, in the list of pipeline jobs and job details. In Radix CLI and Radix GitHub action, an option `job` is renamed to `pipeline-job` for commands create job , get logs jobs -> rx create pipeline-job , rx get logs pipeline-jobs. The previous option `job` well remain in these commands for backward compatibility. It is done to avoid confusion with \"batch jobs\", which are for job-components.\n### 2023-10-18 Rerun failed or stopped pipeline jobs[​](https://radix.equinor.com/docs/topic-releases/#2023-10-18-rerun-failed-or-stopped-pipeline-jobs \"Direct link to 2023-10-18 Rerun failed or stopped pipeline jobs\")\nIf a pipeline job is failed or stopped, it can be rerun with a **button** in the Radix console - a new job is created with the same parameters and commit-id", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3dcb69e2947677e8e7c9b678d5128740", "__created_at__": 1748191392.2717485, "content": "18 Rerun failed or stopped pipeline jobs[​](https://radix.equinor.com/docs/topic-releases/#2023-10-18-rerun-failed-or-stopped-pipeline-jobs \"Direct link to 2023-10-18 Rerun failed or stopped pipeline jobs\")\nIf a pipeline job is failed or stopped, it can be rerun with a **button** in the Radix console - a new job is created with the same parameters and commit-id. This can be particularly useful in case of job, failed due to timeout in accessing external services.\nTo reduce the error \"TLS Handshake timeout\" it has been mitigated in Radix pipeline logic now.\n### 2023-10-09 Changes in Azure Blob volume-mounts[​](https://radix.equinor.com/docs/topic-releases/#2023-10-09-changes-in-azure-blob-volume-mounts \"Direct link to 2023-10-09 Changes in Azure Blob volume-mounts\")\nIf your Radix application uses Azure Blob volume mount, [radixconfig.yaml](https://radix.equinor.com/radix-config/) has a configuration of this volume mount, which has an optional property `accessMode`. If the application need not only read, but also write to this Azure Blob container, please specify explicitly this property, we recommend for the read-write purpose to set it to `ReadWriteMany`:\n```\nvolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000accessMode: ReadWriteMany\n```\n\n### 2023-10-02 Radix now supports docker BuildKit in the pipeline[​](https://radix.equinor.com/docs/topic-releases/#2023-10-02-radix-now-supports-docker-buildkit-in-the-pipeline \"Direct link to 2023-10-02 Radix now supports docker BuildKit in the pipeline\")\nRadix application can be configured to be built with [Docker BuildKit](https://docs.docker.com/build/buildkit/) Use an option `useBuildKit: true` in the [build radixconfig](https://radix.equinor.com/radix-config/#build) section.\nNote\nThere maybe be changes required in a dockerfile, particularly secrets will be passed with more secure way. Read more in the [guide](https://radix.equinor.com/guides/build-secrets/#build-secrets-with-buildkit)\n### Grouped secrets in Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#grouped-secrets-in-radix-web-console \"Direct link to Grouped secrets in Radix Web Console\")\nSecrets in Components have been redesigned, sorted and grouped, hopefully making them bearable to read through\n### 2023-09-26 Improved log feature for jobs (job compnent) in Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#2023-09-26-improved-log-feature-for-jobs-job-compnent-in-radix-web-console \"Direct link to 2023-09-26 Improved log feature for jobs \\(job compnent\\) in Radix Web Console\")\nPreviously, logs for completed jobs (status: succeeded, failed or stopped) disappeared from the Radix Web Console after some time (hours, days). The reason for this behavior is usually caused by internal Kubernetes cleanup processes or when nodes in the cluster are scaled down. We have added a new panel, **Job Logs History** , in the job detail page (similar to the **Replica Logs** panel for a component). This panel lists all runs/retries from the last **30 days** for a specific job, sorted descending by start time, and the log for a specific run/retry can be downloaded by clicking on the download button. The attached screenshot shows a job that has Backoff Limit set to 10 (will restart the job 10 times if exists with a non-zero error code). The job has failed 11 times (initial run + 10 retries). The Job Logs History lists all 11 runs. The log for a specific run can be downloaded by clicking on the download icon.\n### 2023-09-19 Radix now runs all jobs in a separate node-pool[​](https://radix.equinor.com/docs/topic-releases/#2023-09-19-radix-now-runs-all-jobs-in-a-separate-node-pool \"Direct link to 2023-09-19 Radix now runs all jobs in a separate node-pool\")\nBecause jobs often run a shorter period, then regular components, and may require larger amount of resources, Radix now runs any jobs (pipeline, scheduled) in their own Kubernetes node pool (a set of virtual machines), dedicated only for jobs. We expect it will reduce an impact on regular components (which runs normally permanently) and give more resources quickly available due to shorter run nature in most cases. This node pool also has autoscaling.\n### 2023-08-22 Updated Radix CLI and Radix GitHub actions[​](https://radix.equinor.com/docs/topic-releases/#2023-08-22-updated-radix-cli-and-radix-github-actions \"Direct link to 2023-08-22 Updated Radix CLI and Radix GitHub actions\")\n[Radix CLI](https://github.com/equinor/radix-cli) updated (v1.8.0)\n  * Authentication now uses [MSAL library](https://github.com/AzureAD/microsoft-authentication-library-for-go)\n  * All commands return exit code 1 on error\n  * Usage description is not shown on", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-29d99cdf3f84bb665c24e199d6c8d183", "__created_at__": 1748191392.2717485, "content": "-and-radix-github-actions \"Direct link to 2023-08-22 Updated Radix CLI and Radix GitHub actions\")\n[Radix CLI](https://github.com/equinor/radix-cli) updated (v1.8.0)\n  * Authentication now uses [MSAL library](https://github.com/AzureAD/microsoft-authentication-library-for-go)\n  * All commands return exit code 1 on error\n  * Usage description is not shown on command error\n  * Option `await-reconcile` is set by default to true and is applicable only for the command `set environment-secret` , as it is applicable only too this command.\n  * Added commands `get deployment` of an application in case you need to clean obsolete or not used images in own docker images repository\n\n\n#### Radix github action updated[​](https://radix.equinor.com/docs/topic-releases/#radix-github-action-updated \"Direct link to Radix github action updated\")\nNow [it has releases](https://github.com/equinor/radix-github-actions/releases), with latest tested release v1 , which is recommended to use in GitHub actions, instead of master Previous use example: `equinor/radix-github-actions@master` Recommended use example:\n```\n-name:'Deploy app'uses: equinor/radix-github-actions@v1with:args:>   create job\n```\n\n  * With this v1 release it will get particular Radix CLI stable release instead of the latest one.\n\n\n### 2023-08-15 Radix application reader role[​](https://radix.equinor.com/docs/topic-releases/#2023-08-15-radix-application-reader-role \"Direct link to 2023-08-15 Radix application reader role\")\nA `Radix application reader` role has been added to Radix. This role is a read-only role intended for users who need to view information about a Radix application, but should not be allowed to perform any actions such as starting or stopping components, or deleting the application. Readers have the privilege to view logs associated with their replicas and jobs. The role is an Azure AD group that can be assigned under `Access control` in the Configuration page of the application.\n### 2023-08-01 Restart batches and _jobs with recent active deployment_[​](https://radix.equinor.com/docs/topic-releases/#2023-08-01-restart-batches-and-jobs-with-recent-active-deployment \"Direct link to 2023-08-01-restart-batches-and-jobs-with-recent-active-deployment\")\nIn addition to restart job with original deployment, Radix now allows to restart scheduled single jobs, entire batch or individual jobs within the batch with latest active deployment (if it is different than for the restarting job). [Read more](https://radix.equinor.com/guides/jobs/jobs-in-web-console) Scheduled jobs now can be run with `imageTagName` , specified in [radixconfig](https://radix.equinor.com/radix-config/) and altered in [JobDescription](https://radix.equinor.com/guides/jobs/job-manager-and-job-api#create-a-single-job)\n```\n{\"payload\":\"abc\",\"imageTagName\":\"1.0.0\"}\n```\n\n### 2023-07-13 Restart scheduled batches and jobs[​](https://radix.equinor.com/docs/topic-releases/#2023-07-13-restart-scheduled-batches-and-jobs \"Direct link to 2023-07-13 Restart scheduled batches and jobs\")\nRadix now allows to restart scheduled single jobs, entire batch or individual jobs within the batch - completed, failed, stopped or running. Technically it deletes the corresponding Kubernetes job and starts new instead, with the same deployment, job-description and payload. Use-case - restart jobs, failed due to temporary issues, lack of memory, unavailable external data or api.\n### 2023-07-05 Change in Azure Blob volume-mounts option[​](https://radix.equinor.com/docs/topic-releases/#2023-07-05-change-in-azure-blob-volume-mounts-option \"Direct link to 2023-07-05 Change in Azure Blob volume-mounts option\")\nIf your Radix application uses [Azure Blob volume mount](https://radix.equinor.com/guides/volume-mounts/), [radixconfig.yaml](https://radix.equinor.com/radix-config/) it is recommended to replace its configuration with BlobFuse2:\n```\nvolumeMounts:-name: storage1path: /app/image-storageblobFuse2:protocol: fuse2container: blobfusevolumeuid:1700\n```\n\n### 2023-05-16 Support for custom CPU scaling threshold and autoscaling on memory[​](https://radix.equinor.com/docs/topic-releases/#2023-05-16-support-for-custom-cpu-scaling-threshold-and-autoscaling-on-memory \"Direct link to 2023-05-16 Support for custom CPU scaling threshold and autoscaling on memory\")\nAutoscaling has only been supported on CPU, with a hardcoded threshold of 80% utilization. Now the CPU threshold is configurable, and you can also configure autoscaling on memory. This can be enabled in [radixconfig.yaml](https://radix.equinor.com/radix-config/#horizontalscaling).\nDeprecated\nThe `resources` block is deprecated and replaced by more flexible `triggers`, see [radixconfig.yaml](https://radix.equinor.com/radix-config/#horizontalscaling) for more details.\nExample:\n```\nspec:components", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-015b0f5b26baac834dc144bf681cca2e", "__created_at__": 1748191392.2717485, "content": "CPU threshold is configurable, and you can also configure autoscaling on memory. This can be enabled in [radixconfig.yaml](https://radix.equinor.com/radix-config/#horizontalscaling).\nDeprecated\nThe `resources` block is deprecated and replaced by more flexible `triggers`, see [radixconfig.yaml](https://radix.equinor.com/radix-config/#horizontalscaling) for more details.\nExample:\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodhorizontalScaling:resources:memory:averageUtilization:75cpu:averageUtilization:85minReplicas:2maxReplicas:6\n```\n\n### 2023-05-24 Old Replica logs! Get your old Replica logs here![​](https://radix.equinor.com/docs/topic-releases/#2023-05-24-old-replica-logs-get-your-old-replica-logs-here \"Direct link to 2023-05-24 Old Replica logs! Get your old Replica logs here!\")\nIs one of your replicas crashing? Have you ever wondered what the last signs of life were before it dramatically had its last breath of digital air? Well wonder no more! You can now download the logs of a components previous replicas, or even individual replica containers. This feature can be found on any of your Component Pages in the Radix Web Console, just below the Replica table.\n### 2023-05-02 Radix does not allow to run Sub-Pipeline task steps with root users[​](https://radix.equinor.com/docs/topic-releases/#2023-05-02-radix-does-not-allow-to-run-sub-pipeline-task-steps-with-root-users \"Direct link to 2023-05-02 Radix does not allow to run Sub-Pipeline task steps with root users\")\nRadix cluster policy does not allow to run containers with root user. Sub-pipelines are also not allowed to run its task steps with root users. Please use rootless docker images or use step spec option runAsUser. E.g. `runAsUser: 1000`\n```\nspec:steps:-image: alpinename: step1script:|    #!/usr/bin/env sh    id    :securityContext:runAsUser:1000\n```\n\n### 2023-04-14 Radix supports Azure Workload Identity for Azure Key Vaults[​](https://radix.equinor.com/docs/topic-releases/#2023-04-14-radix-supports-azure-workload-identity-for-azure-key-vaults \"Direct link to 2023-04-14 Radix supports Azure Workload Identity for Azure Key Vaults\")\nRadix now supports two options for authentication to Azure Key Vault from a Radix application component\n  * [Azure Service Principal Client ID and Client Secret](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-service-principal-client-id-and-client-secret) , already existing\n  * [Azure Workload Identity](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-workload-identity) , available from now, authentication without need of Azure Service Principal's Client ID and Client Secret\n\n\n### 2023-04-12 Radix application configuration - Admin AD group is now mandatory[​](https://radix.equinor.com/docs/topic-releases/#2023-04-12-radix-application-configuration---admin-ad-group-is-now-mandatory \"Direct link to 2023-04-12 Radix application configuration - Admin AD group is now mandatory\")\nAdmin AD group can be set in Web console => Configuration => “Change administrator”.\n### 2023-03-28 New version of Radix CLI version 1.7[​](https://radix.equinor.com/docs/topic-releases/#2023-03-28-new-version-of-radix-cli-version-17 \"Direct link to 2023-03-28 New version of Radix CLI version 1.7\")\nMore details in the [Radix documentation](https://radix.equinor.com/docs/topic-radix-cli/#commands) or with built-in `help`\n```\nrx scale --helprx get logs component --helprx create pipeline-job deploy --help\n```\n\n### 2023-03-14 Radix updates[​](https://radix.equinor.com/docs/topic-releases/#2023-03-14-radix-updates \"Direct link to 2023-03-14 Radix updates\")\n  * Job component configuration has an option `notifications.webhook` - it is a Radix application's component URL, which will be called on status changes of running batches and jobs.\n  * Scheduled Batches and Scheduled Jobs were renamed in the Radix console to Batches and Jobs. Job Scheduler was also renamed to Job Manager. It is to simplify terminology.\n  * We added basic overview information for Radix CLI.\n  * A new property `backoffLimit` for jobs defines the number of times a job will be restarted if it exists in error. This value can be configured in radixconfig.yaml or when creating a new job or batch . The `backoffLimit` for a specific job, and the number of times a job has failed is available in the job detail page in Radix Web Console.\n\n\n### 2023-03-07 Schema for radixconfig.yaml[​](https://radix.equinor.com/docs/topic-releases/#2023-03-07-schema-for-radixconfigyaml \"Direct link to 2023-03-07 Schema for radixconfig.yaml\")\nWe have released the OpenAPI 3.", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-8f72c2a4f52d91409c920cbe50c07b1b", "__created_at__": 1748191392.2717485, "content": "`backoffLimit` for a specific job, and the number of times a job has failed is available in the job detail page in Radix Web Console.\n\n\n### 2023-03-07 Schema for radixconfig.yaml[​](https://radix.equinor.com/docs/topic-releases/#2023-03-07-schema-for-radixconfigyaml \"Direct link to 2023-03-07 Schema for radixconfig.yaml\")\nWe have released the OpenAPI 3.0 Schema (an extended subset of JSON Schema) for the radixconfig.yaml file. This schema can be used in code editors (e.g. VS Code and Jetbrains IDEs) to provide auto-completion and validation when working with `radixconfig.yaml`, see [radixconfig schema](https://radix.equinor.com/docs/topic-code-editor-integration/)\n### 2023-02-28 Radix Web Console: Stop a regular job and batched jobs[​](https://radix.equinor.com/docs/topic-releases/#2023-02-28-radix-web-console-stop-a-regular-job-and-batched-jobs \"Direct link to 2023-02-28 Radix Web Console: Stop a regular job and batched jobs\")\nA brand new button has been added to allow users to easily stop a job or a batch. The `Payload` button (`Scheduled Jobs` only) has been moved inside an elipsis menu together with the new `Stop` button for convenience. ![Stop job](https://radix.equinor.com/assets/images/stop-job-7b609c7b21ec8a49a6d87547a5de9f57.png)\n### 2023-02-24 Option to pass $GITHUB_TOKEN to the Radix GH Action[​](https://radix.equinor.com/docs/topic-releases/#2023-02-24-option-to-pass-github_token-to-the-radix-gh-action \"Direct link to 2023-02-24 Option to pass $GITHUB_TOKEN to the Radix GH Action\")\nThe Radix Github Action is used by many Radixians to execute rx CLI commands in workflows. We have seen cases where workflows fail because the Radix Action fails to download the rx CLI because of GitHub API rate limits. To remedy this, we have patched the Action with an optional argument github-token, where you can supply your workflow's GITHUB_TOKEN secret. This effectively increases the hourly API request limit from 60 to 15,000.\n```\n-name: list-appsuses: equinor/radix-github-actions@v1with:github-token: ${{ secrets.GITHUB_TOKEN }}args:>   get   application\n```\n\n### 2023-02-16 Radix Web Console: Start, Stop and Restart environments[​](https://radix.equinor.com/docs/topic-releases/#2023-02-16-radix-web-console-start-stop-and-restart-environments \"Direct link to 2023-02-16 Radix Web Console: Start, Stop and Restart environments\")\n  * Git Tags are now visible on the Environment Summary Cards.\n  * Buttons to start, stop and restart an envrionment has been added. ![Start, stop and restart environment](https://radix.equinor.com/assets/images/start-stop-restart-env-2648a78118d800ebbb5f7222db964627.png)\n\n\n### 2023-01-31 Radix Playground lifecycle policy[​](https://radix.equinor.com/docs/topic-releases/#2023-01-31-radix-playground-lifecycle-policy \"Direct link to 2023-01-31 Radix Playground lifecycle policy\")\nWe will now implement a stricter [lifecycle policy](https://radix.equinor.com/docs/topic-uptime/#automatic-cleanup-in-playground-cluster) for using Radix Playground. Any application which has not been a - deployed - or b - restarted in the last 7 days will be stopped. After further 21 days of inactivity, all stopped applications will be deleted.\n### 2023-01-23 Radix Web Console: Shown replica resources and scheduled job resources and settings[​](https://radix.equinor.com/docs/topic-releases/#2023-01-23-radix-web-console-shown-replica-resources-and-scheduled-job-resources-and-settings \"Direct link to 2023-01-23 Radix Web Console: Shown replica resources and scheduled job resources and settings\")\nRadix now provides Request and Limit resources for component replicas and scheduled jobs. For scheduled jobs it is also shown Time Limit and Backoff Limit (later will be soon configurable)\n### 2023-01-18 Custom branch name for wildcard branch mapping[​](https://radix.equinor.com/docs/topic-releases/#2023-01-18-custom-branch-name-for-wildcard-branch-mapping \"Direct link to 2023-01-18 Custom branch name for wildcard branch mapping\")\nRadix now provides a text input field to put a full branch name for a build environment with [wildcard branch mappings](https://radix.equinor.com/radix-config/#build-1)\n### 2023-01-17 Machine user tokens deprecated[​](https://radix.equinor.com/docs/topic-releases/#2023-01-17-machine-user-tokens-deprecated \"Direct link to 2023-01-17 Machine user tokens deprecated\")\nMachine user tokens pose a security risk due to lack of expiration time. Kubernetes underlying functionality used by machine user tokens has been removed in newer versions. Applications that currently use machine user tokens in their external CICD pipelines must switch to using Azure service principals (Azure AD", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-33716f3f44e4503e386f0ad04c6adea6", "__created_at__": 1748191392.2717485, "content": "Machine user tokens deprecated[​](https://radix.equinor.com/docs/topic-releases/#2023-01-17-machine-user-tokens-deprecated \"Direct link to 2023-01-17 Machine user tokens deprecated\")\nMachine user tokens pose a security risk due to lack of expiration time. Kubernetes underlying functionality used by machine user tokens has been removed in newer versions. Applications that currently use machine user tokens in their external CICD pipelines must switch to using Azure service principals (Azure AD app registrations or user-assigned managed identities).\n### 2023-01-10 Federated Credentials with Azure AD Application and Managed Identity[​](https://radix.equinor.com/docs/topic-releases/#2023-01-10-federated-credentials-with-azure-ad-application-and-managed-identity \"Direct link to 2023-01-10 Federated Credentials with Azure AD Application and Managed Identity\")\nWe have enabled support for federated credentials between applications running in Radix and Azure AD applications and Azure Managed Identities. [Workload identities](https://radix.equinor.com/guides/workload-identity/) in Radix\n## 2022[​](https://radix.equinor.com/docs/topic-releases/#2022 \"Direct link to 2022\")\n### 2022-11-10 Configuration Item replaces WBS and owner and is now mandatory[​](https://radix.equinor.com/docs/topic-releases/#2022-11-10-configuration-item-replaces-wbs-and-owner-and-is-now-mandatory \"Direct link to 2022-11-10 Configuration Item replaces WBS and owner and is now mandatory\")\nThe `Owner` and `WBS` fields has been removed and is replaced by `Configuration Item` which refers to an IT application in ServiceNow. When registering a new application in Radix, you will have to select a `Configuration Item` from the drop-down list. The drop-down will automatically query ServiceNow when you start typing.\nTo see more information regarding the selected `Configuration Item`, click the `info` icon on the right in the drop-down.\nExisting applications should be updated with a `Configuration Item` in the Application Configuration page.\ninfo\nFor the Playground cluster a Configuration Item is not mandatory.\n![Config item](https://radix.equinor.com/assets/images/confitem-cb320b1a629e2ec0659957baa710bce6.png)\n### 2022-11-01 Enable and/or Disable components[​](https://radix.equinor.com/docs/topic-releases/#2022-11-01-enable-andor-disable-components \"Direct link to 2022-11-01 Enable and/or Disable components\")\nComponents in the Radix application now can be enabled and disabled for any and all environments. This can be configured in [radixconfig.yaml](https://radix.equinor.com/radix-config/#enabled).\nExample:\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodenabled:falsespec:components:-name: backendenabled:falseenvironmentConfig:-environment: prodenabled:true\n```\n\n### 2022-11-01 External DNS certificate and key validation[​](https://radix.equinor.com/docs/topic-releases/#2022-11-01-external-dns-certificate-and-key-validation \"Direct link to 2022-11-01 External DNS certificate and key validation\")\nYou can now view information about TLS certificates for [external DNS aliases](https://radix.equinor.com/guides/external-alias-certificate/) in Radix Web Console.\n### 2022-10-13 Supporting monorepo and custom radixconfig names[​](https://radix.equinor.com/docs/topic-releases/#2022-10-13-supporting-monorepo-and-custom-radixconfig-names \"Direct link to 2022-10-13 Supporting monorepo and custom radixconfig names\")\nRadix now supports multiple Radix applications in the same GitHub repository - **monorepo** strategy. It is now possible to use custom Radix configuration filenames (aka [radixconfig.yaml](https://radix.equinor.com/radix-config/)) and/or its location in the GitHub repository. Please read more in the [monorepo guideline](https://radix.equinor.com/guides/monorepo/)\n### 2022-10-12 Radix CLI version v1.2.1[​](https://radix.equinor.com/docs/topic-releases/#2022-10-12-radix-cli-version-v121 \"Direct link to 2022-10-12 Radix CLI version v1.2.1\")\nA new command have been added. Use `version` to print current version of the rx\n### 2022-09-23 Improvements in Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#2022-09-23-improvements-in-radix-web-console \"Direct link to 2022-09-23 Improvements in Radix Web Console\")\nEnsure you have assigned permissions to your app's [configuration](https://radix.equinor.com/start/registering-app/), now you are able to grant the permission using the name of an AD group. At the same time add your applications to the list of favourites, only favourites will have the application status available on the Web Console front page.\nCheck out your vulnerability scan results: Are you using OAUTH feature? You may want to switch to [Radix OAUTH service](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature), we are updating the images (dependencies) regularly\n### 202", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e84443078396c67699bb3d4fbf7731f0", "__created_at__": 1748191392.2717485, "content": "using the name of an AD group. At the same time add your applications to the list of favourites, only favourites will have the application status available on the Web Console front page.\nCheck out your vulnerability scan results: Are you using OAUTH feature? You may want to switch to [Radix OAUTH service](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature), we are updating the images (dependencies) regularly\n### 2022-09-20 Radix CLI version v1.2.0[​](https://radix.equinor.com/docs/topic-releases/#2022-09-20-radix-cli-version-v120 \"Direct link to 2022-09-20 Radix CLI version v1.2.0\")\nRadix CLI 1.2.0 has new commands added such as `start`, `stop` and `restart` for a specific component, environment or an entire application.\n#### Example[​](https://radix.equinor.com/docs/topic-releases/#example-1 \"Direct link to Example\")\n```\nrx start component -a<application-name>-e<environment-name>-n<component-name>rx stop environment -a<application-name>-e<environment-name>rx restart application -a<application-name>\n```\n\n### 2022-09-20 Azure key vault secret autorotation[​](https://radix.equinor.com/docs/topic-releases/#2022-09-20-azure-key-vault-secret-autorotation \"Direct link to 2022-09-20 Azure key vault secret autorotation\")\nRadix now offers the [Azure Key Vault autorotation](https://radix.equinor.com/guides/azure-key-vaults/#autorotation-of-secrets) feature.\n### 2022-09-01 Vulnerability scan removed from build pipeline[​](https://radix.equinor.com/docs/topic-releases/#2022-09-01-vulnerability-scan-removed-from-build-pipeline \"Direct link to 2022-09-01 Vulnerability scan removed from build pipeline\")\nThe `Vulnerability Scan` step has been removed from the `build-deploy` pipeline. It has been replaced by a scheduled scan (daily and after new deployment) that scans images for all components, not only those built by Radix. Aggregated scan results are shown in environment pages, and details in the component page.\n### 2022-09-01 Select Radix Application Administrator Group by name[​](https://radix.equinor.com/docs/topic-releases/#2022-09-01-select-radix-application-administrator-group-by-name \"Direct link to 2022-09-01 Select Radix Application Administrator Group by name\")\nA new feature in Radix Web Console simplifies the configuration of application administrators. You can now select AD Groups in a drop-down list instead of entering a comma-separated list of ids. The drop-down list is populated as you type after two characters are entered. ![application administrators](https://radix.equinor.com/assets/images/admingroup-8c846d990ce6c520a888764766a60092.png)\n### 2022-08-16 GIT Metadata updates[​](https://radix.equinor.com/docs/topic-releases/#2022-08-16-git-metadata-updates \"Direct link to 2022-08-16 GIT Metadata updates\")\n  * Two new default build-time environment variables, `$RADIX_GIT_COMMIT_HASH` and `$RADIX_GIT_TAGS`.\n  * `$RADIX_GIT_COMMIT_HASH` has up until now been injected into pods if pipeline job was triggered via GitHub webhook. This variable is now also inferred from HEAD of the build branch for build-deploy jobs which are not triggered via the GitHub webhook.\n  * `$RADIX_GIT_COMMIT_HASH` is inherited from source deployments after promote pipeline.\n  * New default pod environment variable `$RADIX_GIT_TAGS`, containing a whitespace separated list of git tags which refer to `$RADIX_GIT_COMMIT_HASH`, if present.\n  * UI for creating promote pipeline jobs displays the build commit and git tags of source deployments, if present on the source deployment.\n  * The overview page for Environment now has a GitHub link to the source code commit from which the active deployment was built, if applicable. GitHub links to tags are also present, if applicable.\n  * The overview page for Deployment also has GitHub links to commit and tags, if applicable.\n\n\n### 2022-08-10 Azure Key Vault values version[​](https://radix.equinor.com/docs/topic-releases/#2022-08-10-azure-key-vault-values-version \"Direct link to 2022-08-10 Azure Key Vault values version\")\nRadix Web Console can show version of [Azure Key Vault values](https://radix.equinor.com/guides/azure-key-vaults/#azure-key-vault-secret-certificate-and-key-versions) used in a Radix application component (if applicable) - which pod uses which version. Click the link of the Azure Key Vault secret, certificate or key to open a popup with this info. Statuses also reflect actual state, not just _External_\n### 2022-08-10 Pipeline information for favourite appliactions in Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#2022-08-10-pipeline-information-for-favourite-appliactions-in-radix-web-console \"Direct link to 2022-08-10 Pipeline information for favourite appliactions in Radix Web Console\")\nRadix Web Console now shows the last pipeline job status badge only for", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e265cd00bf216460a7d5c15372b132e4", "__created_at__": 1748191392.2717485, "content": "just _External_\n### 2022-08-10 Pipeline information for favourite appliactions in Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#2022-08-10-pipeline-information-for-favourite-appliactions-in-radix-web-console \"Direct link to 2022-08-10 Pipeline information for favourite appliactions in Radix Web Console\")\nRadix Web Console now shows the last pipeline job status badge only for applications which are your favourites.\n### 2022-06-28 Log lines limit[​](https://radix.equinor.com/docs/topic-releases/#2022-06-28-log-lines-limit \"Direct link to 2022-06-28 Log lines limit\")\nThe Radix component log size have been limited to only display the last 1000 lines to reduce browser resources usage. Copy log to clipboard has also been limited to the last 1000 lines. The **Download** button will return the entire log.\n### 2022-06-20 Change in Azure Blob volume-mounts accessMode[​](https://radix.equinor.com/docs/topic-releases/#2022-06-20-change-in-azure-blob-volume-mounts-accessmode \"Direct link to 2022-06-20 Change in Azure Blob volume-mounts accessMode\")\nIf your Radix application uses [Azure Blob volume mount](https://radix.equinor.com/guides/volume-mounts/), [radixconfig.yaml](https://radix.equinor.com/radix-config/) has a configuration of this volume mount, which has an optional property `accessMode`. If the application need not only read, but also write to this Azure Blob container, please specify explicitly this property. For `read-write` acces, we recommend to set it to `ReadWriteMany`.\n```\nvolumeMounts:-type: azure-blobname: storage1storage: blobfusevolumepath: /app/image-storagegid:1700accessMode: ReadWriteMany\n```\n\nRadix will soon get an update to set Blob volumes `accessMode` as `ReadOnlyMany` by default, when `accessMode` is not specified explicitly in the [radixconfig.yaml](https://radix.equinor.com/radix-config/#volumemounts). If a Radix application needs a read-only access to the Azure blob volume mount, please specify it explicitly **accessMode: ReadOnlyMany**\n### 2022-06-20 Introducing sub-pipeline concept (Tekton)[​](https://radix.equinor.com/docs/topic-releases/#2022-06-20-introducing-sub-pipeline-concept-tekton \"Direct link to 2022-06-20 Introducing sub-pipeline concept \\(Tekton\\)\")\nThis is an optional, configurable build step that is run before deployment. A typical use case for [sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/#configure-sub-pipeline) is to perform a database update/migration immediately before deployment\n### 2022-06-20 Improved performance of the Radix Operator[​](https://radix.equinor.com/docs/topic-releases/#2022-06-20-improved-performance-of-the-radix-operator \"Direct link to 2022-06-20 Improved performance of the Radix Operator\")\nVarious improvements have been made to optimize the Radix Operator\n### 2022-05-30 Scheduled vulnerability scan implemented[​](https://radix.equinor.com/docs/topic-releases/#2022-05-30-scheduled-vulnerability-scan-implemented \"Direct link to 2022-05-30 Scheduled vulnerability scan implemented\")\nUp until now all deployments to Radix was scanned by Snyk and the result was reported in the deploy pipeline in Radix Web Console. However, as most of you will be aware of, new vulnerabilities are discovered all the time and can exist in the image deployed to Radix. The scan of all images in Radix will now be done on a regular basis, and the ![result](https://radix.equinor.com/assets/images/vulnerabilities-60aa0522c4eac5524f21a96ec1073145.png) is reported in the environment page.\n### 2022-04-28 Improved/simpler **egress** rules configuration[​](https://radix.equinor.com/docs/topic-releases/#2022-04-28-improvedsimpler-egress-rules-configuration \"Direct link to 2022-04-28-improvedsimpler-egress-rules-configuration\")\n[Egress rules](https://radix.equinor.com/radix-config/#egress) have been simplified. A new field `allowRadix` can be set to allow or deny traffic to other Radix applications. If you use the [built-in Oauth2 feature](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature), it is no longer necessary to allow traffic to [login.microsoftonline.com](http://login.microsoftonline.com/).\nDocs now recommend using [Private Link](https://radix.equinor.com/guides/egress-config/#use-private-link) to get static IP address to Azure databases or other SaaS for use in egress rules\n### 2022-04-12 Static **ingress** IPs[​](https://radix.equinor.com/docs/topic-releases/#2022-04-12-static-ingress-ips \"Direct link to 2022-04-12-static-ingress-ips\")\nThe Radix clusters now have static ingress IP ranges. This information", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-6fb3d3fd5ec166946c99ac2c202e2537", "__created_at__": 1748191392.2717485, "content": "/egress-config/#use-private-link) to get static IP address to Azure databases or other SaaS for use in egress rules\n### 2022-04-12 Static **ingress** IPs[​](https://radix.equinor.com/docs/topic-releases/#2022-04-12-static-ingress-ips \"Direct link to 2022-04-12-static-ingress-ips\")\nThe Radix clusters now have static ingress IP ranges. This information can be found on the ℹ️ information page on the applicable Radix Web Console.\nIP ranges\n```\nProduction: 20.223.122.0/30Playground: 20.223.26.208/30\n```\n\n### 2022-03-11 Custom configuration of the Metrics endpoint[​](https://radix.equinor.com/docs/topic-releases/#2022-03-11-custom-configuration-of-the-metrics-endpoint \"Direct link to 2022-03-11 Custom configuration of the Metrics endpoint\")\nYou can now specify a custom port and path for monitoring.\nSpecifying monitoring path and port is now supported for application components in Radix. Read the [radixconfig.yaml reference entry](https://radix.equinor.com/radix-config/#monitoringconfig) for details.\n### 2022-02-28 Support for egress rules[​](https://radix.equinor.com/docs/topic-releases/#2022-02-28-support-for-egress-rules \"Direct link to 2022-02-28 Support for egress rules\")\nNetwork egress rules are now supported for application environments in Radix. Read the [radixconfig.yaml reference entry](https://www.radix.equinor.com/radix-config/index.md#egressrules) for details, and read the [guide](https://radix.equinor.com/guides/egress-config/#built-in-rules) for limitations, tips and usage patterns.\nImplement egress rules with caution! Applications may break if egress rules inadvertently block required resources.\n### 2022-02-18 Build Pipeline steps[​](https://radix.equinor.com/docs/topic-releases/#2022-02-18-build-pipeline-steps \"Direct link to 2022-02-18 Build Pipeline steps\")\nThe sequence of steps performed in the build/deploy pipeline has been changed. This will reduce time to deploy and new builds. To achieve this the scan of the deployment was moved to the end of the workflow, allowing deployment before the scan is completed.\n![steps](https://radix.equinor.com/assets/images/steps-981d883d97c539421e1982c8f504f064.png)\n### 2022-02-07 Job manager: Configure time limit for jobs[​](https://radix.equinor.com/docs/topic-releases/#2022-02-07-job-manager-configure-time-limit-for-jobs \"Direct link to 2022-02-07 Job manager: Configure time limit for jobs\")\nTo control running jobs, it is now possible to configrue a maximum time limit a job should is allowed to run. Specify \"timeLimitSeconds\" in [job payload](https://www.radix.equinor.com/guides/jobs/configure-jobs/#timelimitseconds) or in [radixconfig.yaml](https://www.radix.equinor.com/radix-config/index.md#timelimitseconds). A job exceeding the specified limit will be stopped automatically.\n### 2022-02-01 Support for Azure Key Vault[​](https://radix.equinor.com/docs/topic-releases/#2022-02-01-support-for-azure-key-vault \"Direct link to 2022-02-01 Support for Azure Key Vault\")\n[Azure Key Vault](https://docs.microsoft.com/en-us/azure/key-vault/general/basic-concepts) secrets, certificates and keys can be used in Radix as secrets. Once configured, they are available in replicas of Radix application as environment variables and files.\nRead more about this in [radixconfig.yaml](https://www.radix.equinor.com/radix-config/index.md#secretrefs) and [Azure Key Vaults](https://www.radix.equinor.com/guides/azure-key-vaults/) guide.\n### 2022-02-01 Built-in configuration for OAuth2 authorization[​](https://radix.equinor.com/docs/topic-releases/#2022-02-01-built-in-configuration-for-oauth2-authorization \"Direct link to 2022-02-01 Built-in configuration for OAuth2 authorization\")\nRadix provides built-in configuration for adding OAuth2 authorization with OIDC to the component. Common `oauth2` settings can be configured at component level and/or in the component's `environmentConfig` section. When OAuth2 is configured for a component, Radix creates an OAuth2 service (using [OAuth2 Proxy](https://oauth2-proxy.github.io/oauth2-proxy/)) to handle the OAuth2 authorization code flow, and to verify the authorization state of incoming requests to the component.\nRead more in the OAuth section in [radixconfig.yaml](https://www.radix.equinor.com/radix-config/index.md#oauth2) documentation and the [OAuth guide](https://www.radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature).\n### 2022-01-11 Changes to validation of radixconfig[​](https://radix.equinor.com/docs/topic-releases/#2022-01-11-changes-to-validation-of-radixconfig \"Direct link to 2022-01-11 Changes to validation of radixconfig\")", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f801fa36c3a01a1fca064c451db5533d", "__created_at__": 1748191392.2717485, "content": ".md#oauth2) documentation and the [OAuth guide](https://www.radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature).\n### 2022-01-11 Changes to validation of radixconfig[​](https://radix.equinor.com/docs/topic-releases/#2022-01-11-changes-to-validation-of-radixconfig \"Direct link to 2022-01-11 Changes to validation of radixconfig\")\nTwo new validation rules now apply to radixconfig.\n  1. Component ports lower than **1024** are prohibited.\n  2. Environment variables prefixed with **RADIX_** or **RADIXOPERATOR_** are prohibited.\n\n\n## 2021[​](https://radix.equinor.com/docs/topic-releases/#2021 \"Direct link to 2021\")\n### 2021-12-09 Active cluster IPs as environment variable[​](https://radix.equinor.com/docs/topic-releases/#2021-12-09-active-cluster-ips-as-environment-variable \"Direct link to 2021-12-09 Active cluster IPs as environment variable\")\nThe IPs actively assigned the the cluster of which an application is deployed to are now added to the Radix environment variable RADIX_ACTIVE_CLUSTER_EGRESS_IPS. This environment variable contains a list of IPs which are used for outgoing traffic from the cluster and is added to every component.\n### 2021-11-23 Cluster IPs[​](https://radix.equinor.com/docs/topic-releases/#2021-11-23-cluster-ips \"Direct link to 2021-11-23 Cluster IPs\")\nCluster IPs are now visible in the `About Pages` in Radix Web Console.\n  * [Radix Platform](https://console.radix.equinor.com/about)\n  * [Radix Playground](https://console.playground.radix.equinor.com/about)\n\n\n### 2021-11-18 Radix Slack Alerts[​](https://radix.equinor.com/docs/topic-releases/#2021-11-18-radix-slack-alerts \"Direct link to 2021-11-18 Radix Slack Alerts\")\nWe have released a new feature in Radix for sending alerts to Slack if a pipeline job fails, or a component or job fails to start or crashes/restarts (e.g. due to insufficient memory, unhandled exceptions etc.). [Read the documentation](https://radix.equinor.com/guides/alerting/), on how to configure alerting for your application.\nPS! The alert GUI in Radix web console is still \"work in progress\". We're working with EDS to make it more aligned with the EDS design standard.\n### 2021-10-29 New design: Radix documentation (Public site)[​](https://radix.equinor.com/docs/topic-releases/#2021-10-29-new-design-radix-documentation-public-site \"Direct link to 2021-10-29 New design: Radix documentation \\(Public site\\)\")\nThe [Radix documentation site](https://www.radix.equinor.com/) has now been updated to a brand new version with a new design. And last but not least, now also with a SEARCH function. The most used page - [radixconfig.yaml reference](https://www.radix.equinor.com/radix-config/index.md) can be easily located under the Reference heading.\n### 2021-10-14 Radix CLI version v1.0.7[​](https://radix.equinor.com/docs/topic-releases/#2021-10-14-radix-cli-version-v107 \"Direct link to 2021-10-14 Radix CLI version v1.0.7\")\nA new version of the [Radix CLI](https://github.com/equinor/radix-cli) is now available. [Version v1.0.7](https://github.com/equinor/radix-cli/releases/tag/v1.0.7)\n### 2021-09-09 New Radix Web Console[​](https://radix.equinor.com/docs/topic-releases/#2021-09-09-new-radix-web-console \"Direct link to 2021-09-09 New Radix Web Console\")\n#### New design[​](https://radix.equinor.com/docs/topic-releases/#new-design \"Direct link to New design\")\nThe Radix Web Console has been redesigned in all its glory in accordance with the EDS Design Guidelines. This includes a more responsive design, new colors, new navigation, collapsable menus, icons, fonts and more!\n![design](https://radix.equinor.com/assets/images/design-19a341cf53efd31dfd955d38b656a208.png)\n#### Improved vulnerability scanning[​](https://radix.equinor.com/docs/topic-releases/#improved-vulnerability-scanning \"Direct link to Improved vulnerability scanning\")\nThe results from the vulnerability scanning running on all components deployed to Radix are now visualized in the Pipeline Job page as a count of Critical, High, Medium and Low severity. The details of each vulnerabilities can be inspected in the Vulnerability page. This scanning is now performed by Snyk (due to rate limits in Trivy scans)\n![vuln-scan](https://radix.equinor.com/docs/topic-releases/)\n[Vulnerability scanning - more information](https://radix.equinor.com/start/radix-concepts/#scanning-images-for-security-issues)\n#### Favourites[​](https://radix.equinor.com/docs/topic-releases/#favourites \"Direct link to Favourites\")\nUsers now", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-61d7745b0a111fe073ad37191b4f3370", "__created_at__": 1748191392.2717485, "content": ". This scanning is now performed by Snyk (due to rate limits in Trivy scans)\n![vuln-scan](https://radix.equinor.com/docs/topic-releases/)\n[Vulnerability scanning - more information](https://radix.equinor.com/start/radix-concepts/#scanning-images-for-security-issues)\n#### Favourites[​](https://radix.equinor.com/docs/topic-releases/#favourites \"Direct link to Favourites\")\nUsers now have the ability to favourite their most precious applications! (We all have at least one 😉)\nThe new favourites section can be found at the top of the Applications page, making it easier to get an overview of what's important to you amongst the ever increasing list of available applications. Favourites are local and stored in the browser cache.\n![favourites](https://radix.equinor.com/assets/images/favourites-809be915d1c3beb5a5e32518dfeffe93.png)\n#### Environment variables[​](https://radix.equinor.com/docs/topic-releases/#environment-variables \"Direct link to Environment variables\")\nEnvironment variables can now be overridden from the Radix Web Console. Previously users would have to make changes to their `radixconfig.yaml` file and redeploy it to change the value of environment variables.\ntip\nNote that you will need to restart the component, or for jobs a new job should be started, for your changes to take effect.\n![env-var](https://radix.equinor.com/assets/images/env-var-1d165a99802e26f5db66662c7d2f728d.png)\n[Environment variables documentation](https://radix.equinor.com/guides/environment-variables/)\n#### Performance improvement[​](https://radix.equinor.com/docs/topic-releases/#performance-improvement \"Direct link to Performance improvement\")\nThe Applications page can now load up to 5x faster than before. Due to the increase in the number of applications, the load time of the Applications page had become way too long (due to the chain of Kubernetes queries needed to determine which applications a user have access to). With this improvement the page loads in a few seconds. Future improvements will be considered if/when needed.\n### 2021-09-01 Radix Security Policy: Enforce 'Run as non-root'[​](https://radix.equinor.com/docs/topic-releases/#2021-09-01-radix-security-policy-enforce-run-as-non-root \"Direct link to 2021-09-01 Radix Security Policy: Enforce 'Run as non-root'\")\nAs you may know, Docker containers have root privileges enabled by default. This is unnecessary and can introduce security risks and vulnerabilities into your applications. The policy will technically configure the PodSecurityContext for your application.\nFrom now on every time you (build and) deploy your app, Radix will not allow applications to run as root. If you have not configured the app correctly, an error will be logged in Events (Events section can be found in the Environments page). The new image will not be deployed and the previous image will remain running. If by any circumstance the pod running your app restarts, for instance due to lack of required memory, all applications running on it will also be restarted. Any app not complying with the Security Policy will not be started.\n[Security – running as non-root](https://radix.equinor.com/docs/topic-docker/#running-as-non-root)\n### 2021-06-22 Support for files in Azure blob container[​](https://radix.equinor.com/docs/topic-releases/#2021-06-22-support-for-files-in-azure-blob-container \"Direct link to 2021-06-22 Support for files in Azure blob container\")\nThe Blobfuse FlexVolume driver has been deprecated by Microsoft. Radix has decided to replace it with the Azure Blob Storage CSI driver (particularly azure-storage-fuse), which is the recommended option. FlexVolume will be supported in Radix during transition periods for projects that still uses it. [Volume mounts documentation](https://radix.equinor.com/radix-config/#volumemounts)\n```\nenvironmentConfig:-environment: devvolumeMounts:-type: azure-blobname: storage-namestorage: blob-container-namepath: /app/image-storageuid:1000\n```\n\nFor those who have used the FlexVolume driver: the `container` property is deprecated, being replaced by the `storage` property to specify a blobs container name.\n### 2021-06-16 Pipeline job status badges[​](https://radix.equinor.com/docs/topic-releases/#2021-06-16-pipeline-job-status-badges \"Direct link to 2021-06-16 Pipeline job status badges\")\nWe have added support for generating badges that shows the status of the latest Radix Pipeline Job for a specific job type, environment and application. A common place to add a status badge is in the README.md file of your repository, but it can be added to any web page you'd like.\nRead more about Pipeline Badges here: [Pipeline Badge](https://radix.equinor.com/guides/pipeline-badge/)\n### 2021-06-07 Support for ClientCertificate authentication[​](https://radix.equinor.com/docs/topic-releases/#2021-06-07-support-for-clientcertificate-authentication \"Direct link to 2021-06-07 Support for ClientCertificate authentication\")\nWe have added support for ClientCertificates, which can be configured for a component or a specific environment.\nRead more about ClientCertificates here: [ClientCertificate](https://radix.equinor.com/radix-config/#clientcertificate)\n### 2021-04", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-ba876c4c211b63b34643ae9360ec5a09", "__created_at__": 1748191392.2717485, "content": "Certificate authentication[​](https://radix.equinor.com/docs/topic-releases/#2021-06-07-support-for-clientcertificate-authentication \"Direct link to 2021-06-07 Support for ClientCertificate authentication\")\nWe have added support for ClientCertificates, which can be configured for a component or a specific environment.\nRead more about ClientCertificates here: [ClientCertificate](https://radix.equinor.com/radix-config/#clientcertificate)\n### 2021-04-19 Running on-demand jobs in Radix[​](https://radix.equinor.com/docs/topic-releases/#2021-04-19-running-on-demand-jobs-in-radix \"Direct link to 2021-04-19 Running on-demand jobs in Radix\")\nA job is an on-demand and short lived container/process that performs a set of tasks, e.g. a ML training job or an ETL job, and exits when it's done. The duration of a job can span from seconds to hours, depending on what tasks it performs, but it is expected to exit when it has completed the work. Multiple jobs can be created and running simultaneously.\nCPU, GPU and memory resources requested by a job are reserved when it starts, and released when it ends. This will help reduce the total cost for an application since cost is only calculated for running containers.\nYou define jobs in the radixconfig.yaml file in your repo, similar to how you define components.\nJobs are started and monitored through a job-scheduler web API, created by Radix for each job defined in radixconfig.yaml The OpenAPI/Swagger definition for the job-scheduler can be downloaded here, and you can use <https://github.com/OpenAPITools/openapi-generator> to generate clients for your preferred language.\nRead more about jobs here: [Configure Jobs](https://radix.equinor.com/guides/jobs/)\n### 2021-03-22 Regenerate webhook secret and deploy key[​](https://radix.equinor.com/docs/topic-releases/#2021-03-22-regenerate-webhook-secret-and-deploy-key \"Direct link to 2021-03-22 Regenerate webhook secret and deploy key\")\nTo support the lifecycle managment of applications, it is now possible to update the webhook secret and the deploy key for the integration from Radix to the GitHub repo.\nTo get a brand new secret and key use the \"Regenerate deploy key and webhook secret\" button in the Application Configuration area in the Radix Web Console.\n### 2021-01-13 Radix Web Console: Indication of outdated image[​](https://radix.equinor.com/docs/topic-releases/#2021-01-13-radix-web-console-indication-of-outdated-image \"Direct link to 2021-01-13 Radix Web Console: Indication of outdated image\")\nYou will now be alerted on the Applications page if there is anything wrong with the running components on your application. A warning icon will now be present on the environment card on the Applications page if any of the active components are failing.\nThe icon is a small exclamation mark next to the component name. To get more information on what is wrong you can hover over the icon. There is also a new warning label stating 'Outdated image' on the Environments page under 'Active components'. This label will appear when your running component is using an old image and typically happens when the latest deployment causes the new component to be unable to start, or the readiness probe is unable to reach it.\nwarning\nIn the transition right after a deployment, the Outdated image label will appear. Once the new replicas have started this will be replaced with the Ok label.\n### 2021-01-12 Radix Web Console: Events available[​](https://radix.equinor.com/docs/topic-releases/#2021-01-12-radix-web-console-events-available \"Direct link to 2021-01-12 Radix Web Console: Events available\")\nKubernetes events related to application environments are now displayed in the Environments page, below Previous deployments.\nThese events can be helpful when diagnosing application issues, e.g. recurring crashes/restarts or incorrect port configurations.\nEvents are sorted descending by the time the event occurred. There are two types of events; Normal and Warning.\n  * Normal events are informational messages related to resources in the application environment, e.g. creating, starting, stopping and deleting containers, pulling images, syncing ingresses etc. Warning events are logged when there is a problem with a resource in the application environment, eg. backoff (container crashing/restarting), readiness probe failure (container not listening on defined port), missing secrets etc.\n  * Warnings are usually related to issues with containers running in pods. If/when the cause of a pod related warning is resolved, e.g. the readiness probe receives a response on the defined port or a crashed container restarts, the warning will be flagged as Resolved. Warnings that reference pods from an old deployment will be flagged as Obsolete. Events older than one hour are delete from the list. A Warning event will remain in the list as long as it is not Resolved or Obsolete.\n\n\n## 2020[​](https://radix.equinor.com/docs/topic-releases/#2020 \"Direct link to 2020\")\n### 2020-12-16 Support for mounting external storage in app containers[​](https://radix.equinor.com/docs/topic-releases/#2020-12-16-support-for-mounting-external-storage-in-app-containers \"Direct link to 2020-12-16 Support for mounting external storage in app containers\")\nWe have added support for mounting Blob Containers from Azure Storage Accounts to applications hosted in Radix. The current implementation uses the Blobfuse FlexVolume", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3e71730e57d49cddc7e68f51418628dc", "__created_at__": 1748191392.2717485, "content": "\")\n### 2020-12-16 Support for mounting external storage in app containers[​](https://radix.equinor.com/docs/topic-releases/#2020-12-16-support-for-mounting-external-storage-in-app-containers \"Direct link to 2020-12-16 Support for mounting external storage in app containers\")\nWe have added support for mounting Blob Containers from Azure Storage Accounts to applications hosted in Radix. The current implementation uses the Blobfuse FlexVolume Driver. This driver will most likely be replaced by the Blob CSI Driver, which was in preview when development started. Blob storage is available in both Radix Playground and Radix Platform.\n[External storage configuration](https://radix.equinor.com/guides/volume-mounts/)\n[PreviousDocs](https://radix.equinor.com/docs/)[NextDocker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [2025](https://radix.equinor.com/docs/topic-releases/#2025)\n    * [2025-05-14](https://radix.equinor.com/docs/topic-releases/#2025-05-14)\n    * [2025-05-15](https://radix.equinor.com/docs/topic-releases/#2025-05-15)\n    * [2025-05-10](https://radix.equinor.com/docs/topic-releases/#2025-05-10)\n    * [2025-04-25](https://radix.equinor.com/docs/topic-releases/#2025-04-25)\n    * [2025-04-08](https://radix.equinor.com/docs/topic-releases/#2025-04-08)\n    * [2025-03-17](https://radix.equinor.com/docs/topic-releases/#2025-03-17)\n    * [2025-03-03](https://radix.equinor.com/docs/topic-releases/#2025-03-03)\n    * [2025-02-21](https://radix.equinor.com/docs/topic-releases/#2025-02-21)\n    * [2025-02-20](https://radix.equinor.com/docs/topic-releases/#2025-02-20)\n    * [2025-02-10](https://radix.equinor.com/docs/topic-releases/#2025-02-10)\n  * [2024](https://radix.equinor.com/docs/topic-releases/#2024)\n    * [2024-12-20 Relaxed Memory limit rules](https://radix.equinor.com/docs/topic-releases/#2024-12-20-relaxed-memory-limit-rules)\n    * [2024-12-19 Advanced Health Checks](https://radix.equinor.com/docs/topic-releases/#2024-12-19-advanced-health-checks)\n    * [2024-12-17 Controlling batch job failures using exit codes](https://radix.equinor.com/docs/topic-releases/#2024-12-17-controlling-batch-job-failures-using-exit-codes)\n    * [2024-11-12 Radix CLI and gitHub action updates](https://radix.equinor.com/docs/topic-releases/#2024-11-12-radix-cli-and-github-action-updates)\n    * [2024-11-11 Changes to Radix pipeline jobs](https://radix.equinor.com/docs/topic-releases/#2024-11-11-changes-to-radix-pipeline-jobs)\n    * [2024-11-11 Some UI (Web Console) improvements](https://radix.equinor.com/docs/topic-releases/#2024-11-11-some-ui-web-console-improvements)\n    * [2024-10-30 Components and pods events in the Radix console](https://radix.equinor.com/docs/topic-releases/#2024-10-30-components-and-pods-events-in-the-radix-console)\n    * [2024-10-24 Update on Azure PostgreSQL Flexible Server DNS resolution](https://radix.equinor.com/docs/topic-releases/#2024-10-24-update-on-azure-postgresql-flexible-server-dns-resolution)\n    * [2024-10-14 Radix - new platform location](https://radix.equinor.com/docs/topic-releases/#2024-10-14-radix---new-platform-location)\n    * [2024-10-09 Public endpoint configuration options](https://radix.equinor.com/docs/topic-releases/#2024-10-09-public-endpoint-configuration-options)\n    * [2024-09-27 Add service principals to the application's administrators/readers list in Radix Web Console](https://radix.equinor.com/docs/topic-releases/#2024-09-27-add-service-principals-to-the-applications-administratorsreaders-list-in-radix-web-console)\n    * [2024-09-27 Restrict access to public components by IP address or CIDR](https://radix.equinor.com/docs/topic-releases/#2024-09-27-restrict-access-to-public-components-by-ip-address-or-cidr)\n    * [2024-09-18 Fix for docker.io rate limit during build](https://radix.equinor.com/docs/topic-releases/#2024-09-18--fix-for-dockerio-rate-limit-during-build)\n    * [2024-09-17 Manual Component Scaling](https://radix.equinor.com/docs/topic-releases/#2024-09-17-manual-component-scaling)\n    * [202", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d4645935197fca0f59b225c508815fc1", "__created_at__": 1748191392.2717485, "content": "-public-components-by-ip-address-or-cidr)\n    * [2024-09-18 Fix for docker.io rate limit during build](https://radix.equinor.com/docs/topic-releases/#2024-09-18--fix-for-dockerio-rate-limit-during-build)\n    * [2024-09-17 Manual Component Scaling](https://radix.equinor.com/docs/topic-releases/#2024-09-17-manual-component-scaling)\n    * [2024-07-10 Custom batch status in Radix scheduled jobs](https://radix.equinor.com/docs/topic-releases/#2024-07-10-custom-batch-status-in-radix-scheduled-jobs)\n    * [2024-06-06 Support for advanced horizontal scaling (KEDA)](https://radix.equinor.com/docs/topic-releases/#2024-06-06-support-for-advanced-horizontal-scaling-keda)\n    * [2024-06-04 Strict validation of RadixConfig.yaml in Radix CLI](https://radix.equinor.com/docs/topic-releases/#2024-06-04-strict-validation-of-radixconfigyaml-in-radix-cli)\n    * [2024-05-06 New option in radixconfig.yaml - sub-pipeline](https://radix.equinor.com/docs/topic-releases/#2024-05-06-new-option-in-radixconfigyaml---sub-pipeline)\n    * [2024-04-19 New pipeline job type: apply-config](https://radix.equinor.com/docs/topic-releases/#2024-04-19-new-pipeline-job-type-apply-config)\n    * [2024-04-18 Extended scheduled job statuses](https://radix.equinor.com/docs/topic-releases/#2024-04-18-extended-scheduled-job-statuses)\n    * [2024-04-16 Environment specific options now available on component level](https://radix.equinor.com/docs/topic-releases/#2024-04-16-environment-specific-options-now-available-on-component-level)\n    * [2024-04-12 Read-only root filesystem](https://radix.equinor.com/docs/topic-releases/#2024-04-12-read-only-root-filesystem)\n    * [2024-03-07 Environment specific `image`, src , dockerfileName in radixconfig.yaml](https://radix.equinor.com/docs/topic-releases/#2024-03-07-environment-specific-image-src--dockerfilename-in-radixconfigyaml)\n    * [2024-03-06 automatic issuance of Digicert (equinor.com) certificates](https://radix.equinor.com/docs/topic-releases/#2024-03-06-automatic-issuance-of-digicert-equinorcom-certificates)\n    * [2024-03-04 Updated Radix documentation website](https://radix.equinor.com/docs/topic-releases/#2024-03-04-updated-radix-documentation-website)\n    * [2024-01-25 Option \"component\" added to deploy-only pipeline job](https://radix.equinor.com/docs/topic-releases/#2024-01-25-option-component-added-to-deploy-only-pipeline-job)\n    * [Custom DNS for your application - within radix.equinor.com](https://radix.equinor.com/docs/topic-releases/#custom-dns-for-your-application---within-radixequinorcom)\n    * [2024-01-03 Sub-Pipeline can now use Workload Identity (Tekton)](https://radix.equinor.com/docs/topic-releases/#2024-01-03-sub-pipeline-can-now-use-workload-identity-tekton)\n    * [2024-01-02 New command available in Radix CLI](https://radix.equinor.com/docs/topic-releases/#2024-01-02-new-command-available-in-radix-cli)\n  * [2023](https://radix.equinor.com/docs/topic-releases/#2023)\n    * [2023-12-05 Support for using images from private repositories](https://radix.equinor.com/docs/topic-releases/#2023-12-05-support-for-using-images-from-private-repositories)\n    * [2023-11-14 Only build changed components and jobs](https://radix.equinor.com/docs/topic-releases/#2023-11-14-only-build-changed-components-and-jobs)\n    * [2023-11-13 New version of Radix CLI](https://radix.equinor.com/docs/topic-releases/#2023-11-13-new-version-of-radix-cli)\n    * [2023-10-20 Commit ID option in deploy-only pipeline jobs](https://radix.equinor.com/docs/topic-releases/#2023-10-20-commit-id-option-in-deploy-only-pipeline-jobs)\n    * [2023-10-18 Rerun failed or stopped pipeline jobs](https://radix.equinor.com/docs/topic-releases/#2023-10-18-rerun-failed-or-stopped-pipeline-jobs)\n    * [2023-10-09 Changes in Azure Blob volume-mounts](https://radix.equinor.com/docs/topic-releases/#2023-10-09-changes-in-azure-blob-volume-mounts)\n    * [2023-10-02 Radix now supports docker BuildKit in the pipeline](https://radix.equinor.com/docs/topic-releases/#2023-10-02-radix-now-supports-docker-buildkit-in-the-pipeline)\n    * [Grouped secrets in Radix Web Console", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1521d889ed0e1753b97b17620823d254", "__created_at__": 1748191392.2717485, "content": "volume-mounts](https://radix.equinor.com/docs/topic-releases/#2023-10-09-changes-in-azure-blob-volume-mounts)\n    * [2023-10-02 Radix now supports docker BuildKit in the pipeline](https://radix.equinor.com/docs/topic-releases/#2023-10-02-radix-now-supports-docker-buildkit-in-the-pipeline)\n    * [Grouped secrets in Radix Web Console](https://radix.equinor.com/docs/topic-releases/#grouped-secrets-in-radix-web-console)\n    * [2023-09-26 Improved log feature for jobs (job compnent) in Radix Web Console](https://radix.equinor.com/docs/topic-releases/#2023-09-26-improved-log-feature-for-jobs-job-compnent-in-radix-web-console)\n    * [2023-09-19 Radix now runs all jobs in a separate node-pool](https://radix.equinor.com/docs/topic-releases/#2023-09-19-radix-now-runs-all-jobs-in-a-separate-node-pool)\n    * [2023-08-22 Updated Radix CLI and Radix GitHub actions](https://radix.equinor.com/docs/topic-releases/#2023-08-22-updated-radix-cli-and-radix-github-actions)\n    * [2023-08-15 Radix application reader role](https://radix.equinor.com/docs/topic-releases/#2023-08-15-radix-application-reader-role)\n    * [2023-08-01 Restart batches and _jobs with recent active deployment_](https://radix.equinor.com/docs/topic-releases/#2023-08-01-restart-batches-and-jobs-with-recent-active-deployment)\n    * [2023-07-13 Restart scheduled batches and jobs](https://radix.equinor.com/docs/topic-releases/#2023-07-13-restart-scheduled-batches-and-jobs)\n    * [2023-07-05 Change in Azure Blob volume-mounts option](https://radix.equinor.com/docs/topic-releases/#2023-07-05-change-in-azure-blob-volume-mounts-option)\n    * [2023-05-16 Support for custom CPU scaling threshold and autoscaling on memory](https://radix.equinor.com/docs/topic-releases/#2023-05-16-support-for-custom-cpu-scaling-threshold-and-autoscaling-on-memory)\n    * [2023-05-24 Old Replica logs! Get your old Replica logs here!](https://radix.equinor.com/docs/topic-releases/#2023-05-24-old-replica-logs-get-your-old-replica-logs-here)\n    * [2023-05-02 Radix does not allow to run Sub-Pipeline task steps with root users](https://radix.equinor.com/docs/topic-releases/#2023-05-02-radix-does-not-allow-to-run-sub-pipeline-task-steps-with-root-users)\n    * [2023-04-14 Radix supports Azure Workload Identity for Azure Key Vaults](https://radix.equinor.com/docs/topic-releases/#2023-04-14-radix-supports-azure-workload-identity-for-azure-key-vaults)\n    * [2023-04-12 Radix application configuration - Admin AD group is now mandatory](https://radix.equinor.com/docs/topic-releases/#2023-04-12-radix-application-configuration---admin-ad-group-is-now-mandatory)\n    * [2023-03-28 New version of Radix CLI version 1.7](https://radix.equinor.com/docs/topic-releases/#2023-03-28-new-version-of-radix-cli-version-17)\n    * [2023-03-14 Radix updates](https://radix.equinor.com/docs/topic-releases/#2023-03-14-radix-updates)\n    * [2023-03-07 Schema for radixconfig.yaml](https://radix.equinor.com/docs/topic-releases/#2023-03-07-schema-for-radixconfigyaml)\n    * [2023-02-28 Radix Web Console: Stop a regular job and batched jobs](https://radix.equinor.com/docs/topic-releases/#2023-02-28-radix-web-console-stop-a-regular-job-and-batched-jobs)\n    * [2023-02-24 Option to pass $GITHUB_TOKEN to the Radix GH Action](https://radix.equinor.com/docs/topic-releases/#2023-02-24-option-to-pass-github_token-to-the-radix-gh-action)\n    * [2023-02-16 Radix Web Console: Start, Stop and Restart environments](https://radix.equinor.com/docs/topic-releases/#2023-02-16-radix-web-console-start-stop-and-restart-environments)\n    * [2023-01-31 Radix Playground lifecycle policy](https://radix.equinor.com/docs/topic-releases/#2023-01-31-radix-playground-lifecycle-policy)\n    * [2023-01-23 Radix Web Console: Shown replica resources and scheduled job resources and settings](https://radix.equinor.com/docs/topic-releases/#2023-01-23-radix-web-console-shown-replica-resources-and-scheduled-job-resources-and-settings)\n    * [2023-01-18 Custom branch name for wildcard", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-07efc73307c708e5133672eea09a373f", "__created_at__": 1748191392.2717485, "content": ".com/docs/topic-releases/#2023-01-31-radix-playground-lifecycle-policy)\n    * [2023-01-23 Radix Web Console: Shown replica resources and scheduled job resources and settings](https://radix.equinor.com/docs/topic-releases/#2023-01-23-radix-web-console-shown-replica-resources-and-scheduled-job-resources-and-settings)\n    * [2023-01-18 Custom branch name for wildcard branch mapping](https://radix.equinor.com/docs/topic-releases/#2023-01-18-custom-branch-name-for-wildcard-branch-mapping)\n    * [2023-01-17 Machine user tokens deprecated](https://radix.equinor.com/docs/topic-releases/#2023-01-17-machine-user-tokens-deprecated)\n    * [2023-01-10 Federated Credentials with Azure AD Application and Managed Identity](https://radix.equinor.com/docs/topic-releases/#2023-01-10-federated-credentials-with-azure-ad-application-and-managed-identity)\n  * [2022](https://radix.equinor.com/docs/topic-releases/#2022)\n    * [2022-11-10 Configuration Item replaces WBS and owner and is now mandatory](https://radix.equinor.com/docs/topic-releases/#2022-11-10-configuration-item-replaces-wbs-and-owner-and-is-now-mandatory)\n    * [2022-11-01 Enable and/or Disable components](https://radix.equinor.com/docs/topic-releases/#2022-11-01-enable-andor-disable-components)\n    * [2022-11-01 External DNS certificate and key validation](https://radix.equinor.com/docs/topic-releases/#2022-11-01-external-dns-certificate-and-key-validation)\n    * [2022-10-13 Supporting monorepo and custom radixconfig names](https://radix.equinor.com/docs/topic-releases/#2022-10-13-supporting-monorepo-and-custom-radixconfig-names)\n    * [2022-10-12 Radix CLI version v1.2.1](https://radix.equinor.com/docs/topic-releases/#2022-10-12-radix-cli-version-v121)\n    * [2022-09-23 Improvements in Radix Web Console](https://radix.equinor.com/docs/topic-releases/#2022-09-23-improvements-in-radix-web-console)\n    * [2022-09-20 Radix CLI version v1.2.0](https://radix.equinor.com/docs/topic-releases/#2022-09-20-radix-cli-version-v120)\n    * [2022-09-20 Azure key vault secret autorotation](https://radix.equinor.com/docs/topic-releases/#2022-09-20-azure-key-vault-secret-autorotation)\n    * [2022-09-01 Vulnerability scan removed from build pipeline](https://radix.equinor.com/docs/topic-releases/#2022-09-01-vulnerability-scan-removed-from-build-pipeline)\n    * [2022-09-01 Select Radix Application Administrator Group by name](https://radix.equinor.com/docs/topic-releases/#2022-09-01-select-radix-application-administrator-group-by-name)\n    * [2022-08-16 GIT Metadata updates](https://radix.equinor.com/docs/topic-releases/#2022-08-16-git-metadata-updates)\n    * [2022-08-10 Azure Key Vault values version](https://radix.equinor.com/docs/topic-releases/#2022-08-10-azure-key-vault-values-version)\n    * [2022-08-10 Pipeline information for favourite appliactions in Radix Web Console](https://radix.equinor.com/docs/topic-releases/#2022-08-10-pipeline-information-for-favourite-appliactions-in-radix-web-console)\n    * [2022-06-28 Log lines limit](https://radix.equinor.com/docs/topic-releases/#2022-06-28-log-lines-limit)\n    * [2022-06-20 Change in Azure Blob volume-mounts accessMode](https://radix.equinor.com/docs/topic-releases/#2022-06-20-change-in-azure-blob-volume-mounts-accessmode)\n    * [2022-06-20 Introducing sub-pipeline concept (Tekton)](https://radix.equinor.com/docs/topic-releases/#2022-06-20-introducing-sub-pipeline-concept-tekton)\n    * [2022-06-20 Improved performance of the Radix Operator](https://radix.equinor.com/docs/topic-releases/#2022-06-20-improved-performance-of-the-radix-operator)\n    * [2022-05-30 Scheduled vulnerability scan implemented](https://radix.equinor.com/docs/topic-releases/#2022-05-30-scheduled-vulnerability-scan-implemented)\n    * [2022-04-28 Improved/simpler **egress** rules configuration](https://radix.equinor.com/docs/topic-releases/#2022-04-28-improvedsimpler-egress-rules-configuration)\n    * [2022-04-12 Static **ingress** IPs](https://radix.equinor.com/docs/topic-releases/#2022-04-12-static-ingress-ips)\n    * [2022-03-11 Custom configuration of the Metrics endpoint](https", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-244e654bc0501944cd2c586f9b76caaf", "__created_at__": 1748191392.2717485, "content": "Improved/simpler **egress** rules configuration](https://radix.equinor.com/docs/topic-releases/#2022-04-28-improvedsimpler-egress-rules-configuration)\n    * [2022-04-12 Static **ingress** IPs](https://radix.equinor.com/docs/topic-releases/#2022-04-12-static-ingress-ips)\n    * [2022-03-11 Custom configuration of the Metrics endpoint](https://radix.equinor.com/docs/topic-releases/#2022-03-11-custom-configuration-of-the-metrics-endpoint)\n    * [2022-02-28 Support for egress rules](https://radix.equinor.com/docs/topic-releases/#2022-02-28-support-for-egress-rules)\n    * [2022-02-18 Build Pipeline steps](https://radix.equinor.com/docs/topic-releases/#2022-02-18-build-pipeline-steps)\n    * [2022-02-07 Job manager: Configure time limit for jobs](https://radix.equinor.com/docs/topic-releases/#2022-02-07-job-manager-configure-time-limit-for-jobs)\n    * [2022-02-01 Support for Azure Key Vault](https://radix.equinor.com/docs/topic-releases/#2022-02-01-support-for-azure-key-vault)\n    * [2022-02-01 Built-in configuration for OAuth2 authorization](https://radix.equinor.com/docs/topic-releases/#2022-02-01-built-in-configuration-for-oauth2-authorization)\n    * [2022-01-11 Changes to validation of radixconfig](https://radix.equinor.com/docs/topic-releases/#2022-01-11-changes-to-validation-of-radixconfig)\n  * [2021](https://radix.equinor.com/docs/topic-releases/#2021)\n    * [2021-12-09 Active cluster IPs as environment variable](https://radix.equinor.com/docs/topic-releases/#2021-12-09-active-cluster-ips-as-environment-variable)\n    * [2021-11-23 Cluster IPs](https://radix.equinor.com/docs/topic-releases/#2021-11-23-cluster-ips)\n    * [2021-11-18 Radix Slack Alerts](https://radix.equinor.com/docs/topic-releases/#2021-11-18-radix-slack-alerts)\n    * [2021-10-29 New design: Radix documentation (Public site)](https://radix.equinor.com/docs/topic-releases/#2021-10-29-new-design-radix-documentation-public-site)\n    * [2021-10-14 Radix CLI version v1.0.7](https://radix.equinor.com/docs/topic-releases/#2021-10-14-radix-cli-version-v107)\n    * [2021-09-09 New Radix Web Console](https://radix.equinor.com/docs/topic-releases/#2021-09-09-new-radix-web-console)\n    * [2021-09-01 Radix Security Policy: Enforce 'Run as non-root'](https://radix.equinor.com/docs/topic-releases/#2021-09-01-radix-security-policy-enforce-run-as-non-root)\n    * [2021-06-22 Support for files in Azure blob container](https://radix.equinor.com/docs/topic-releases/#2021-06-22-support-for-files-in-azure-blob-container)\n    * [2021-06-16 Pipeline job status badges](https://radix.equinor.com/docs/topic-releases/#2021-06-16-pipeline-job-status-badges)\n    * [2021-06-07 Support for ClientCertificate authentication](https://radix.equinor.com/docs/topic-releases/#2021-06-07-support-for-clientcertificate-authentication)\n    * [2021-04-19 Running on-demand jobs in Radix](https://radix.equinor.com/docs/topic-releases/#2021-04-19-running-on-demand-jobs-in-radix)\n    * [2021-03-22 Regenerate webhook secret and deploy key](https://radix.equinor.com/docs/topic-releases/#2021-03-22-regenerate-webhook-secret-and-deploy-key)\n    * [2021-01-13 Radix Web Console: Indication of outdated image](https://radix.equinor.com/docs/topic-releases/#2021-01-13-radix-web-console-indication-of-outdated-image)\n    * [2021-01-12 Radix Web Console: Events available](https://radix.equinor.com/docs/topic-releases/#2021-01-12-radix-web-console-events-available)\n  * [2020](https://radix.equinor.com/docs/topic-releases/#2020)\n    * [2020-12-16 Support for mounting external storage in app containers](https://radix.equinor.com/docs/topic-releases/#2020-12-16-support-for-mounting-external-storage-in-app-containers)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/deploy-only/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-09f5209f35f8d5c26183427a388931e7", "__created_at__": 1748191392.2717485, "content": "16-support-for-mounting-external-storage-in-app-containers)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/deploy-only/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/deploy-only/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/deploy-only/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Apply Config](https://radix.equinor.com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/deploy-only/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/deploy-only/)\n  * [Jobs](https://radix.equinor.com/guides/deploy-only/)\n  * [Volume Mounts](https://radix.equinor.com/guides/deploy-only/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/deploy-only/)\n  * [GitHub](https://radix.equinor.com/guides/deploy-only/)\n\n\n  * [](https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Deploy Using External CI/CD Tools\n\n\nOn this page\n# Deploy to Radix using other Continuous Integration (CI) tool\nThere might be several reasons why you would opt against using Radix as a CICD platform, and just using the CD part of Radix\n  * Your application consists of a set of components (i.e. micro services), with source code hosted in separate repositories\n  * Your application depends on different resources, and the deployment to Radix needs to be orchestrated\n  * Your team has more advanced needs of the CI i.e. test reports, git lfs\n\n\n## Configuring the app[​](https://radix.equinor.com/guides/deploy-only/#configuring-the-app \"Direct link to Configuring the app\")\nSame as with any other application deployed to Radix, a deploy-only application will need:\n  * A GitHub repository for the code (only GitHub is supported at the moment)\n  * A `radixconfig.yaml` file that defines the running environments, which by default is in the root directory of the repository\n\n\nThese points are described below\n## The repository[​](https://radix.equinor.com/guides/deploy-only/#the-repository \"Direct link to The repository\")\nUnlike a regular Radix application, for a deploy-only application you have two options on how to structure your repositories. You can choose to have:\n  * The GitHub repository which act as a pure configuration repository. That is, source code for the different components resides in other repositories\n  * The `radixconfig.yaml` is in the source code repository\n\n\nThe documentation will use the second option.\n## The `radixconfig.yaml` file[​](https://radix.equinor.com/guides/deploy-only/#the-radixconfigyaml-file \"Direct link to the-radixconfigyaml-file\")\ntip\nRadix only reads `radixconfig.yaml` from the branch we set as the `Config Branch` in the application configuration form. If the file is changed in other branches, those changes will be ignored.\nThe major difference between a `deploy-only` and a regular Radix application, is that the [`image`](https://radix.equinor.com/radix-config/#image) property in `radixconfig.yaml` is set for all components and jobs.\nWhen `image`", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5aa3ef03336d35ecdfc499c2c32ac5a5", "__created_at__": 1748191392.2717485, "content": "Radix only reads `radixconfig.yaml` from the branch we set as the `Config Branch` in the application configuration form. If the file is changed in other branches, those changes will be ignored.\nThe major difference between a `deploy-only` and a regular Radix application, is that the [`image`](https://radix.equinor.com/radix-config/#image) property in `radixconfig.yaml` is set for all components and jobs.\nWhen `image` is suffixed with [`{imageTagName}`](https://radix.equinor.com/radix-config/#imagetagname), the Radix `deploy` pipeline will replace `{imageTagName}` with the environment specific `imageTagName` from `radixconfig.yaml`, or from the value specified with the `--image-tag-name` flag in [`Radix CLI`](https://radix.equinor.com/docs/topic-radix-cli/#commands). If `imageTagName` is not specified for an environment, it must be set with the `--image-tag-name` flag. If both are specified, `--image-tag-name` takes precedence over `imageTagName`.\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: my-appspec:environments:-name: qabuild:from: master-name: prodbuild:from: releasecomponents:-name: apiimage: ghcr.io/my-repo/my-app/api:{imageTagName}ports:-name: httpport:3000publicPort: httpenvironmentConfig:-environment: qaimageTagName: master-latest-environment: prodimageTagName: release-39f1a082-name: redisimage: bitnami/redis:7.2ports:-name: redisport:6379privateImageHubs:ghcr.io:username: <some GitHub user name>email: <some email>\n```\n\nIn the `radixconfig.yaml` above, there are two tagging strategies;\n  * Using a latest tag (i.e. master-latest)\n  * Using a dynamic tag (i.e. release-39f1a082)\n\n\nA dynamic tag in this context means that there is a new tag produced for every build, either referring to the release tag, or the commit sha (in the case above) or any other attributes that uniquely identifies what the image is produced from. The dynamic tag will give better control over what runs in the environment, and it also allows for promoting older deployments in case there is a need for a rollback.\nA static tag will not permit radix to update an existing deployment by relying on changes to [`imageTagName`](https://radix.equinor.com/radix-config/#imagetagname) to pull a new image. To force radix to pull a new image from the image-hub, the component must be restarted using the component page on the web-console or restart call to the [Radix API](https://api.radix.equinor.com/swaggerui/#/component/restartComponent) or [CLI](https://github.com/equinor/radix-cli). The URL for Radix API depends on which [Radix cluster](https://radix.equinor.com/start/radix-clusters/) is hosting the application.\nThe second part of the `radixconfig.yaml` which distinguishes itself from a regular radix application is the [`privateImageHubs` property](https://radix.equinor.com/radix-config/#privateimagehubs). In short, it will allow for the image produced outside of Radix to be pulled down to the Radix cluster.\nAlso what can be said about the configuration above is the branch to environment mapping. Since build of components happens outside of Radix the build -> from configuration seems unnecessary. You could, especially if the repository for the Radix application is a mere configuration repository, leave environments unmapped. We will explain later why we, in this example, have opted to have a branch-environment mapping.\nThe full syntax of `radixconfig.yaml` is explained in [Radix Config reference](https://radix.equinor.com/radix-config/).\n## Registering the application[​](https://radix.equinor.com/guides/deploy-only/#registering-the-application \"Direct link to Registering the application\")\nRegistering the Radix application follows the pattern of a regular Radix application. The only difference is that we skip adding a web-hook to Radix. We then avoid that the application is built and deployed to Radix, using the Radix CI. The mechanism for deploying to Radix will be described in the next section.\n## AD Service principal access token[​](https://radix.equinor.com/guides/deploy-only/#ad-service-principal-access-token \"Direct link to AD Service principal access token\")\nIn a deploy-only scenario, Radix will only deploy, rather than build and deploy, when the GitHub webhook notified about changes, occurred in the repository. In order to run a deploy-only pipeline job, Azure service principals ([Azure AD app registration](https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm) or [user-assigned managed identity](https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)) can be used:\n  * Create or use an existing service principal (Azure AD app registrations or user-assigned managed identities)\n  * Add this service principal as a member to one of the AAD groups, which is set as an administrator of the Radix application. This group need to be of the type Security with the source Cloud. If the group has wrong type or source, a new AD group can be requested from Service", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2cf9e5fd0d22f49295b7294da8c52e56", "__created_at__": 1748191392.2717485, "content": "/active-directory/managed-identities-azure-resources/overview)) can be used:\n  * Create or use an existing service principal (Azure AD app registrations or user-assigned managed identities)\n  * Add this service principal as a member to one of the AAD groups, which is set as an administrator of the Radix application. This group need to be of the type Security with the source Cloud. If the group has wrong type or source, a new AD group can be requested from ServiceNow:\n    * Open the [Services@Equinor](https://equinor.service-now.com/selfservice) portal and find the service \"IT access and accounts\"\n    * Select \"Identity and access management support\", click Next, select \"AccessIT: Application role modelling and support (config)\"\n    * In the Description field, add the comment: \"This is an Azure AD group, which should be of type Security, it will be maintained manually in the Azure portal and not via ServiceNow\"\n    * Once the group is created, add it as an administrator for the Radix application in the Radix Web Console \"Configuration\" form ![Configure the Radix application administrators](https://radix.equinor.com/assets/images/radix-application-administrator-configuration-2aa0084a36931bcdaf5d2d64926cfa4f.png)\n  * Change an external pipeline job (GitHub action, DevOps pipeline, etc.) to login as the service principal with request of an access token, which can be used with Radix CLI or Radix API within such job.\n  * When pipeline job is created by a service principal, it will be visible in the Radix Web Console pipeline job list with this service principal application id with a postfix `(appid)`, or its object id with a postfix `(sub)`. Full id is shown in a tooltip and in the job details\n\n\n![Pipeline job list with IDs](https://radix.equinor.com/assets/images/pipeline-job-list-609ad5c7d59f239231e4ee33ca289e05.png)\ntip\nNote that the access token has one-hour live period, with access to all operations that an application administrator has (i.e. deleting the application, setting secrets). Please make efforts not to have this token fall into the wrong hands.\nRead about [how to connect GitHub actions and Azure](https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure) to add federation between them.\n[Example of use of an access token in a GitHub action](https://radix.equinor.com/guides/deploy-only/example-github-action-using-ad-service-principal-access-token)\n## Making calls to Radix[​](https://radix.equinor.com/guides/deploy-only/#making-calls-to-radix \"Direct link to Making calls to Radix\")\nWith the access token you can make calls to Radix API through either:\n  * Calling the Radix API directly by passing the bearer token (i.e. curl -X GET --header \"Authorization: Bearer $token\")\n  * Calling the API though functions in the [Radix CLI](https://github.com/equinor/radix-cli), which allows for simpler access to the API\n  * Calling the API through [Radix GitHub Actions](https://github.com/equinor/radix-github-actions). If you have opted for GitHub Actions as your CI tool, then calling the Radix API indirectly through the Radix CLI using the Radix GitHub Actions can be done. It allows for simpler access to the CLI in your action's workflow.\n\n\n[Example of using GitHub action to create a Radix deploy pipeline job](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job)\n### Updating deployments on static tags[​](https://radix.equinor.com/guides/deploy-only/#updating-deployments-on-static-tags \"Direct link to Updating deployments on static tags\")\nAs part of deploying an application to kubernetes, Radix reads the radixconfig.yaml file and based on this creates kubernetes resources. If there are no changes to the radixconfig.yaml file, there will be no changes to the underlying kubernetes resources. As a default kubernetes will then do nothing.\nWhen utilizing static tags, there will often be no changes to radixconfig.yaml when performing a deployment. Kubernetes will then continue to run its existing containers after deployment.\nThis default behavior can be overwritten in radixconfig.yaml by setting flag `alwaysPullImageOnDeploy` on component level. When this flag is set to true, a deployment will always lead to a change in the underlying kubernetes resource, which again lead to kubernetes pulling the newest image from the container registry.\n```\nspec:environments:components:-name: apiimage: ghcr.io/my-repo/my-app/api:latestalwaysPullImageOnDeploy:true\n```\n\nTip\nYou can also include the reference to the image itself in the `imageTagName` property, sample:\n```\ncomponents:-name: appimage:{imageTagName}environmentConfig:-environment: qaimageTagName: docker.pkg.github.com/equinor/myapp/backend:qa-environment: devimageTagName: docker.pkg.github.com/equinor/myapp/backend:dev \n```\n\n### Configuring a personal access token[​](https://radix.equinor.com/guides/deploy-only/#configuring-a-personal-access-token \"Direct link to Configuring a personal access token\")\nGo to developer settings in GitHub to generate an access token (Enable SSO in order to be able to access GitHub Equinor organization):\n![PersonalAccessToken](https://radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2a57c9b710ef0bdaa487c3644989d107", "__created_at__": 1748191392.2717485, "content": "TagName: docker.pkg.github.com/equinor/myapp/backend:dev \n```\n\n### Configuring a personal access token[​](https://radix.equinor.com/guides/deploy-only/#configuring-a-personal-access-token \"Direct link to Configuring a personal access token\")\nGo to developer settings in GitHub to generate an access token (Enable SSO in order to be able to access GitHub Equinor organization):\n![PersonalAccessToken](https://radix.equinor.com/assets/images/PersonalAccessToken-75419a8d340565c3ed5e0cf4b61f2ba9.png)\nSet the privileges to allow it to create packages:\n![ReadAndWritePackages](https://radix.equinor.com/assets/images/ReadAndWritePackages-ff91774c577b1456974472b3404270a5.png)\n### The workflow[​](https://radix.equinor.com/guides/deploy-only/#the-workflow \"Direct link to The workflow\")\nIn the above workflow we have a series of steps. They are:\n  * `Set default image tag` - In the example we have a fixed tag for qa environment (i.e. master-latest) while we have a dynamic tag for prod environment. This step sets the default tag for qa environment, or any other environment we choose to add with a latest tagging strategy\n  * `Override image tag for prod environment` - Gives a dynamic image tag for production\n  * `Build API component` - Building is now done outside of Radix\n  * `Push the image to GPR` - Pushes a package to Github package repository using the `PRIVATE_TOKEN` (personal access token)\n  * `Prepare for committing new tag to radix config on master` - Since we are using the dynamic tagging for prod environment, we have to commit to master a version of the `radixconfig.yaml` holding the newly produced tag. This step checks out master branch of the repository\n  * `Modify radixconfig tag for production on master branch` - This step calls a custom script to modify the tag in `radixconfig.yaml` and the commits and push the change on master\n  * `Get environment from branch` - This steps calls a utility function in the CLI for obtaining the environment based on the current brach from the branch-environment mapping in the `radixconfig.yaml` of the repository\n  * `Deploy API on Radix` - This step calls the CLI function, which calls the deploy pipeline function of the Radix API for running the deploy pipeline. It uses the output of the previous step to tell Radix which environment it should deploy to. Note that is using `development` context to contact the API in the development cluster. Similarly if context is `playground` it will contact API in playground cluster. If you remove this entirely, it will default to `production` context\n\n\ntip\nNote that the push of the dynamic image tag of the prod environment to master branch creates a side-effect of building the QA environment again, as this is mapped to master. This shows, master branch should not be mapped to any environment (neither in the `radixconfig.yaml`, nor in the GitHub Actions workflow) `--from-config` is an argument to `radix-cli` to tell it that there is an radixconfig in your repository that it can get information from, such as application name or branch mapping\n## Configure Radix to use GitHub package[​](https://radix.equinor.com/guides/deploy-only/#configure-radix-to-use-github-package \"Direct link to Configure Radix to use GitHub package\")\nGo to the application `Configuration` page to set the secret, which will be the personal access token you have created with access to read packages in the Equinor organization. This gives Radix access to pull any package in the Equinor organization referred to in the `radixconfig.yaml`:\n![PrivateImageHubSecret](https://radix.equinor.com/assets/images/private-image-hubs-30c2c28ea57273b4566eb8de22c4b06f.png)\n## Coordinating workflow[​](https://radix.equinor.com/guides/deploy-only/#coordinating-workflow \"Direct link to Coordinating workflow\")\nIn the example repository that we have used for this documentation we are setting secrets in Radix to be values associated with resources in Azure created for the application. The additional workflow steps are shown below. They are:\n  * Log into Azure - See [here](https://github.com/Azure/login) for documentation on what the `AZURE_CREDENTIALS` should contain\n  * `Get instrumentation key and connection string` - Obtains and passes on to subsequent steps the secret values to be set in Radix. Note that you should `add-mask` to any secret that you pass on in the workflow, to ensure that it is not exposed in the log of the workflow\n  * `Set instrumentation key as secret` - Takes one of the secrets passed on from the previous steps and set the secret for the application, for the environment this branch is mapped to (in the `development` cluster)\n  * `Set connection string as secret` - Sets the second secret value\n\n\n[Example of using GitHub action to create a Radix deploy pipeline job](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job)\ntip\nDisclaimer: Please seek advice elsewhere on whether GitHub Actions and/or GitHub package repository is the right option for you. Both features are new, and we have too little experience as an organization to make any recommendations, both in terms of robustness and in terms of cost. A private", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c171232d056b8241801d314e9d0247a4", "__created_at__": 1748191392.2717485, "content": "using GitHub action to create a Radix deploy pipeline job](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job)\ntip\nDisclaimer: Please seek advice elsewhere on whether GitHub Actions and/or GitHub package repository is the right option for you. Both features are new, and we have too little experience as an organization to make any recommendations, both in terms of robustness and in terms of cost. A private Azure container registry (ACR) would for instance allow you to set it up with a service account, rather than using your personal account. This document is meant to be a user guide on how to combine these with Radix, as one of many alternatives for running CI outside of Radix.\n## Deploy only specific component[​](https://radix.equinor.com/guides/deploy-only/#deploy-only-specific-component \"Direct link to Deploy only specific component\")\nWhen a Radix application has multiple components and only one or some of them need to be deployed, an option `component` can be used to specify these components. Multiple components can be specified. Other components, if exist in the environment, will not be re-deployed, keeping their `commitID` and `gitTags`, environment variables, secrets, etc. Replicas of not deployed components will not be restarted on deployment.\nPlease look at [Radix CLI deploy command](https://radix.equinor.com/docs/topic-radix-cli/#deploy-pipeline-job) for examples. The `component` option can also be used with [Radix GitHub action](https://github.com/equinor/radix-github-actions) and Radix API.\nWhen deploy pipeline job has been run with `component` option, Radix console will indicate on pipeline job, deployment and environment pages which components were not deployed:\n_Component**component1** keeps deployment commit @b57c551_\nWhere _commit @b57c551_ will be shown only when the previous deployment of the component has this `CommitID` specified\n##### Pipeline job[​](https://radix.equinor.com/guides/deploy-only/#pipeline-job \"Direct link to Pipeline job\")\n![Deploy job with specific component](https://radix.equinor.com/assets/images/deploy-job-with-specific-component-0515aceb47d7b5fe87e2067765ac90ec.png)\n##### Deployment[​](https://radix.equinor.com/guides/deploy-only/#deployment \"Direct link to Deployment\")\n![Deployment with specific component](https://radix.equinor.com/assets/images/deployment-with-specific-component-12f7857837cb56900c9dae3cdd37f19c.png)\n##### Environment[​](https://radix.equinor.com/guides/deploy-only/#environment \"Direct link to Environment\")\n![Environment with specific deployed component](https://radix.equinor.com/assets/images/environment-with-specific-deployed-component-2799cf923be7d1a9832206b7c2755653.png)\n[PreviousBuild and Deploy](https://radix.equinor.com/guides/build-and-deploy/)[NextDeployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n  * [Configuring the app](https://radix.equinor.com/guides/deploy-only/#configuring-the-app)\n  * [The repository](https://radix.equinor.com/guides/deploy-only/#the-repository)\n  * [The `radixconfig.yaml` file](https://radix.equinor.com/guides/deploy-only/#the-radixconfigyaml-file)\n  * [Registering the application](https://radix.equinor.com/guides/deploy-only/#registering-the-application)\n  * [AD Service principal access token](https://radix.equinor.com/guides/deploy-only/#ad-service-principal-access-token)\n  * [Making calls to Radix](https://radix.equinor.com/guides/deploy-only/#making-calls-to-radix)\n    * [Updating deployments on static tags](https://radix.equinor.com/guides/deploy-only/#updating-deployments-on-static-tags)\n    * [Configuring a personal access token](https://radix.equinor.com/guides/deploy-only/#configuring-a-personal-access-token)\n    * [The workflow](https://radix.equinor.com/guides/deploy-only/#the-workflow)\n  * [Configure Radix to use GitHub package](https://radix.equinor.com/guides/deploy-only/#configure-radix-to-use-github-package)\n  * [Coordinating workflow](https://radix.equinor.com/guides/deploy-only/#coordinating-workflow)\n  * [Deploy only specific component](https://radix.equinor.com/guides/deploy-only/#deploy-only-specific-component)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-redis/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equin", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-323a783a66044e7194267e4a2c078c42", "__created_at__": 1748191392.2717485, "content": ".com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Redis cache\n\n\n# Redis cache\nRedis (Remote Dictionary Server) is an open-source data structure. It is primarily used as a database, cache, and message broker.\n# Redis Cache Usage for Storing Session IDs\nOne common use case for Redis is storing session IDs in web applications. When a user logs into a web application, a session is created with a unique ID. This session ID is often stored in a Redis cache for fast retrieval. It is recommended to use Redis as session store instead of cookie because of knows issues with refreshing the access token and updating the session cookie's Expires attribute.\n# Challenges of Running Redis as a Pod in Radix (in Kubernetes)\nRunning Redis in a containerised environment like Kubernetes can have challenges, one of them is pod restart and data loss. Redis operates in memory, which means its data is volatile. If a Redis pod is restarted due to node failure or pod eviction, all in-memory data, including session IDs, is lost unless persistence is configured. This can force users to log in again, leading to a poor user experience.\nRadix does not implicitly restart pods, configured to use pre-built `image` property when no changes in the `radixconfig.yaml` where applied to such component before deployment, e.g. `image` version or environment variables are changed. However, autoscaling of a cluster or maintenance of a cluster node can restart pods.\n# Using Azure Cache for Redis as an Alternative\nTo overcome the limitations of running Redis natively in Kubernetes, a more robust solution is to use <https://azure.microsoft.com/en-us/products/cache>. Azure Cache for Redis is a fully managed, scalable, and highly available Redis service provided by Microsoft Azure.\ntip\nIt is highly recommend to use a persistent Session Store for production applications, like [Azure Cache for Redis](https://azure.microsoft.com/en-us/products/cache).\nRadix Web Console also uses Azure Cache for Redis to store sessions.\n[PreviousIntegrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b8f11f19bda93addbf9e1c9071750435", "__created_at__": 1748191392.2717485, "content": "://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * Job Manager and job API\n\n\nOn this page\n# Job Manager and job API\n## Job Manager and job API[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-manager-and-job-api \"Direct link to Job Manager and job API\")\nThe Job Manager, aka \"job-scheduler\", is a web API service, that you use to create, delete and monitor the state of jobs. Radix creates one job-scheduler per job defined in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#jobs). A job-scheduler will listen to the port defined by `schedulerPort` and host name equal to the `name` of the job. The job-scheduler API can only be accessed by components running in the same environment, and it is not exposed to the Internet. No authentication is required.\nThe Job Manager exposes the following methods for managing jobs:\n  * `GET /api/v1/jobs` Get states (with names and statuses) for all jobs\n  * `GET /api/v1/jobs/{jobName}` Get state for a named job\n  * `DELETE /api/v1/jobs/{jobName}` Delete a named job\n  * `POST /api/v1/jobs/{jobName}/stop` Stop a named job\n\n\n... and the following methods for managing batches:\n  * `GET /api/v1/batches` Get states (with names and statuses) for all batches\n  * `GET /api/v1/batches/{batchName}` Get state for a named batch and statuses of its jobs\n  * `DELETE /api/v1/batches/{batchName}` Delete a named batch\n  * `POST /api/v1/batches/{batchName}/stop` Stop a named batch\n  * `POST /api/v1/batches/{batchName}/jobs/{jobName}/stop` Stop a named job of a batch\n\n\n## Create a single job[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#create-a-single-job \"Direct link to Create a single job\")\n  * `POST /api/v1/jobs` Create a new job using the Docker image that Radix built for the job. Job-specific arguments can be sent in the request body\n\n\n```\n{\"payload\":\"Sk9CX1BBUkFNMTogeHl6Cg==\",\"jobId\":\"my-job-1\",\"imageTagName\":\"1.0.0\",\"timeLimitSeconds\":120,\"backoffLimit\":10,\"failurePolicy\":{\"rules\":[{\"action\":\"FailJob\",\"onExitCodes\":{\"operator\":\"In\",\"values\":[42]}}]},\"resources\":{\"limits\":{\"memory\":\"32Mi\",\"cpu\":\"300m\"},\"requests\":{\"memory\":\"16Mi\",\"cpu\":\"150m\"}},\"runtime\":{\"nodeType\":\"memory-optimized-2-v1\"}}\n```\n\n`payload`, `jobId`, `imageTagName`, `timeLimitSeconds`, `backoffLimit`, `failurePolicy`, `resources` and `runtime` are all optional fields and any of them can be omitted in the request.\n`imageTagName` field allows to alter", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-39e12fbf2fa80fcb6902c5997889471b", "__created_at__": 1748191392.2717485, "content": "\":{\"limits\":{\"memory\":\"32Mi\",\"cpu\":\"300m\"},\"requests\":{\"memory\":\"16Mi\",\"cpu\":\"150m\"}},\"runtime\":{\"nodeType\":\"memory-optimized-2-v1\"}}\n```\n\n`payload`, `jobId`, `imageTagName`, `timeLimitSeconds`, `backoffLimit`, `failurePolicy`, `resources` and `runtime` are all optional fields and any of them can be omitted in the request.\n`imageTagName` field allows to alter specific job image tag. In order to use it, the `{imageTagName}` need to be set as described in the [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#imagetagname)\n## Create a batch of jobs[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#create-a-batch-of-jobs \"Direct link to Create a batch of jobs\")\n  * `POST /api/v1/batches` Create a new batch of single jobs, using the Docker image, that Radix built for the job component. Job-specific arguments can be sent in the request body, specified individually for each item in `jobScheduleDescriptions` with default values defined in `defaultRadixJobComponentConfig`.\n\n\n```\n{\"batchId\":\"random-batch-id-123\",\"defaultRadixJobComponentConfig\":{\"imageTagName\":\"1.0.0\",\"timeLimitSeconds\":200,\"backoffLimit\":5,\"resources\":{\"limits\":{\"memory\":\"200Mi\",\"cpu\":\"200m\"},\"requests\":{\"memory\":\"100Mi\",\"cpu\":\"100m\"},\"runtime\":{\"architecture\":\"amd64\"}}},\"jobScheduleDescriptions\":[{\"payload\":\"{'data':'value1'}\",\"jobId\":\"my-job-1\",\"imageTagName\":\"1.0.0\",\"timeLimitSeconds\":120,\"backoffLimit\":10,\"resources\":{\"limits\":{\"memory\":\"32Mi\",\"cpu\":\"300m\"},\"requests\":{\"memory\":\"16Mi\",\"cpu\":\"150m\"}},\"runtime\":{\"nodeType\":\"memory-optimized-2-v1\"}},{\"payload\":\"{'data':'value2'}\",\"jobId\":\"my-job-2\",   ...},{\"payload\":\"{'data':'value3'}\",   ...}]}\n```\n\n## Starting a new job[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#starting-a-new-job \"Direct link to Starting a new job\")\nThe example configuration at the top has component named `backend` and two jobs, `compute` and `etl`. Radix creates two job-schedulers, one for each of the two jobs. The job-scheduler for `compute` listens to `http://compute:8000`, and job-scheduler for `etl` listens to `http://etl:9000`.\nTo start a new single job, send a `POST` request to `http://compute:8000/api/v1/jobs` with request body set to\n```\n{\"payload\":\"{\\\"x\\\": 10, \\\"y\\\": 20}\"}\n```\n\nThe job-scheduler creates a new job and mounts the payload from the request body to a file named `payload` in the directory `/compute/args`. Once the job has been created successfully, the `job-scheduler` responds to `backend` with a job state object\n```\n{\"name\":\"batch-compute-20230220101417-idwsxncs-rkwaibwe\",\"started\":\"\",\"ended\":\"\",\"status\":\"Running\"}\n```\n\n  * `name` is the unique name for the job. This is the value to be used in the `GET /api/v1/jobs/{jobName}` and `DELETE /api/v1/jobs/{jobName}` methods. It is also the host name to connect to running job's container, with its exposed port, e.g. `http://batch-compute-20230220100755-xkoxce5g-mll3kxxh:3000`\n  * `started` is the date and time the job was started. It is represented in RFC3339 form and is in UTC.\n  * `ended` is the date and time the job successfully ended. Also represented in RFC3339 form and is in UTC. This value is only set for `Succeeded` jobs.\n  * `status` is the current status of the job. Possible values are `Waiting`, `Stopping`, `Stopped`, `Active`, `Running`, `Succeeded`, `Failed`. `Active` status means that the job has a replica created, but this replica is not ready (due to such reasons as volume mount is not ready, or it is a problem to schedule replica on a node because not enough memory available, etc.), this status can remain forever. Status `Failed` if the job's replica container exits with a non-zero exit code, and `Succeeded` if the exit code is zero.\n\n\n## Getting the status of all existing jobs[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#getting-the-status-of-all-existing-jobs \"Direct link to Getting the status of all existing jobs\")\nGet a list of all single jobs with their states by sending a `GET` request to `http://compute:8000/api/v1/jobs`. The response is an array of job state objects, similar to the response received when creating a new job. Jobs that have been started within a batch are not included in this list\n```\n[{\"name\":\"batch-compute-20230220100755-xkoxce5g-mll3kxxh\",\"started\":\"2021-04-07T09:08:37Z\",\"ended\":\"2021-04-07T09:08:45Z\",\"status\":\"Succeeded\"},{\"name\":\"batch-compute-20230220101417-idwsxncs-rkwaibwe\",\"", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3555b20b1fa9f3dcf51d97cba45a86dc", "__created_at__": 1748191392.2717485, "content": ". Jobs that have been started within a batch are not included in this list\n```\n[{\"name\":\"batch-compute-20230220100755-xkoxce5g-mll3kxxh\",\"started\":\"2021-04-07T09:08:37Z\",\"ended\":\"2021-04-07T09:08:45Z\",\"status\":\"Succeeded\"},{\"name\":\"batch-compute-20230220101417-idwsxncs-rkwaibwe\",\"started\":\"2021-04-07T10:55:56Z\",\"ended\":\"\",\"status\":\"Failed\"}]\n```\n\nTo get state for a specific job (single or one within a batch), e.g. `batch-compute-20230220100755-xkoxce5g-mll3kxxh`, send a `GET` request to `http://compute:8000/api/v1/jobs/batch-compute-20230220100755-xkoxce5g-mll3kxxh`. The response is a single job state object\n```\n{\"name\":\"batch-compute-20230220100755-xkoxce5g-mll3kxxh\",\"started\":\"2021-04-07T09:08:37Z\",\"ended\":\"2021-04-07T09:08:45Z\",\"status\":\"Succeeded\"}\n```\n\n## Deleting an existing job[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#deleting-an-existing-job \"Direct link to Deleting an existing job\")\nThe job list in the example above has a job named `batch-compute-20230220101417-idwsxncs-rkwaibwe`. To delete it, send a `DELETE` request to `http://compute:8000/api/v1/jobs/batch-compute-20230220101417-idwsxncs-rkwaibwe`. A successful deletion will respond with result object. Only single job can be deleted with this method\n```\n{\"status\":\"Success\",\"message\":\"job batch-compute-20230220101417-idwsxncs-rkwaibwe successfully deleted\",\"code\":200}\n```\n\n## Stop a job[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-a-job \"Direct link to Stop a job\")\nThe job list in the example above has a job named `batch-compute-20230220100755-xkoxce5g-mll3kxxh`. To stop it, send a `POST` request to `http://compute:8000/api/v1/jobs/batch-compute-20230220100755-xkoxce5g-mll3kxxh/stop`. A successful stop will respond with result object. Only single job can be stopped with this method. Stop of a job automatically deletes corresponding Kubernetes job and its replica, as well as its log. The job will get the status \"Stopped\".\n```\n{\"status\":\"Success\",\"message\":\"job batch-compute-20230220100755-xkoxce5g-mll3kxxh successfully stopped\",\"code\":200}\n```\n\n```\n{\"status\":\"Success\",\"message\":\"job batch-compute-20230220101417-idwsxncs-rkwaibwe successfully stopped\",\"code\":200}\n```\n\n## Starting a new batch of jobs[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#starting-a-new-batch-of-jobs \"Direct link to Starting a new batch of jobs\")\nTo start a new batch of jobs, send a `POST` request to `http://compute:8000/api/v1/batches` with request body set to\n```\n{\"jobScheduleDescriptions\":[{\"payload\":\"{\\\"x\\\": 10, \\\"y\\\": 20}\"},{\"payload\":\"{\\\"x\\\": 20, \\\"y\\\": 30}\"}]}\n```\n\n### Batch ID[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#batch-id \"Direct link to Batch ID\")\nBatch can have `batchId` - it is an optional string, where any value can be put. Radix does not process it. It can exist in a `batchScheduleDescription` (a request body json) for a batch. If the `batchId` is specified, it will be returned in the batch status, and it will be shown in the Radix console in the batch list.\n### Job ID[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-id \"Direct link to Job ID\")\nJobs can have `jobId` - it is an optional string, where any value can be put. Radix does not process it. It can exist in a `jobScheduleDescription` for a single job or in batch jobs If the `jobId` is specified, it will be returned in the job's status, and it will be shown in the Radix console in the job list.\n#### Job ID in a single job[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-id-in-a-single-job \"Direct link to Job ID in a single job\")\n```\n{\"jobId\":\"my-job\",\"payload\":\"{\\\"x\\\": 10, \\\"y\\\": 20}\"}\n```\n\n#### Job ID in the batch jobs[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-id-in-the-batch-jobs \"Direct link to Job ID in the batch jobs\")\n```\n{\"jobScheduleDescriptions\":[{\"jobId\":\"my-job-1\",\"payload\":\"{\\\"x\\\": 10, \\\"y\\\": 20}\"},{\"jobId\":\"my-job-2\",\"payload\":\"{\\\"x\\\":", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-28a64ea65405bf9762cb46922e0678ca", "__created_at__": 1748191392.2717485, "content": "\\\"y\\\": 20}\"}\n```\n\n#### Job ID in the batch jobs[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-id-in-the-batch-jobs \"Direct link to Job ID in the batch jobs\")\n```\n{\"jobScheduleDescriptions\":[{\"jobId\":\"my-job-1\",\"payload\":\"{\\\"x\\\": 10, \\\"y\\\": 20}\"},{\"jobId\":\"my-job-2\",\"payload\":\"{\\\"x\\\": 20, \\\"y\\\": 30}\"}]}\n```\n\nDefault parameters for jobs can be defined within `DefaultRadixJobComponentConfig`. These parameters can be overridden for each job individually in `JobScheduleDescriptions`\n```\n{\"defaultRadixJobComponentConfig\":{\"imageTagName\":\"1.0.0\",\"timeLimitSeconds\":200,\"backoffLimit\":5,\"resources\":{\"limits\":{\"memory\":\"200Mi\",\"cpu\":\"200m\"},\"requests\":{\"memory\":\"100Mi\",\"cpu\":\"100m\"}}},\"jobScheduleDescriptions\":[{\"payload\":\"{'data':'value1'}\",\"timeLimitSeconds\":120,\"backoffLimit\":2,\"resources\":{\"limits\":{\"memory\":\"32Mi\",\"cpu\":\"300m\"},\"requests\":{\"memory\":\"16Mi\",\"cpu\":\"150m\"}},\"runtime\":{\"nodeType\":\"memory-optimized-2-v1\"}},{\"payload\":\"{'data':'value2'}\",\"imageTagName\":\"2.0.0\"},{\"payload\":\"{'data':'value3'}\",\"timeLimitSeconds\":300,\"backoffLimit\":10,\"runtime\":{}}]}\n```\n\nThe job-scheduler creates a new batch, which will create single jobs for each item in the `JobScheduleDescriptions`. Once the batch has been created, the `job-scheduler` responds to `backend` with a batch state object\n```\n{\"batchName\":\"batch-compute-20220302170647-6ytkltvk\",\"name\":\"batch-compute-20220302170647-6ytkltvk-tlugvgs\",\"created\":\"2022-03-02T17:06:47+01:00\",\"status\":\"Running\"}\n```\n\n  * `batchName` is the unique name for the batch. This is the value to be used in the `GET /api/v1/batches/{batchName}` and `DELETE /api/v1/batches/{batchName}` methods.\n  * `started` is the date and time the batch was started. The value is represented in RFC3339 form and is in UTC.\n  * `ended` is the date and time the batch successfully ended (empty when not completed). The value is represented in RFC3339 form and is in UTC. This value is only set for `Succeeded` batches. Batch is ended when all batched jobs are completed or failed.\n  * `status` is the current status of the batch. Possible values are `Running`, `Succeeded` and `Failed`. Status is `Failed` if the batch fails for any reason.\n\n\n## Get a list of all batches[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#get-a-list-of-all-batches \"Direct link to Get a list of all batches\")\nGet a list of all batches with their states by sending a `GET` request to `http://compute:8000/api/v1/batches`. The response is an array of batch state objects, similar to the response received when creating a new batch\n```\n[{\"name\":\"batch-compute-20220302155333-hrwl53mw\",\"created\":\"2022-03-02T15:53:33+01:00\",\"started\":\"2022-03-02T15:53:33+01:00\",\"ended\":\"2022-03-02T15:54:00+01:00\",\"status\":\"Succeeded\"},{\"name\":\"batch-compute-20220302170647-6ytkltvk\",\"created\":\"2022-03-02T17:06:47+01:00\",\"started\":\"2022-03-02T17:06:47+01:00\",\"status\":\"Running\"}]\n```\n\n## Get a state of a batch[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#get-a-state-of-a-batch \"Direct link to Get a state of a batch\")\nTo get state for a specific batch, e.g. `batch-compute-20220302155333-hrwl53mw`, send a `GET` request to `http://compute:8000/api/v1/batches/batch-compute-20220302155333-hrwl53mw`. The response is a batch state object, with states of its jobs and their replicas (pods) statuses.\n```\n{\"name\":\"batch-compute-20220302155333-hrwl53mw\",\"created\":\"2022-03-02T15:53:33+01:00\",\"started\":\"2022-03-02T15:53:33+01:00\",\"ended\":\"2022-03-02T15:54:00+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-03-02T15:54:00+01:00\",\"jobStatuses\":[{\"jobId\":\"job1\",\"batchName\":\"batch-compute-20220302155333-hrwl53mw\",\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7\",\"created\":\"2022-03-02T15:53:36+01:00\",\"started\":\"2022-03-02T15:53:36+01:00\",\"ended\":\"2022-03-02T15:53:56+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d0e68465b7a3fde0eb6ab0461dd84c9f", "__created_at__": 1748191392.2717485, "content": "20220302155333-hrwl53mw\",\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7\",\"created\":\"2022-03-02T15:53:36+01:00\",\"started\":\"2022-03-02T15:53:36+01:00\",\"ended\":\"2022-03-02T15:53:56+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-03-02T15:53:56+01:00\",\"podStatuses\":[{\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7-5sfnl\",\"created\":\"2022-03-02T15:53:36Z\",\"startTime\":\"2022-03-02T15:53:36Z\",\"endTime\":\"2022-03-02T15:53:56Z\",\"containerStarted\":\"2022-03-02T15:53:36Z\",\"replicaStatus\":{\"status\":\"Succeeded\"},\"image\":\"radixprod.azurecr.io/radix-app-dev-compute:6k8vv\",\"imageId\":\"radixprod.azurecr.io/radix-app-dev-compute@sha256:1f9ce890db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":0,\"reason\":\"Completed\"}]},{\"jobId\":\"job2\",\"batchName\":\"batch-compute-20220302155333-hrwl53mw\",\"name\":\"batch-compute-20220302155333-hrwl53mw-qjzykhrd\",\"created\":\"2022-03-02T15:53:39+01:00\",\"started\":\"2022-03-02T15:53:39+01:00\",\"ended\":\"2022-03-02T15:53:56+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-03-02T15:53:56+01:00\",\"podStatuses\":[{\"name\":\"batch-compute-20220302155333-hrwl53mw-qjzykhrd-5sfnl\",\"created\":\"2022-03-02T15:53:39Z\",\"startTime\":\"2022-03-02T15:53:40Z\",\"endTime\":\"2022-03-02T15:53:56Z\",\"containerStarted\":\"2022-03-02T15:53:40Z\",\"replicaStatus\":{\"status\":\"Succeeded\"},\"image\":\"radixprod.azurecr.io/radix-app-dev-compute:6k8vv\",\"imageId\":\"radixprod.azurecr.io/radix-app-dev-compute@sha256:1f9ce890db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":0,\"reason\":\"Completed\"}]}]}\n```\n\nIf the job's replica failed and job-component has [backoffLimit](https://radix.equinor.com/radix-config/#backofflimit) greater then `0`, `podStatus` contains `exitCode` and `reason` for failed pods. `podIndex` gives an order of pod statuses (starting from `0`)\n```\n{\"name\":\"batch-compute-20220302155333-hrwl53mw\",\"created\":\"2022-03-02T15:53:33+01:00\",\"started\":\"2022-03-02T15:53:33+01:00\",\"ended\":\"2022-03-02T15:53:48+01:00\",\"status\":\"Failed\",\"updated\":\"2022-03-02T15:53:48+01:00\",\"jobStatuses\":[{\"jobId\":\"job1\",\"batchName\":\"batch-compute-20220302155333-hrwl53mw\",\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7\",\"created\":\"2022-03-02T15:53:36+01:00\",\"started\":\"2022-03-02T15:53:36+01:00\",\"ended\":\"2022-03-02T15:53:56+01:00\",\"status\":\"Failed\",\"message\":\"Job has reached the specified backoff limit\",\"updated\":\"2022-03-02T15:53:56+01:00\",\"podStatuses\":[{\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7-wbn9q\",\"created\":\"2022-03-02T15:53:36Z\",\"startTime\":\"2022-03-02T15:53:36Z\",\"endTime\":\"2022-03-02T15:53:40Z\",\"containerStarted\":\"2022-03-02T15:53:36Z\",\"replicaStatus\":{\"status\":\"Failed\"},\"image\":\"radixprod.azurecr.io/radix-app-dev-compute:6k8vv\",\"imageId\":\"radixprod.azurecr.io/radix-app-dev-compute@sha256:1f9ce890db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":1,\"reason\":\"Error\"},{\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7-859xq\",\"created\":\"2022-03-02T15:53:40Z\",\"startTime\":\"2022-03-02T15:53:42Z", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-27ccb0487278462ca00090ddd9ac8df0", "__created_at__": 1748191392.2717485, "content": "db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":1,\"reason\":\"Error\"},{\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7-859xq\",\"created\":\"2022-03-02T15:53:40Z\",\"startTime\":\"2022-03-02T15:53:42Z\",\"endTime\":\"2022-03-02T15:53:48Z\",\"containerStarted\":\"2022-03-02T15:53:42Z\",\"replicaStatus\":{\"status\":\"Failed\"},\"image\":\"radixprod.azurecr.io/radix-app-dev-compute:6k8vv\",\"imageId\":\"radixprod.azurecr.io/radix-app-dev-compute@sha256:1f9ce890db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"podIndex\":1,\"exitCode\":1,\"reason\":\"Error\"}]}]}\n```\n\n## Delete a batch[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#delete-a-batch \"Direct link to Delete a batch\")\nThe batch list in the example above has a batch named `batch-compute-20220302155333-hrwl53mw`. To delete it, send a `DELETE` request to `http://compute:8000/api/v1/batches/batch-compute-20220302155333-hrwl53mw`. A successful deletion will respond with result object. Deleting of a batch job automatically deletes all jobs, belonging to this batch job.\n```\n{\"status\":\"Success\",\"message\":\"batch batch-compute-20220302155333-hrwl53mw successfully deleted\",\"code\":200}\n```\n\n## Stop an existing batch[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-an-existing-batch \"Direct link to Stop an existing batch\")\nThe batch list in the example above has a batch named `batch-compute-20220302155333-hrwl53mw`. To stop it, send a `POST` request to `http://compute:8000/api/v1/batches/batch-compute-20220302155333-hrwl53mw/stop`. A successful stop will respond with result object. Stop of a batch automatically deletes all batch Kubernetes jobs and their replicas, belonging to this batch job, as well as their logs. All not completed jobs will get the status \"Stopped\".\n```\n{\"status\":\"Success\",\"message\":\"batch batch-compute-20220302155333-hrwl53mw successfully stopped\",\"code\":200}\n```\n\n## Stop a jobs in a batch[​](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-a-jobs-in-a-batch \"Direct link to Stop a jobs in a batch\")\nThe batch list in the example above has a batch named `batch-compute-20220302155333-hrwl53mw` and jobs, one of whicvh has name `batch-compute-20220302155333-hrwl53mw-fjhcqwj7`. To stop this job, send a `POST` request to `http://compute:8000/api/v1/batches/batch-compute-20220302155333-hrwl53mw/jobs/batch-compute-20220302155333-hrwl53mw-fjhcqwj7/stop`. A successful stop will respond with result object. Stop of a batch job automatically deletes corresponding Kubernetes job and its replica, as well as its log. The job will get the status \"Stopped\".\n```\n{\"status\":\"Success\",\"message\":\"job batch-compute-20220302155333-hrwl53mw-fjhcqwj7 in the batch batch-compute-20220302155333-hrwl53mw successfully stopped\",\"code\":200}\n```\n\n[PreviousConfiguring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)[NextNotifications](https://radix.equinor.com/guides/jobs/notifications)\n  * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-manager-and-job-api)\n  * [Create a single job](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#create-a-single-job)\n  * [Create a batch of jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#create-a-batch-of-jobs)\n  * [Starting a new job](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#starting-a-new-job)\n  * [Getting the status of all existing jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#getting-the-status-of-all-existing-jobs)\n  * [Deleting an existing job](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#deleting-an-existing-job)\n  * [Stop a job](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-a-job)\n  * [Starting a new batch of jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#starting-a-new-batch-of-jobs)\n    * [Batch ID](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#batch-id)\n    * [Job ID](https://radix.equinor", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-492974a565fe9131d649c8ae417618e8", "__created_at__": 1748191392.2717485, "content": "](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-a-job)\n  * [Starting a new batch of jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#starting-a-new-batch-of-jobs)\n    * [Batch ID](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#batch-id)\n    * [Job ID](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#job-id)\n  * [Get a list of all batches](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#get-a-list-of-all-batches)\n  * [Get a state of a batch](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#get-a-state-of-a-batch)\n  * [Delete a batch](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#delete-a-batch)\n  * [Stop an existing batch](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-an-existing-batch)\n  * [Stop a jobs in a batch](https://radix.equinor.com/guides/jobs/job-manager-and-job-api/#stop-a-jobs-in-a-batch)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-radix-cli/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Radix CLI\n\n\nOn this page\n# Radix CLI\n## Purpose[​](https://radix.equinor.com/docs/topic-radix-cli/#purpose \"Direct link to Purpose\")\n[Radix CLI](https://github.com/equinor/radix-cli) is an application to execute commands for getting information, creating a Radix application or pipeline jobs, setting values of secrets, start and stop Radis components and other operations, described below. The Radix CLI, available for multiple platforms, it can be downloaded from the [GitHub repository](https://github.com/equinor/radix-cli/releases).\n## Use[​](https://radix.equinor.com/docs/topic-radix-cli/#use \"Direct link to Use\")\nRadix CLI can be installed and run from your local PC, as a Docker container, or in CI workflows, like GitHub actions.\nCommands can be executed towards all Radix cluster, either by setting the `--context` flag when executing a command, or by configuring the default context. `platform` is used if no context is specified.\nSet the default context:\n```\nrx set context --context playground\n```\n\nCheck the current context:\n```\nrx get context\n```\n\n### Run on a local PC[​](https://radix.equinor.com/docs/topic-radix-cli/#run-on-a-local-pc \"Direct link to Run on a local PC\")\nInstall Radix CLI locally by following the installation instructions in the [Radix CLI GitHub repository](https://github.com/equinor/radix-cli#installation).\nTo start working with Radix CLI you must first login:\n```\nrx login\n```\n\nAfter successful login, you can start executing commands.\nTo clean up the login data, logout from the Radix:\n```\nrx logout\n```\n\nRadix CLI", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1e312c5fb791df05852f1aff74baa123", "__created_at__": 1748191392.2717485, "content": "-a-local-pc \"Direct link to Run on a local PC\")\nInstall Radix CLI locally by following the installation instructions in the [Radix CLI GitHub repository](https://github.com/equinor/radix-cli#installation).\nTo start working with Radix CLI you must first login:\n```\nrx login\n```\n\nAfter successful login, you can start executing commands.\nTo clean up the login data, logout from the Radix:\n```\nrx logout\n```\n\nRadix CLI uses Radix API to execute operations. An option `verbose` can be used to get more details about requests and responses to and from the Radix CLI:\n```\nrx create pipeline-job deploy -a your-app-name -e dev --verbose\n```\n\n### Run in CI workflow[​](https://radix.equinor.com/docs/topic-radix-cli/#run-in-ci-workflow \"Direct link to Run in CI workflow\")\nCustom continuous integration tool like Jenkins or GitHub Action can use Radix CLI.\nIf you are using GitHub Workflows, you can use the [equinor/radix-github-actions](https://github.com/equinor/radix-github-actions) to easily install and authenticate `rx` in your current workflow:\n```\npermissions:# set required permissions (https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs)id-token: write # Required to authenticate with Azure Entra IDcontents: read jobs:deploy:name: deployruns-on: ubuntu-lateststeps:-name: Install RX and authenticateuses: equinor/radix-github-actions@v2with:azure_client_id:\"00000000-0000-0000-0000-000000000000\"# App Registration Application ID or Managed Identity Client ID# azure_client_secret: \"some super secret password\" # Optional: App Registration Client Secret-run: rx version # Run any rx command\n```\n\nMore details can be found in guidelines and examples:\n  * [Guideline to run \"Deploy Only\" pipeline job](https://radix.equinor.com/guides/deploy-only/)\n  * [Example of using GitHub action to create a Radix deploy pipeline job](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job)\n  * [Migration guide from radix-github-actions v1 to v2](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2)\n\n\n### Commands[​](https://radix.equinor.com/docs/topic-radix-cli/#commands \"Direct link to Commands\")\nTo find out which commands are available - run `rx` and add one of commands in the list \"Available Commands\": `create`, `delete`, `get`, etc.\nRun the `rx` with one of commands and add another command from the list \"Available Commands\". Example: `rx get`, which you can use with addition commands `application`, `context`, etc.: `rx get platform`. This way all available sub-commands and options can be found without documentation.\nScope can be specified for most commands:\n  * Radix cluster - all applications, available to the logged-in user on selected cluster (\"context\")\n  * Radix application\n  * environment of a Radix application\n  * component of a Radix application environment\n\n\n## Examples[​](https://radix.equinor.com/docs/topic-radix-cli/#examples \"Direct link to Examples\")\n### Register application[​](https://radix.equinor.com/docs/topic-radix-cli/#register-application \"Direct link to Register application\")\n  * Register (create) a new Radix application. `Deploy key` will be returned as a response - it can be put to the repository's \"Deploy keys\" to give the Radix access to an internal or a private repository. \n```\nrx create application --application your-application-name --repository https://github.com/your-repository --config-branch main --ad-groups abcdef-1234-5678-9aaa-abcdefgf --shared-secret someSecretPhrase12345 --configuration-item \"YOUR PROJECT CONFIG ITEM\"--context playground\n```\n\n\n\n### Deploy pipeline job[​](https://radix.equinor.com/docs/topic-radix-cli/#deploy-pipeline-job \"Direct link to Deploy pipeline job\")\n  * Create a new \"deploy only\" pipeline job. An optional argument `--follow`(`-f`) allows to watch the log of the job \n```\nrx create pipeline-job deploy --application your-app-name --environment dev --followrx create pipeline-job deploy -a your-app-name -e dev -f\n```\n\n\n\ntip\nAn option `job` of commands `create`, `get logs` is replaced with `pipeline-job`. It will be supported for backward compatibility.\n  * Create a new \"deploy only\" pipeline job with specified image tags. When `radixconfig.yaml` contains `image` option with dynamic [imageTagName](https://radix.equinor.com/radix-config/#imagetagname), this `imageTagName` can be altered in the Radix CLI `create pipeline-job deploy` command option `image-tag-name`. This option will override values defined in the `radixconfig.yaml` and can be defined for multiple components in the command. `image-tag-name`, provided as an option in the command `rx create pipeline-job deploy` is shown in the Radix pipeline orchestration job log. Component names that does not exist within the Radix application environment will be ignored. \n```\nrx create pipeline-job deploy --application your-app-name --environment dev --image-tag-name web-app=stable-123 --image-tag-name api=1.22.0", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-03bc07e18b87c8fbd34d3a9eabb617eb", "__created_at__": 1748191392.2717485, "content": "radixconfig.yaml` and can be defined for multiple components in the command. `image-tag-name`, provided as an option in the command `rx create pipeline-job deploy` is shown in the Radix pipeline orchestration job log. Component names that does not exist within the Radix application environment will be ignored. \n```\nrx create pipeline-job deploy --application your-app-name --environment dev --image-tag-name web-app=stable-123 --image-tag-name api=1.22.0rx create pipeline-job deploy -a your-app-name -e dev -t web-app=stable-123 -tapi=1.22.0\n```\n\n  * Specify `commitID` to provide reference to a corresponding commit in the Radix console. \n```\nrx create pipeline-job deploy --application your-app-name --environment dev --commitID 019e0d411de667dff6952852e03b4a38b0a689c3\n```\n\n  * Specify `component` to deploy when only specific component need to be deployed. Multiple components can be specified. Other components, if exist in the environment, will not be re-deployed, keeping their `commitID` and `gitTag`, environment variables, secrets, etc., their replicas will not be restarted. \n```\nrx create pipeline-job deploy --application your-app-name --environment dev --component web-apprx create pipeline-job deploy -a your-app-name -e dev --component web-app --component api-server --commitID 019e0d411de667dff6952852e03b4a38b0a689c3\n```\n\n\n\n### Build and deploy pipeline job[​](https://radix.equinor.com/docs/topic-radix-cli/#build-and-deploy-pipeline-job \"Direct link to Build and deploy pipeline job\")\n  * Create a new \"build and deploy\" pipeline job\n```\nrx create pipeline-job build-deploy -a your-app-name --branch main\n```\n\nOptional argument `--use-build-cache=true|false` can override the radixconfig option [useBuildCache](https://radix.equinor.com/radix-config/#usebuildcache)\nOptional argument `--refresh-build-cache=true` refreshes the build cache. [Read more](https://radix.equinor.com/radix-config/#refresh-build-cache) about refreshing the build cache.\n\n\n### Promote pipeline job[​](https://radix.equinor.com/docs/topic-radix-cli/#promote-pipeline-job \"Direct link to Promote pipeline job\")\n  * Promote a deployment in one environment to another, or to the same environment: \n```\nrx create pipeline-job promote --application your-app-name --from-environment dev --to-environment prod --deployment dev3-16zqd-mr9jzhnv\n```\n\n  * Promote active deployment in one environment to another: \n```\nrx create pipeline-job promote --application your-app-name --from-environment dev --to-environment prod --use-active-deployment\n```\n\n  * Promote active deployment in one environment to another: \n```\nrx create pipeline-job promote --application your-app-name --from-environment dev --to-environment prod --use-active-deployment\n```\n\n  * Promote a deployment with a particular commit-id. This option cannot be used together with an option `--deployment`. The latest deployment is promoted if there are multiple deployments with the same commit-id: \n```\nrx create pipeline-job promote --application your-app-name --from-environment dev --to-environment prod --commitID 90f869ad058b3160e925e9bceaf28f3ec76a07e4\n```\n\n\n\n### Manage pipeline jobs[​](https://radix.equinor.com/docs/topic-radix-cli/#manage-pipeline-jobs \"Direct link to Manage pipeline jobs\")\n  * Restart failed or stopped pipeline job: \n```\nrx restart pipeline-job --application your-app-name --job radix-pipeline-20231019122020-mhwif\n```\n\n  * Get list of pipeline jobs for a Radix application. `jq` helps to filter returned `json` output \n```\nrx get application -a your-app-name | jq -r'.jobs'\n```\n\n\n\n### Log[​](https://radix.equinor.com/docs/topic-radix-cli/#log \"Direct link to Log\")\n  * Get log of a Radix application component. Each log line will be prefixed with a name of the replica, which sent it \n```\nrx get logs component -a your-app-name --environment your-env-name --component your-component-name\n```\n\n  * Get log of all Radix application in an environment \n```\nrx get logs environment -a your-app-name --environment your-env-name\n```\n\n  * Get previous (terminated) container log of a Radix application component. This may help to indicate why the container was restarted. These logs are not always available as the Kubernetes node, where the pod with this container was running on, may have been removed or restarted. \n```\nrx get logs component --application your-app-name --environment your-env-name --component your-component-name --previousrx get logs component -a your-app-name -e your-env-name --component your-component-name -p\n```\n\n\n\n### Scale, stop, restart components[​](https://radix.equinor.com/docs/topic-radix-cli/#scale-stop-restart-components \"Direct link to Scale, stop, restart components\")\n  * Scale, stop, restart or reset a Radix application component \n```\nrx stop component --application your-app-name --environment your-env-name --component your-component-name # does the same as scale to 0 replicasrx scale component -a your-app-name -e your-env-name --component your-component-name --", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-13f4657fbba3df0cf996ae94fec7be76", "__created_at__": 1748191392.2717485, "content": "restart components[​](https://radix.equinor.com/docs/topic-radix-cli/#scale-stop-restart-components \"Direct link to Scale, stop, restart components\")\n  * Scale, stop, restart or reset a Radix application component \n```\nrx stop component --application your-app-name --environment your-env-name --component your-component-name # does the same as scale to 0 replicasrx scale component -a your-app-name -e your-env-name --component your-component-name --replicas5# Allowed values: 0 - 20rx scale component -a your-app-name -e your-env-name --component your-component-name --reset# reset manually scaled or stopped componentrx restart component -a your-app-name -e your-env-name --component your-component-name# Deprecated: replaced by `rx scale component -a your-app-name -e your-env-name -n your-component-name --reset`rx start -a your-app-name -e your-env-name -n your-component-name\n```\n\n  * Stop, start or restart all components in a Radix application environment \n```\nrx stop environment --application your-app-name --environment your-env-namerx start environment -a your-app-name --environment your-env-namerx restart environment -a your-app-name -e your-env-name\n```\n\n  * Stop, start or restart all components in all Radix application environments \n```\nrx stop application --application your-app-namerx start application -a your-app-namerx restart application -a your-app-name\n```\n\n\n\n### Scale replicas[​](https://radix.equinor.com/docs/topic-radix-cli/#scale-replicas \"Direct link to Scale replicas\")\n  * Scale up or down Radix application component replicas. Allowed values between \"0\" and \"20\" (value \"0\" is an equivalent of the command `rx stop`). Scaling can be useful for tuning the resource configuration to figure out what amount of replicas affect performance of an application and particular need of CPU and memory. \n```\nrx scale component --application your-app-name --environment your-env-name --component web-app --replicas2rx scale component --application your-app-name --environment your-env-name --component web-app --reset\n```\n\ninfo\nThis scale will persist after re-deployment, so remember to reset the component when you are finished. After reset, scaled component gets replicas specified in the [`radixconfig.yaml`](https://radix.equinor.com/radix-config/), \"1\" if not specified, or set by [`horizontal scaling`](https://radix.equinor.com/radix-config/#horizontalscaling)\n\n\n### Manage components[​](https://radix.equinor.com/docs/topic-radix-cli/#manage-components \"Direct link to Manage components\")\n  * Set a value of a component secret (runtime secret) \n```\nrx set environment-secret -a your-app-name -e your-env-name --component your-component-name -s CLIENT_ID -v qtrty-1234-5678-9aaa-abcdefgf\n```\n\n  * Set a value of a component environment variable (runtime environment variable) \n```\nrx set environment-variable -a your-app-name -e your-env-name --component your-component-name --variable LOG_LEVEL --value DEBUG\n```\n\n  * Set certificate and private key from files or string literals \n```\nrx set external-dns-tls --application myapp --environment prod --component web --alias myapp.example.com --certificate-from-file \"cert.crt\" --private-key-from-file \"cert.key\"\n```\n\n\n\n### Get scheduled batches and jobs[​](https://radix.equinor.com/docs/topic-radix-cli/#get-scheduled-batches-and-jobs \"Direct link to Get scheduled batches and jobs\")\nAn option `--output json` (or `-o json`) returns data in the `json` format.\n  * Get scheduled batch or job by its name for the Radix application environment job-component \n```\nrx get scheduled-job --application your-app-name --environment your-env-name --component your-job-component-name --batch your-batch-namerx get scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --job your-job-name\n```\n\n  * Get scheduled batches _or_ jobs for the Radix application environment job-component \n```\nrx get scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --batchesrx get scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --jobs\n```\n\n  * Get scheduled batches _and_ jobs for the Radix application environment job-component \n```\nrx get scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --batches--jobs\n```\n\n\n\n### Stop scheduled batches and jobs[​](https://radix.equinor.com/docs/topic-radix-cli/#stop-scheduled-batches-and-jobs \"Direct link to Stop scheduled batches and jobs\")\n  * Stop scheduled batch or job by its name for the Radix application environment job-component \n```\nrx stop scheduled-job --application your-app-name --environment your-env-name --component your-job-component-name --batch your-batch-namerx stop scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --job your-job-name\n```\n\n  * Stop scheduled batches or jobs for the Radix application environment job-component \n```\nrx stop scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --batchesrx stop scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --jobs\n```\n\n  * Stop all scheduled batches and jobs in all job-components of the Radix application environment \n```\nrx stop", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f48b3cd78a1bd62666688577153d411c", "__created_at__": 1748191392.2717485, "content": "-job-component-name --job your-job-name\n```\n\n  * Stop scheduled batches or jobs for the Radix application environment job-component \n```\nrx stop scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --batchesrx stop scheduled-job --a your-app-name --e your-env-name --component your-job-component-name --jobs\n```\n\n  * Stop all scheduled batches and jobs in all job-components of the Radix application environment \n```\nrx stop scheduled-job --a your-app-name --e your-env-name --all\n```\n\n\n\n### Get Vulnearbility Scan Reports[​](https://radix.equinor.com/docs/topic-radix-cli/#get-vulnearbility-scan-reports \"Direct link to Get Vulnearbility Scan Reports\")\nReturns a repport for an application, environment or copmonent. When a component is specified, a full log of the scan is returned.\nAll variants support the flags `--fail-on-critical` to fail if critical vulnerabilities are found, and `--output json` to return the report in `json` format.\n```\nrx get vulnerability --application your-app-namerx get vulnerability --application your-app-name \\--environment your-env-namerx get vulnerability --application your-app-name \\--environment your-env-name \\--component your-job-component-namerx get vulnerability --application your-app-name \\--environment your-env-name \\--component your-job-component-name \\--output json \\           --fail-on-critical\n```\n\n[PreviousService, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)[NextCode Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Purpose](https://radix.equinor.com/docs/topic-radix-cli/#purpose)\n  * [Use](https://radix.equinor.com/docs/topic-radix-cli/#use)\n    * [Run on a local PC](https://radix.equinor.com/docs/topic-radix-cli/#run-on-a-local-pc)\n    * [Run in CI workflow](https://radix.equinor.com/docs/topic-radix-cli/#run-in-ci-workflow)\n    * [Commands](https://radix.equinor.com/docs/topic-radix-cli/#commands)\n  * [Examples](https://radix.equinor.com/docs/topic-radix-cli/#examples)\n    * [Register application](https://radix.equinor.com/docs/topic-radix-cli/#register-application)\n    * [Deploy pipeline job](https://radix.equinor.com/docs/topic-radix-cli/#deploy-pipeline-job)\n    * [Build and deploy pipeline job](https://radix.equinor.com/docs/topic-radix-cli/#build-and-deploy-pipeline-job)\n    * [Promote pipeline job](https://radix.equinor.com/docs/topic-radix-cli/#promote-pipeline-job)\n    * [Manage pipeline jobs](https://radix.equinor.com/docs/topic-radix-cli/#manage-pipeline-jobs)\n    * [Log](https://radix.equinor.com/docs/topic-radix-cli/#log)\n    * [Scale, stop, restart components](https://radix.equinor.com/docs/topic-radix-cli/#scale-stop-restart-components)\n    * [Scale replicas](https://radix.equinor.com/docs/topic-radix-cli/#scale-replicas)\n    * [Manage components](https://radix.equinor.com/docs/topic-radix-cli/#manage-components)\n    * [Get scheduled batches and jobs](https://radix.equinor.com/docs/topic-radix-cli/#get-scheduled-batches-and-jobs)\n    * [Stop scheduled batches and jobs](https://radix.equinor.com/docs/topic-radix-cli/#stop-scheduled-batches-and-jobs)\n    * [Get Vulnearbility Scan Reports](https://radix.equinor.com/docs/topic-radix-cli/#get-vulnearbility-scan-reports)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/authentication/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/authentication/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/authentication/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/authentication/)\n    * [OAuth 2.0 Authentication](https://radix.equinor.com/guides/authentication/)\n    * [Azure Workload Identity](https://radix.equinor.com/guides/workload-identity/)\n  * [Azure Key Vault](https", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3d647a192418dd34729d151b65684021", "__created_at__": 1748191392.2717485, "content": "/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/authentication/)\n    * [OAuth 2.0 Authentication](https://radix.equinor.com/guides/authentication/)\n    * [Azure Workload Identity](https://radix.equinor.com/guides/workload-identity/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/authentication/)\n  * [Jobs](https://radix.equinor.com/guides/authentication/)\n  * [Volume Mounts](https://radix.equinor.com/guides/authentication/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/authentication/)\n  * [GitHub](https://radix.equinor.com/guides/authentication/)\n\n\n  * [](https://radix.equinor.com/)\n  * Authentication\n  * OAuth 2.0 Authentication\n\n\nOn this page\n# Authentication\nEquinor uses Azure AD for authentication of applications hosted outside the internal network. Azure AD is synced with Equinor internal AD, and contains information on Equinor users and groups.\nWhen doing authentication for applications and APIs hosted outside Equinor internal network, we use [OAuth 2.0](https://tools.ietf.org/html/rfc6749) protocol and OpenId Connect. OAuth 2.0 is an industry-standard protocol developed by IETF OAuth Working Group. Information on these protocols can be found at [oauth.net](https://oauth.net/2/), [openid.net](https://openid.net/connect/), [Microsoft documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-overview) or a more compact explanation by Equinor [Nils Hofseth Andersen](https://equinor.github.io/mss-architecture/oauth2/openid/2019/08/22/oauth2-basics-playground.html).\n**The rest of this document assumes you have basic knowledge of OAuth 2.0, OpenId Connect and JWT tokens.**\ntip\nIt is highly recommended to use common library/components maintained by others for OAuth 2.0 authentication. [MSAL](https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-overview) is the recommended library to use in Equinor. It is developed and maintained by Microsoft, and can be used for many scenarios/languages.\nIf your web app should access one or more resources, e.g. API, you have to take time to understand OAuth 2.0 and Openid Connect. It is not trivial to setup authentication for these scenarios, either using oauth-proxy or a library as MSAL.\n## Client authentication[​](https://radix.equinor.com/guides/authentication/#client-authentication \"Direct link to Client authentication\")\nThe user has access to a front-end client, but needs to acquire an authentication token to call protected APIs. How do you get this token?\n### Using the Radix OAuth2 feature[​](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature \"Direct link to Using the Radix OAuth2 feature\")\nRadix has built-in support for OAuth2 code flow authentication with OIDC.\nWhen OAuth2 is enabled for a component in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#oauth2), Radix creates an OAuth2 service and configures this service to verify if incoming requests are authorized or not, handle the authorization code flow, and manage session state for an authorized user.\n![Diagram](https://radix.equinor.com/assets/images/oauth2-be4bc45d24b0c6a5c589c195ecf636e3.png)\n#### Configuration[​](https://radix.equinor.com/guides/authentication/#configuration \"Direct link to Configuration\")\n  * Create an application registration in Azure AD. ![Application Registration](https://radix.equinor.com/assets/images/aad-app-registration-f2444c3fd0559790418eb07e31683613.png)\n  * Configure `oauth2` in radixconfig.yaml.\n```\ncomponents:-name: webauthentication:oauth2:clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6scope: openid profile email offline_accesssetXAuthRequestHeaders:truesetAuthorizationHeader:truesessionStoreType: redisredisStore:connectionUrl: redis://redis:6379ports:-name: httpport:5005publicPort: http-name: redisimage: bitnami/redis:latestsecrets:- REDIS_PASSWORDports:-name: redisport:6379\n```\n\n`clientId` is the application ID for the application registration in Azure AD. `scope` is configured to include **offline_access**. With **offline_access** included, the OAuth2 service receives a long lived refresh token", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e24c2d933562e26a2c5893d2ad34bb15", "__created_at__": 1748191392.2717485, "content": "redisStore:connectionUrl: redis://redis:6379ports:-name: httpport:5005publicPort: http-name: redisimage: bitnami/redis:latestsecrets:- REDIS_PASSWORDports:-name: redisport:6379\n```\n\n`clientId` is the application ID for the application registration in Azure AD. `scope` is configured to include **offline_access**. With **offline_access** included, the OAuth2 service receives a long lived refresh token that is used to get a new access token as the old one expires. Read more about Microsoft Identity Platform scopes [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes). `setXAuthRequestHeaders` and `setAuthorizationHeader` are set to **true** to include to the upstream request _X-Auth-_ * headers with claims from the access token, the access token itself, and the _Authorization: Bearer_ header with the ID Token. `sessionStoreType` can be set to **redis** instead of using the default of **cookie**. `connectionUrl` defines the address to the Redis server. It is recommended to use [Redis](https://radix.equinor.com/docs/topic-redis/) as session store instead of cookie because of [knows issues](https://radix.equinor.com/guides/authentication/#known-issues) with refreshing the access token and updating the session cookie's Expires attribute. The Redis server can be hosted as a Radix component, or an external Redis service like [Azure Cache for Redis](https://azure.microsoft.com/nb-no/services/cache/). In this example, Redis is hosted as a Radix component.\n  * Build the application in Radix and open the Radix Web Console to set REDIS_PASSWORD for the `redis` component, and required secrets for the OAuth service used by the `web` component.\n    * Open the `redis` component and set a password for connecting to the Redis server in the REDIS_PASSWORD secret. ![Redis Password](https://radix.equinor.com/guides/authentication/)\n    * Register the OAuth2 service's callback URLs in the Azure AD application registration. The default path is **/oauth2/callback** , and is composed of the value in `proxyPrefix` (default **/oauth2**) and suffixed with **/callback**. ![Register Redirect URL](https://radix.equinor.com/assets/images/aad-register-callback-8994cc7aa4f4c7611dca6a86938ddec7.png)\n    * Open the `web` component configure secrets required by the OAuth service. ![OAuth2 Secrets](https://radix.equinor.com/assets/images/oauth2-secrets-f89bc890b2931bd112e2a6a38e89d036.png) `Redis Password` - The password for connecting to the Redis server used for storage of session data.\n`Cookie Secret` - The secret used for encryption and decryption of session cookies. Automatically generated by Radix when OAuth2 is enabled.\n`Client Secret` - see details below. It is only applicable when `authentication.oauth2.credentials: secret` or not set, otherwise the secret is not shown.\n\n\n### Authentication with Client Secret[​](https://radix.equinor.com/guides/authentication/#authentication-with-client-secret \"Direct link to Authentication with Client Secret\")\nClient Secret is a secret registered for the Entra ID application registration (it is the \"Value\" of the secret, not the \"Secret ID\"). It is entered to the \"Client Secret\" on the Radix Web Console component page (see the section above). ![Secret value](https://radix.equinor.com/assets/images/azure-ad-app-registration-secret-83fddf2cd6e6d4df7b6ac4911e4a2376.png)\n### Authentication with Azure Workload Identity[​](https://radix.equinor.com/guides/authentication/#authentication-with-azure-workload-identity \"Direct link to Authentication with Azure Workload Identity\")\nInformation required for setting up the trust relationship between a workload and the **Azure AD app registration** is available in the component page in Radix Web Console by the link \"Azure\" next to the \"OAuth2 identity enabled for Azure\".\n![OAuth2 Federation Trust Information](https://radix.equinor.com/assets/images/oauth2-federation-trust-information-db3df8dfcfe164b90558d23a6024014e.png)\n  * Configure Workload Identity authentication for the OAuth2 proxy by setting `credentials: azureWorkloadIdentity` in the [oauth2](https://radix.equinor.com/radix-config#oauth2) section in [radixconfig.yaml](https://radix.equinor.com/radix-config/)\n  * The `authentication.oauth2.cliendId` can be different from the `identity.azure.clientId` - they are independent.\n\n\nAn option `credentials` on a component level, defined or left default `secret`, can be overridden on an `environmentConfig` level.\nExample:\n```\ncomponents:-name: webauthentication:oauth2:clientId: 5e48ca1f-a2bf-4dec-b96d-bbf8ce69f9f6credentials: azureWorkloadIdentity\n```\n\n#### Restrict access to AAD group[​](https://radix.equinor.com/guides/authentication/#restrict-access-to-aad-group \"Direct link to Restrict access to AAD group\")\nA common requirement in OAuth2 scenarios is to only allow web access for members of a particular AAD group. [This tutorial from Microsoft](https://learn.microsoft", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-40149641ea99e290ac563dc55159ecff", "__created_at__": 1748191392.2717485, "content": "bf-4dec-b96d-bbf8ce69f9f6credentials: azureWorkloadIdentity\n```\n\n#### Restrict access to AAD group[​](https://radix.equinor.com/guides/authentication/#restrict-access-to-aad-group \"Direct link to Restrict access to AAD group\")\nA common requirement in OAuth2 scenarios is to only allow web access for members of a particular AAD group. [This tutorial from Microsoft](https://learn.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal-assign-users#assign-a-user-account-to-an-enterprise-application) describes the required steps.\n#### Session store types[​](https://radix.equinor.com/guides/authentication/#session-store-types \"Direct link to Session store types\")\nThe OAuth2 service uses a session cookie to track a user's authentication state between multiple requests.\nSession data (ID token, access token and refresh token) is encrypted with the `Cookie Secret` key, and in either session data cookies or in a Redis cache.\n  * `cookie` - Session data is stored in multiple client side cookies and is tranferred on every request the the server. If OAuth tokens are not needed by the backend component, they can be stripped from the cookies by setting `cookieStore.minimal` to **true**. In such case, the OAuth service cannot refresh the access token, and a full OAuth2 authorization flow is performed when the session cookie expires. `cookie.refresh` must also be set to **0** , and `setXAuthRequestHeaders` and `setAuthorizationHeader` must be **false**.\n  * `redis` - Session data is stored in a Redis cache. The Redis server can be hosted as a component in Radix, as shown in the example, or as an external hosted service like [Azure Cache for Redis](https://azure.microsoft.com/en-us/services/cache/).\n\n\n#### Session cookie settings[​](https://radix.equinor.com/guides/authentication/#session-cookie-settings \"Direct link to Session cookie settings\")\nThe `expire` and `refresh` settings in the `oauth2.cookie` section controls the lifetime of the session cookie and the interval when the OAuth2 service should redeem a refresh token for a new access token. After successful refresh of the access token, the session cookie is updated with a new value for the `Expires` attribute.\n`refresh` must be less than `expire`, or the OAuth2 service will fail to start.\n#### Known issues[​](https://radix.equinor.com/guides/authentication/#known-issues \"Direct link to Known issues\")\nIf **cookie** is used as `sessionStore`, the OAuth2 service fails to update the session data cookies after refresh of the access token. The session state is lost, and a full OAuth2 authorization flow is initiated. To avoid this it is recommended to use **redis** as a session store type.\n### OAuth2 Proxy as a component[​](https://radix.equinor.com/guides/authentication/#oauth2-proxy-as-a-component \"Direct link to OAuth2 Proxy as a component\")\nIt's possible to use a proxy in front of the client application that takes care of the authentication flow. This can be introduced to any existing components, and is a good alternative if you have an existing web application where you do not want to implement authentication in the client itself. This is also a suitable solution if you need to make sure that only users in Equinor's Azure AD can access your app - but there is no need for finer grained authorization.\n![Diagram](https://radix.equinor.com/assets/images/radix-front-proxy-01cc64a86d3702eac3648c395b4860fd.png)\nFor an example using [oauth2_proxy](https://github.com/oauth2-proxy/oauth2-proxy/blob/master/docs/docs/configuration/overview.md) see [Radix oauth example](https://github.com/equinor/radix-public-site/tree/main/examples/radix-example-oauth-proxy). [Radix Web Console](https://console.radix.equinor.com/) uses this service, and does API calls to radix-api through a [nginx reverse proxy](https://github.com/equinor/radix-web-console/blob/master/proxy/nginx.conf)\nPro\n  * No need to introduce extra libraries and complexity in client which handles auth\n  * Security patching can be done by updating auth proxy image, no need for changes in client\n  * New versions or changes to OAuth protocol can be supported without changing client\n  * The whole front-end client is protected; no HTML/JS/CSS code is sent to the client prior to authentication\n\n\nCons\n  * During development, to get the same experience as in production, you need to run the proxy in front of client. In this case docker-compose would be your friend - see the example above for example usage\n  * All calls to other resources (as an API) that uses the auth token, need to go through the proxy\n\n\nWe have not investigated using oauth-proxy when you need to call multiple API, with different resources ids from the client.\n### In client - Single page application (SPA)[​](https://radix.equinor.com/guides/authentication/#in-client---single-page-application-spa \"Direct link to In client - Single page application \\(SPA\\)\")\nA single-page application (SPA) is a web application or web site that interacts with the user by dynamically rewriting the current page rather than loading entire new pages from a server. Web browser JavaScript frameworks, such as React, AngularJS, Vue.js, Ember.js, and ExtJS have adopted SPA principles. Most of these applications live entirely in the browser, which is an unsafe environment.", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-7d06a7182f24b8b638bfc1985e77ae32", "__created_at__": 1748191392.2717485, "content": "-client---single-page-application-spa \"Direct link to In client - Single page application \\(SPA\\)\")\nA single-page application (SPA) is a web application or web site that interacts with the user by dynamically rewriting the current page rather than loading entire new pages from a server. Web browser JavaScript frameworks, such as React, AngularJS, Vue.js, Ember.js, and ExtJS have adopted SPA principles. Most of these applications live entirely in the browser, which is an unsafe environment.\nMicrosoft has a set of examples in their [documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/authentication-flows-app-scenarios#application-scenarios) or on [github](https://github.com/Azure-Samples?utf8=%E2%9C%93&q=active-directory&type=&language=) for how to authenticate a client from different languages using [MSAL](https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-overview). Equinor also have a [template](https://github.com/equinor/videx-react-template) for developing SPA ReactJS applications. This is currently used and maintained by an Omnia team.\nPro\n  * Can perform API calls to other resources directly from client, without having to go through a proxy\n  * Same experience under development and when running in production\n  * MSAL is the recommended library to use for authentication by Equinor\n  * Fine-grained control on the front-end of rendering for unauthenticated users (or with different authorisation levels)\n\n\nCons\n  * MSAL uses an authentication flow called [implicit grant](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-implicit-grant-flow) for SPA. This is [less secure](https://tools.ietf.org/html/draft-ietf-oauth-security-topics-13#section-3.1.2) then [authorization code grant](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow) used by the oauth-proxy and for web applications rendered on the server side. However both [Google](https://developers.google.com/identity/protocols/OAuth2UserAgent) and [Microsoft](https://docs.microsoft.com/en-us/azure/active-directory/develop/v1-oauth2-implicit-grant-flow) uses it for their examples on how to do OAuth 2.0 authorization for SPAs\n\n\nA good in-depth article on OAuth2 for SPA can be found at [link](https://auth0.com/blog/oauth2-implicit-grant-and-spa/). The article discuss implicit grant and authorization code grant for SPA. It also goes through two common topologies, and how to [secure them](https://auth0.com/blog/oauth2-implicit-grant-and-spa/#Different-SPA-Topologies-and-Alternative-Approaches).\n### In client - Web app (not SPA)[​](https://radix.equinor.com/guides/authentication/#in-client---web-app-not-spa \"Direct link to In client - Web app \\(not SPA\\)\")\nFor web application where html is rendered on the server side, served to the browser and all API calls are done through the web app server, see [Microsoft documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/scenario-web-app-call-api-overview) on how to use MSAL for authentication. This document how to get authentication going with Python, Java and .Net core.\n## API authentication[​](https://radix.equinor.com/guides/authentication/#api-authentication \"Direct link to API authentication\")\nHow should you protect a web API, so that only authenticated and authorized users can access the API?\nIn general it's recommended that any API should be responsible for access control of its own endpoints. This indicates that all requests to an API should be authenticated and authorized from inside the API, and not by a proxy in front of the API.\nAgain Microsoft has a set of examples on [github](https://github.com/Azure-Samples?utf8=%E2%9C%93&q=active-directory+api&type=&language=) on how this can be done for different languages. Their [documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/authentication-flows-app-scenarios#application-scenarios) contains an example using dotnet core.\nThere are of course other examples out there for other languages (not done by Microsoft). Ask on #[development_community](https://equinor.slack.com/messages/C3HLP8ZTQ) slack channel for input on frameworks to use for your need.\n[PreviousEnvironment Variables](https://radix.equinor.com/guides/environment-variables/)[NextAzure Workload Identity](https://radix.equinor.com/guides/workload-identity/)\n  * [Client authentication](https://radix.equinor.com/guides/authentication/#client-authentication)\n    * [Using the Radix OAuth2 feature](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature)\n    * [Authentication with Client Secret](https://radix.equinor.com/guides/authentication/#authentication-with-client-secret)\n    * [Authentication with Azure Workload Identity](https://radix.equinor.com/guides/authentication/#authentication-with-azure-workload-identity)\n    * [OAuth2 Proxy as a component](https://radix.equinor.com/guides/authentication/#oauth2-proxy-as-a-component)\n    * [In client - Single page application (SPA)](https://radix.equinor.com/guides/authentication/#in-client---single-page", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e1bcc4ee175f2dd5fe1285f7aa1d7d4a", "__created_at__": 1748191392.2717485, "content": "-client-secret)\n    * [Authentication with Azure Workload Identity](https://radix.equinor.com/guides/authentication/#authentication-with-azure-workload-identity)\n    * [OAuth2 Proxy as a component](https://radix.equinor.com/guides/authentication/#oauth2-proxy-as-a-component)\n    * [In client - Single page application (SPA)](https://radix.equinor.com/guides/authentication/#in-client---single-page-application-spa)\n    * [In client - Web app (not SPA)](https://radix.equinor.com/guides/authentication/#in-client---web-app-not-spa)\n  * [API authentication](https://radix.equinor.com/guides/authentication/#api-authentication)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/docs/topic-vulnerabilities/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Docs](https://radix.equinor.com/docs/)\n  * [What's new](https://radix.equinor.com/docs/topic-releases/)\n  * [Docker & containers](https://radix.equinor.com/docs/topic-docker/)\n  * [Runtime environment](https://radix.equinor.com/docs/topic-runtime-env/)\n  * [Logs](https://radix.equinor.com/docs/topic-logs/)\n  * [Security](https://radix.equinor.com/docs/topic-security/)\n  * [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/)\n  * [Monitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\n  * [Domain names](https://radix.equinor.com/docs/topic-domain-names/)\n  * [Private Link](https://radix.equinor.com/docs/topic-private-link/)\n  * [Radix cost](https://radix.equinor.com/docs/topic-cost/)\n  * [Rolling updates](https://radix.equinor.com/docs/topic-rollingupdate/)\n  * [Service, support, uptime and availability](https://radix.equinor.com/docs/topic-uptime/)\n  * [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/)\n  * [Code Editor Integrations](https://radix.equinor.com/docs/topic-code-editor-integration/)\n  * [Integrate Dynatrace in a Radix app](https://radix.equinor.com/docs/topic-dynatrace-int/)\n  * [Redis cache](https://radix.equinor.com/docs/topic-redis/)\n\n\n  * [](https://radix.equinor.com/)\n  * Vulnerability Scanning\n\n\n# Vulnerability Scanning\nThe Radix platform will scan applications running in our Platform for vulnerabilities. It is also expected that the developer team are responsible for keeping their code up to date and without critical vulnerabilities.\nAll components and jobs are scanned immediately after a successful deployment. The scan is not limited to images built by Radix, and will also scan components and jobs using images from public registries.\nRadix will do a rescan of all images on a daily schedule in order to detect and report new vulnerabilities.\nAggregated scan results are displayed per component/job in the environment page.\n![Scan Environment Overview](https://radix.equinor.com/assets/images/scan-environment-7165f61b1efca3389fecebfef00ec14c.png)\nClick on a component or job to view detailed information about vulnerabilities and when the scan was performed.\n![Scan Component Details](https://radix.equinor.com/assets/images/scan-component-details-5ee7251017535fb7755fc12d5a8d8ea6.png)\n[PreviousSecurity](https://radix.equinor.com/docs/topic-security/)[NextMonitoring concepts](https://radix.equinor.com/docs/topic-monitoring/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/external-alias/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/external-alias/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/external-alias/)\n  * [Build Secrets](https://", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-6e279cc00d62cebb7c5eaf8475d6ebea", "__created_at__": 1748191392.2717485, "content": "or.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/external-alias/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/external-alias/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/external-alias/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/external-alias/)\n    * [DNS Alias and certificate](https://radix.equinor.com/guides/external-alias/)\n    * [Manually add Certificate](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Jobs](https://radix.equinor.com/guides/external-alias/)\n  * [Volume Mounts](https://radix.equinor.com/guides/external-alias/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/external-alias/)\n  * [GitHub](https://radix.equinor.com/guides/external-alias/)\n\n\n  * [](https://radix.equinor.com/)\n  * External DNS Alias\n  * DNS Alias and certificate\n\n\nOn this page\n# Configure External DNS Alias and automatically get Equinor certificate\nAn application can be configured to use external DNS aliases, in addition to the automatically generated [domain names](https://radix.equinor.com/docs/topic-domain-names), provided you register the DNS record and optionally bring the corresponding TLS certificate into Radix. Traffic routing is configured in [`dnsExternalAlias`](https://radix.equinor.com/radix-config/#dnsexternalalias) in `radixconfig.yaml`.\nAn application can be configured to use external DNS aliases, in addition to the automatically generated [domain names](https://radix.equinor.com/docs/topic-domain-names), provided you register the DNS record and bring the corresponding TLS certificate into Radix. Traffic routing is configured in [`dnsExternalAlias`](https://radix.equinor.com/radix-config/#dnsexternalalias) in `radixconfig.yaml`.\nThe external DNS record must point to the [public name](https://radix.equinor.com/docs/topic-domain-names/#public-name) of a component, to the [app default alias](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias) or to the [app alias](https://radix.equinor.com/docs/topic-domain-names/#app-alias).\n`useCertificateAutomation` in [`dnsExternalAlias`](https://radix.equinor.com/radix-config/#dnsexternalalias) controls if the TLS certificate is automatically managed by Radix, or manually by you.\n## Acquire a DNS record in the equinor.com zone[​](https://radix.equinor.com/guides/external-alias/#acquire-a-dns-record-in-the-equinorcom-zone \"Direct link to Acquire a DNS record in the equinor.com zone\")\nThe process for setting up the DNS record depends on the service used to register and manage the DNS zone. This guide assumes registration of a DNS record in the `equinor.com` zone, but you should be able to adapt the instructions to a third-party provider.\n  1. Open the [Services@Equinor](https://equinor.service-now.com/selfservice) portal and find the service \"Domain name system (DNS)\"\n  2. Select option `New` in `Select service`\n  3. In `Where should the DNS record be added, changed or deleted?`, select if you only need `Internal DNS Service` (accessible only from Equinor internal network) or `Internal and external DNS service` (accessible from both Equinor internal network and Internet).\n  4. Enter the host name in `Host name` (exclude `.equinor.com` suffix).\n  5. Select `CNAME` in the `Type` drop down.\n  6. In the `Data (IP or FQDN)` field, enter the [public name](https://radix.equinor.com/docs/topic-domain-names/#public-name), [app default alias](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias) or [app alias](https://radix.equinor.com/docs/topic-domain-names/#app-alias) for which the new DNS record should point to.\n\n\nExample\n```\nSelect service:NewWhere should the DNS record be added, changed or deleted?:Internal and external DNS serviceHost name:myappType:CNAMEData (IP or F", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-a0ec65fa3517242afd0ba313646023a4", "__created_at__": 1748191392.2717485, "content": "ames/#public-name), [app default alias](https://radix.equinor.com/docs/topic-domain-names/#app-default-alias) or [app alias](https://radix.equinor.com/docs/topic-domain-names/#app-alias) for which the new DNS record should point to.\n\n\nExample\n```\nSelect service:NewWhere should the DNS record be added, changed or deleted?:Internal and external DNS serviceHost name:myappType:CNAMEData (IP or FQDN):frontend-myapp-prod.radix.equinor.com\n```\n\n## Configure certificate automation service[​](https://radix.equinor.com/guides/external-alias/#configure-certificate-automation-service \"Direct link to Configure certificate automation service\")\n### Configure `dnsExternalAlias` in radixonfig.yaml[​](https://radix.equinor.com/guides/external-alias/#configure-dnsexternalalias-in-radixonfigyaml \"Direct link to configure-dnsexternalalias-in-radixonfigyaml\")\nAdd the alias to `dnsExternalAlias` in [radixconfig.yaml](https://radix.equinor.com/radix-config/#dnsexternalalias). You can add multiple entries as long as the `alias` value is unique. The referenced environment must be re-deployed in order for the changes to take effect.\nIf `useCertificateAutomation` is `true`, the external DNS record must be created in order for Radix to start the automatic certificate issuing process. `digicert.com` must also be authorized (from [CAA](https://en.wikipedia.org/wiki/DNS_Certification_Authority_Authorization) records) to issue certificates to the `alias`. You can use an online tool like [Entrust CAA Lookup](https://www.entrust.com/resources/tools/caa-lookup) to check this.\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: myappspec:...dnsExternalAlias:-alias: myapp.equinor.comcomponent: frontendenvironment: produseCertificateAutomation: false|true\n```\n\nYou can also add and maintain the [certificates manually](https://radix.equinor.com/guides/external-alias-certificate/)\n[PreviousAzure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)[NextManually add Certificate](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Acquire a DNS record in the equinor.com zone](https://radix.equinor.com/guides/external-alias/#acquire-a-dns-record-in-the-equinorcom-zone)\n  * [Configure certificate automation service](https://radix.equinor.com/guides/external-alias/#configure-certificate-automation-service)\n    * [Configure `dnsExternalAlias` in radixonfig.yaml](https://radix.equinor.com/guides/external-alias/#configure-dnsexternalalias-in-radixonfigyaml)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-0bb6548c5ab95a360e2a9c593caa2b8e", "__created_at__": 1748191392.2717485, "content": ")\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * Overview\n\n\nOn this page\n# Jobs\nA job is an on-demand and short-lived container/process that performs a set of tasks, e.g. a ML training job or an ETL job, and exits when it is done. The duration of a job can span from seconds to hours, depending on what tasks it performs, but it is expected to exit when it has completed the work. Multiple jobs can be created and running simultaneously.\nCPU, GPU and memory resources requested by a job are reserved when it starts, and released when it exits. This will help reduce the total cost for an application since cost is only calculated for running containers. A job that requests 10GB of memory and 2 CPUs, started once per day and runs for one hour, will only accumulate cost for the hour it is running. A component that requests the same resources will accumulate cost for all 24 hours of a day.\nDocker images built from the definition in the components section in radixconfig.yaml are started automatically when a new build-deploy, promote or deploy pipeline completes. Jobs on the other hand, must be managed through the [job-scheduler](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) web API service. Radix creates a job-scheduler for each job and environment defined in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/). The job-scheduler can start new containers from the Docker image build by the pipeline, delete and list existing jobs.\nThe job-scheduler does not require any authentication since it is not exposed to the Internet and is only accessible by components in the same application and environment.\nA job can be run as a single job or as a batch of jobs.\nA max of 10 single completed jobs remains in the history of a job component. When a single job started - the oldest of 10 existing single jobs is deleted. The same applies for batched jobs - its history is independent of single jobs history. A max of 10 completed batched jobs remain in the batch history, with all their jobs.\n  * [Configure jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n  * [Job manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n  * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n  * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n  * [Manage jobs in Radix web-console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n  * [OpenAPI/Swagger](https://radix.equinor.com/guides/jobs/openapi-swagger)\n\n\n### Component diagram example[​](https://radix.equinor.com/guides/jobs/#component-diagram-example \"Direct link to Component diagram example\")\n![Diagram of jobs and job-scheduler](https://radix.equinor.com/assets/images/job-scheduler-diagram-9ecad75674cecee6101fe028fc8b2599.png)\n[PreviousManually add Certificate](https://radix.equinor.com/guides/external-alias-certificate/)[NextConfiguring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n  * [Component diagram example](https://radix.equinor.com/guides/jobs/#component-diagram-example)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/notifications/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/notifications/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/notifications/)\n  * [", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-01d664f7dcd891f20119bed108c40f5e", "__created_at__": 1748191392.2717485, "content": "](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/notifications/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/notifications/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/notifications/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/notifications/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/notifications/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/notifications/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/notifications/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/notifications/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * Notifications\n\n\nOn this page\n# Notifications\n## Notifications[​](https://radix.equinor.com/guides/jobs/notifications/#notifications \"Direct link to Notifications\")\nWhen job and batch status needs to be monitored, their statuses can be [pulled](https://radix.equinor.com/guides/jobs/job-manager-and-job-api#get-a-state-of-a-batch). Another option is to use job component [notifications](https://radix.equinor.com/radix-config/#notifications), posted to one of Radix application components.\nThe URL to the Radix application component or job component endpoint can be specified in the `webhook` option in the `notifications` section in the [radixconfig.yaml](https://radix.equinor.com/radix-config/). This is an endpoint where a Radix batch events will be posted when any of the running jobs or batches for this job component changes states. Notification about changes are sent by a `POST` method with an `application/json` `ContentType` with a [Radix batch event format](https://radix.equinor.com/guides/jobs/notifications/#radix-batch-event), which extends the [Radix batch status](https://radix.equinor.com/guides/jobs/job-manager-and-job-api#get-a-state-of-a-batch) format with fields\n  * `name` - internal name of the batch or a single job. In both cases the name begins with `batch-`\n  * `batchId` - optional string value to identify a batch.\n  * `created`, `started`, `ended` - timestamp of corresponding batch live cycle event\n  * `status` - status of a batch or a single job\n  * `updated` - timestamp when a status was updated\n  * `event`: \n    * `Create` - this event is sent when a new Radix batch or job is created.\n    * `Update` - this event is sent when an existing Radix batch or one of its jobs, including single job, has changed state.\n    * `Delete` - this event is sent when an existing Radix batch or job is deleted.\n  * `batchType`: \n    * `job` - single job\n    * `batch` - batch of jobs\n  * `jobStatuses` - list of statuses of only changed jobs. This list can be empty when the common properties are changed (e.g. only `started`, `status`).\n\n\nFields in the `jobStatus` list items:\n  * `jobId` - optional name, specified for the job within `JobDescription`\n  * `batchName` - name of a batch for job in a batch. It is not provided for single jobs.\n  * `podStatuses` - list of status and attributes of one or several job pods (replicas). If the job's replica failed and job-component has [backoffLimit](https://radix.equinor.com/rad", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f899bef82d6ba4c78385cb9bbc10e515", "__created_at__": 1748191392.2717485, "content": "in the `jobStatus` list items:\n  * `jobId` - optional name, specified for the job within `JobDescription`\n  * `batchName` - name of a batch for job in a batch. It is not provided for single jobs.\n  * `podStatuses` - list of status and attributes of one or several job pods (replicas). If the job's replica failed and job-component has [backoffLimit](https://radix.equinor.com/radix-config/#backofflimit) greater then `0`, `podStatus` contains `exitCode` and `reason` for failed pods. `podIndex` gives an order of pod statuses (starting from `0`) \n    * In the `podStatuses` replica attribute `image` should be the same for all pods, but `imageId` _can_ be different, if this image was updated within a period of different pods starts.\n\n\n`notifications` and `webhook` can be specified on a job component configuration level and/or on `environmentConfig` level. Property in the `environmentConfig` will override those on the component level, if present.\ntip\n  * Only a Radix application component or job component name and their ports can be used in the webhook URL\n  * Only private ports of the specified component can be used, public ports cannot be used for this purpose.\n\n\n```\ncomponents:-name: frontendsrc: frontendports:-name: httpport:8001-name: job-monitoringport:8002publicPort: httpjobs:-name: computeschedulerPort:8080notifications:webhook: http://frontend:8002\n```\n\n## Radix batch event[​](https://radix.equinor.com/guides/jobs/notifications/#radix-batch-event \"Direct link to Radix batch event\")\n```\n{\"name\":\"batch-compute-20220302155333-hrwl53mw\",\"batchId\":\"random-batch-id-123\",\"created\":\"2022-03-02T15:53:33+01:00\",\"started\":\"2022-03-02T15:53:33+01:00\",\"ended\":\"2022-03-02T15:54:00+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-03-02T15:54:00+01:00\",\"jobStatuses\":[{\"jobId\":\"job1\",\"batchName\":\"batch-compute-20220302155333-hrwl53mw\",\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7\",\"created\":\"2022-03-02T15:53:36+01:00\",\"started\":\"2022-03-02T15:53:36+01:00\",\"ended\":\"2022-03-02T15:53:56+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-03-02T15:53:56+01:00\",\"podStatuses\":[{\"name\":\"batch-compute-20220302155333-hrwl53mw-fjhcqwj7-5sfnl\",\"created\":\"2022-03-02T15:53:36Z\",\"startTime\":\"2022-03-02T15:53:36Z\",\"endTime\":\"2022-03-02T15:53:56Z\",\"containerStarted\":\"2022-03-02T15:53:36Z\",\"replicaStatus\":{\"status\":\"Succeeded\"},\"image\":\"radixprod.azurecr.io/radix-app-dev-compute:6k8vv\",\"imageId\":\"radixprod.azurecr.io/radix-app-dev-compute@sha256:1f9ce890db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":0,\"reason\":\"Completed\"}]},{\"jobId\":\"job2\",\"batchName\":\"batch-compute-20220302155333-hrwl53mw\",\"name\":\"batch-compute-20220302155333-hrwl53mw-qjzykhrd\",\"created\":\"2022-03-02T15:53:39+01:00\",\"started\":\"2022-03-02T15:53:39+01:00\",\"ended\":\"2022-03-02T15:53:56+01:00\",\"status\":\"Succeeded\",\"updated\":\"2022-03-02T15:53:56+01:00\",\"podStatuses\":[{\"name\":\"batch-compute-20220302155333-hrwl53mw-qjzykhrd-5sfnl\",\"created\":\"2022-03-02T15:53:39Z\",\"startTime\":\"2022-03-02T15:53:40Z\",\"endTime\":\"2022-03-02T15:53:56Z\",\"containerStarted\":\"2022-03-02T15:53:40Z\",\"replicaStatus\":{\"status\":\"Succeeded\"},\"image\":\"radixprod.azurecr.io/radix-app-dev-compute:6k8vv\",\"imageId\":\"radixprod.azurecr.io/radix-app-dev-compute@sha256:1f9ce890db8eb89ae0369995f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":0,\"reason\":\"Completed\"}]}]}\n```\n\n[PreviousJob Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)[NextEnvironment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n  * [Notifications](https://radix.equinor.com/guides/jobs", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-295e6dc1706afc8b89337aab0e289c3d", "__created_at__": 1748191392.2717485, "content": "f76676a58af2a82129fc0babe080a5daca86a44e\",\"exitCode\":0,\"reason\":\"Completed\"}]}]}\n```\n\n[PreviousJob Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)[NextEnvironment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n  * [Notifications](https://radix.equinor.com/guides/jobs/notifications/#notifications)\n  * [Radix batch event](https://radix.equinor.com/guides/jobs/notifications/#radix-batch-event)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/jobs-in-web-console/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/jobs-in-web-console/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * Managing Jobs in Web Console\n\n\nOn this page\n# Managing Jobs in Web Console\n## Managing Jobs in Web Console[​](https://radix.equinor.com/guides/jobs/jobs-in-web-console/#managing-jobs-in-web-console \"Direct link to Managing Jobs in Web Console\")\nBatches and jobs can be found in the Web console under the \"Batches\" and \"Jobs\" tabs. Job manager pod status and its log can be found in the \"Job manager\" section ![Batch job status](https://radix.equinor.com/assets/images/batch-job-manager-status-786bbd15fea5854bfa83455828806ced.png)\n  * It shows batch and job states. When all jobs in a batch are completed, the batch is completed. If any job fails, the batch is failed. ![Batch and job statuses](https://radix.equinor.com/assets/images/batch-and-job-statuses-69fcf5fc950cd54f7ce51311b46dd380.png)\n  * Ellipsis icon on the right side of the batch or job row opens a menu with the delete option ![Menu](https://radix.equinor.com/assets/images/menu-ee8fa977b5dcf1ef25be62fcc8a8bfbe.png)\n    * Show job payload\n![Show payload](https://radix.equinor.com/assets/images/show-payload-f12a1f92af9254e9cd9d24ef2a3228d0.png)\n    * Deleting a", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5f270ea7f7374901e6eb481701081c1c", "__created_at__": 1748191392.2717485, "content": "the batch or job row opens a menu with the delete option ![Menu](https://radix.equinor.com/assets/images/menu-ee8fa977b5dcf1ef25be62fcc8a8bfbe.png)\n    * Show job payload\n![Show payload](https://radix.equinor.com/assets/images/show-payload-f12a1f92af9254e9cd9d24ef2a3228d0.png)\n    * Deleting a batch deletes all jobs in the batch\n    * Deleting a job from a batch is not supported\n    * Running job or batch can be stopped - all Kubernetes jobs for these jobs or jobs of a batch will be deleted\n    * Job or batch can be restarted from any status (running, completed, failed or stopped), with the same options and payload\n      * when a job or a batch is running with an active deployment, all Kubernetes jobs for these jobs or jobs of a batch will be deleted and created again ![Restart job](https://radix.equinor.com/assets/images/restart-job-with-current-active-deployment-418b778e8c249c84617155986c92b63d.png)\n      * when a job or a batch is running with a non-active deployment - it is an option to run a copy the job or the batch with a new active deployment. ![Restart job with new active deployment](https://radix.equinor.com/assets/images/restart-job-with-active-deployment-e2ad57fe27b7c9035e360295510b74aa.png)\n      * jobs in a batch can be restarted or copied individually. When a batch job restarted with another active deployment, a new batch is created with a copy of this only job\n\n\n[PreviousEnvironment variables](https://radix.equinor.com/guides/jobs/environment-variables)[NextOpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console/#managing-jobs-in-web-console)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/resource-request/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/resource-request/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/resource-request/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/resource-request/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/resource-request/)\n  * [Jobs](https://radix.equinor.com/guides/resource-request/)\n  * [Volume Mounts](https://radix.equinor.com/guides/resource-request/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/resource-request/)\n  * [GitHub](https://radix.equinor.com/guides/resource-request/)\n\n\n  * [](https://radix.equinor.com/)\n  * Resource request and limit\n\n\nOn this page\n# Configure resource requests and limits\n`resources` is used to ensure that each container is allocated enough resources to run as it should. `limits` describes the maximum amount of compute resources allowed. `requests` describes the minimum amount of compute resources requires.\nRadix is built on top of managed Kubernetes in Azure (AKS). Kubernetes is a container orchestration platform - orchestrating containers over a set of nodes (VMs). E.g. cluster consisting of 3 nodes, hosting a set of containers:\n![cluster](https://radix.equinor.com/assets/images/cluster-b65678a236f036322b9f0d33ddb07046.png)\n## Why should resources request and limit be set[​](https://radix.equinor.com/guides/resource-request/#why-should-resources-request-and-limit-be-set \"Direct link to Why should resources request and limit be set\")\nSettings resources request and limit is important because of several reasons:\n  *", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-90be95856b812d1610d13f1ae9cb58a7", "__created_at__": 1748191392.2717485, "content": "of containers:\n![cluster](https://radix.equinor.com/assets/images/cluster-b65678a236f036322b9f0d33ddb07046.png)\n## Why should resources request and limit be set[​](https://radix.equinor.com/guides/resource-request/#why-should-resources-request-and-limit-be-set \"Direct link to Why should resources request and limit be set\")\nSettings resources request and limit is important because of several reasons:\n  * Kubernetes scheduler guarantees that each container is allocated `resources.requests.cpu` and `resources.requests.memory`.\n  * If a node starts hitting CPU limits, it will prioritize and distribute CPU to containers based on `resource.requests.cpu`.\n  * Radix uses `resources.requests` to distribute infrastructure cost between teams.\n  * Radix uses `resources.requests` to decide the size of a cluster.\n  * Horizontal pod autoscaling uses `resources.requests.cpu` as a target for when to scale up the number of containers.\n  * `resources.limits.memory` will ensure that the container is stopped if there is any memory leakage.\n\n\nIf `resources.requests` and `resources.limits` are not provided, Radix will give a container default [values](https://github.com/equinor/radix-operator/blob/master/charts/radix-operator/values.yaml#L24). This will be used for scheduling and cost. In many cases the default provided `resources` would be insufficient for container, which could lead to the container being CPU throttled or in worst case killed by the [OOMKiller](https://docs.memset.com/other/linux-s-oom-process-killer).\n## How to find resource requests and limits[​](https://radix.equinor.com/guides/resource-request/#how-to-find-resource-requests-and-limits \"Direct link to How to find resource requests and limits\")\nMonitoring can be used to find how much resources an application use. Radix uses [prometheus](https://prometheus.io/) to gather metrics and [grafana](https://grafana.com/) for visualization. When viewing an application in Radix web console, there is a link to a default dashboard in Radix grafana instance that gives a good starting point for monitoring an app.\n![Grafana](https://radix.equinor.com/assets/images/link-to-grafana-130bc379a20ebc7e5a681d8449b9858f.png)\nThe default dashboard contains a number of graphs, monitoring different part of an application. For setting `resources` \"Container CPU usage\" and \"Container memory usage\" can be used.\nCPU and memory are typically impacted by load on an application. If the application is in production, there will already be data that can be used for deciding `resources`. If not, next step involves either running an automated or manual simulation of production environment. It does not need to be very advanced, but it should be possible to see how it behaves under different load.\nMonitoring memory and CPU over time is important, as it can change based on a numerous factors (e.g. new runtime environment, changes to code, increased load, etc). The `resources.requests` adjust set can therefore change during its lifecycle.\nSelect a single environment and time interval, that represent normal usage for that application. Further examples are based on `radix-api`, where production environment and a period of 7 working days has been selected.\n### CPU[​](https://radix.equinor.com/guides/resource-request/#cpu \"Direct link to CPU\")\nCPU is a compressible resource, meaning that if a container hits CPU limit, Kubernetes starts throttling the container. For most application throttling means it will be slower, but it will still be able to serve requests.\nIf an underlying node hits CPU limit, it will start throttling CPU resources for containers running on that node. Distribution/priority of CPU for containers running on the node will be based on `resources.requests.cpu` (how much CPU each container will be given). `resources.requests.cpu` is still guaranteed for each container, its only the CPU utilization above `resources.requests.cpu` thats throttled\nBy clicking a graph, \"Container CPU usage\", a more detailed view appears.\n![container-cpu](https://radix.equinor.com/assets/images/container-cpu-5143d6e7e58f97ae3740a6497881ded0.png)\nThe graph shows how many containers are running in production and how the CPU usage has been the last 7 days for each container. Tests are run continuously towards `radix-api`, so there will always be a base CPU usage. This does not need to be the case with other API.\nFor `radix-api` normal load gives between 100-200ms of CPU time, peaking at around 400ms. Given us the following setup:\n```\nresources:requests:cpu:\"200m\"limits:cpu:\"500m\"\n```\n\nThis will allocate `200ms` CPU to each container.\nBecause of a limit ([1](https://www.youtube.com/watch?v=eBChCFD9hfs), [2](https://engineering.indeedblog.com/blog/2019/12/unthrottled-fixing-cpu-limits-in-the-cloud/)) in kubernetes and cgroups on how throttling is done, it is recommended to keep `resources.limits.cpu` empty or set it to a multitude of `1000ms`. The configuration for `radix-api` could then be:\n```\nresources:requests:cpu:\"200m\"limits:cpu:\"2000m\"\n```\n\n### Memory[​](https://radix.equinor.com/guides/resource-request/#memory \"Direct link to Memory\")\nGo back to the `Default dashboard` and select graph `Container memory usage`.\n![", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-fe288fd0560d4ffc302723f1820064be", "__created_at__": 1748191392.2717485, "content": "it is recommended to keep `resources.limits.cpu` empty or set it to a multitude of `1000ms`. The configuration for `radix-api` could then be:\n```\nresources:requests:cpu:\"200m\"limits:cpu:\"2000m\"\n```\n\n### Memory[​](https://radix.equinor.com/guides/resource-request/#memory \"Direct link to Memory\")\nGo back to the `Default dashboard` and select graph `Container memory usage`.\n![container-memory](https://radix.equinor.com/assets/images/container-memory-d48ae95f5952fb0d4cb1f509f0a728a2.png)\nMemory is a non-compressible resource, meaning that if a container requires more memory to run than what is available it will be killed. To guarantee that a container has enough memory available, `resources.requests.memory` is recommended to be set to the same value as `resources.limits.memory`.\nThe value should be set a little higher than the highest memory consumption observed over period of time with different loads, not accounting for memory leaks. Since the highest memory consumption observed for `radix-api` was around 300M, we set the resource requirements a little higher.\n```\nresources:requests:memory: 400M\n```\n\n`resources.limits.memory` is set automatically to the same value as in the `resources.requests.memory`. This ensures that `400M` is always allocated to each container in the `radix-api`.\n```\nresources:requests:memory: 400Mlimits:memory: 400M\n```\n\n### Default resources[​](https://radix.equinor.com/guides/resource-request/#default-resources \"Direct link to Default resources\")\nWhen `resources` values are not explicitly defined, they are set to following values\n```\nresources:limits:memory: 500Mrequests:cpu: 100mmemory: 500M\n```\n\nThese default values can be changed on the cluster in the future if needed.\nMore information can be found on Google - e.g. [\"Kubernetes best practices: Resource requests and limits\"](https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-resource-requests-and-limits)\n## Autoscaling[​](https://radix.equinor.com/guides/resource-request/#autoscaling \"Direct link to Autoscaling\")\nFor modern application development in Kubernetes and in Radix it is preferred to create applications that [scales horizontally rather than vertically](https://www.missioncloud.com/blog/horizontal-vs-vertical-scaling-which-is-right-for-your-app). In horizontal scaling, when there is need for more compute an extra container (pod) is added, but memory and CPU stays fixed.\n![horizontal-pod-autoscaling](https://radix.equinor.com/assets/images/horizontal-pod-autoscaling-d6f1c28542351c8d9fbeac88f4ad561a.png)\nFor Radix this can easily be configured with [`horizontalScaling`](https://radix.equinor.com/radix-config/#horizontalscaling) in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/). It can scale components up and down based on CPU and memory utilization of the containers. More information can be found at [kubernetes docs](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)\n[PreviousComponent scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)[NextEgress](https://radix.equinor.com/guides/egress-config/)\n  * [Why should resources request and limit be set](https://radix.equinor.com/guides/resource-request/#why-should-resources-request-and-limit-be-set)\n  * [How to find resource requests and limits](https://radix.equinor.com/guides/resource-request/#how-to-find-resource-requests-and-limits)\n    * [CPU](https://radix.equinor.com/guides/resource-request/#cpu)\n    * [Memory](https://radix.equinor.com/guides/resource-request/#memory)\n    * [Default resources](https://radix.equinor.com/guides/resource-request/#default-resources)\n  * [Autoscaling](https://radix.equinor.com/guides/resource-request/#autoscaling)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/external-alias-certificate/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guid", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2481c29af26c930615332e5ce62a9d5c", "__created_at__": 1748191392.2717485, "content": "Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/external-alias-certificate/)\n    * [DNS Alias and certificate](https://radix.equinor.com/guides/external-alias/)\n    * [Manually add Certificate](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Jobs](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Volume Mounts](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/external-alias-certificate/)\n  * [GitHub](https://radix.equinor.com/guides/external-alias-certificate/)\n\n\n  * [](https://radix.equinor.com/)\n  * External DNS Alias\n  * Manually add Certificate\n\n\nOn this page\n# Adding manually TLS certificates for your DNS Alias\nIf you choose to not use the Radix certificate service, which provides an automated procedure for aquiring and renewing your Equinor DigiCert certificate, you can also add the certificate manually.\n## Acquire an Equinor TLS certificate[​](https://radix.equinor.com/guides/external-alias-certificate/#acquire-an-equinor-tls-certificate \"Direct link to Acquire an Equinor TLS certificate\")\nThis step is only required when `useCertificateAutomation` in `dnsExternalAlias` is omitted or set to `false`.\n### How to get it[​](https://radix.equinor.com/guides/external-alias-certificate/#how-to-get-it \"Direct link to How to get it\")\n  1. Start by getting familiar with the appropriate procedures about handling keys and certificates in Equinor, as they are considered to be sensitive information.\n  2. Create a _Certificate Signing Request_ on you local pc using the [openssl](https://www.openssl.org/) command: \n```\n# Step 1: Generate a private keyopenssl genrsa -out ./myapp.equinor.com.key 2048# Keep this file safe and out of version control. You will need it later. # Step 2: Generate Certificate Signing Request (CSR) file using the private keyopenssl req -new-key ./myapp.equinor.com.key -out ./myapp.equinor.com.csr\n```\n\n  3. Store the private key in a safe location.\n  4. Open the [Services@Equinor](https://equinor.service-now.com/selfservice) portal and find the service **Public SSL certificate**.\n  5. Request a SSL certificate and an intermediate certificate for your alias, and attach the CSR file you created in step 2: \n```\nTitle: Public SSL certificate with intermediateCertificate name: myapp.equinor.com\n```\n\n  6. You will receive an email (within a day or two) containing the requested certificate and corresponding intermediate certificate. Store them together with the private key in a safe location.\n\n\nSide note\n[How Certificate Chains Work](https://knowledge.digicert.com/solution/how-certificate-chains-work)\n### Apply the certificate and private key to the external DNS alias[​](https://radix.equinor.com/guides/external-alias-certificate/#apply-the-certificate-and-private-key-to-the-external-dns-alias \"Direct link to Apply the certificate and private key to the external DNS alias\")\n  1. In [Radix Web Console](https://console.radix.equinor.com/), navigate to the environment and component referenced in `dnsExternalAlias`.\n  2. Scroll down to `External DNS` and click on the `myapp.equinor.com` alias. ![External DNS list pending](https://radix.equinor.com/assets/images/external-dns-list-pending-749b46cb5b3edfaead8a87b64f27dd64.jpg)\n  3. Add the TLS certificate and intermediate certificate to the `Certificate` field, and the private key to the `Private Key` field. Make sure that the certificates are in correct order, as shown in the picture. ![Set certificate and private key](https://radix.equinor.com/assets/images/certificate-private-key-form-b4fcac4427ce06fd77d37278daa6ccaf.jpg)", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e62b4aabada4267d212c5d2e3f8b56a4", "__created_at__": 1748191392.2717485, "content": "ead8a87b64f27dd64.jpg)\n  3. Add the TLS certificate and intermediate certificate to the `Certificate` field, and the private key to the `Private Key` field. Make sure that the certificates are in correct order, as shown in the picture. ![Set certificate and private key](https://radix.equinor.com/assets/images/certificate-private-key-form-b4fcac4427ce06fd77d37278daa6ccaf.jpg)\n  4. Click the `Save` button to save. Radix will validate the certificate and the private key before applying them. Refer to the [Troubleshooting](https://radix.equinor.com/guides/external-alias-certificate/#troubleshooting) section for a list of common validation errors and hints how they can be resolved.\n  5. After successful save, the `myapp.equinor.com` alias will change status to `Consistent`. Basic information about the certificate is available by clicking on the chevron next to the alias. ![External DNS list consistent](https://radix.equinor.com/assets/images/external-dns-list-consistent-210e39038f67720125629389b1294af4.jpg)\n\n\n## Troubleshooting[​](https://radix.equinor.com/guides/external-alias-certificate/#troubleshooting \"Direct link to Troubleshooting\")\nThe most common validation errors are described below.\n  * **x509: certificate signed by unknown authority** The certificate is not signed by a trusted authority. You will see this error if the intermediate certificate is missing, or if you use a self signed certificate.\n  * **x509: certificate is not valid for any names, but wanted to match one.example.com** The certificate is not valid for any domain names. This error is usually reported if you switch the order of the TLS certificate and the CA certificate.\n  * **x509: certificate is valid for two.example.com, not one.example.com** The certificate is not valid for the selected alias.\n  * **x509: missing PEM block for certificate** The `Certificate` value does not contain a `CERTIFICATE` PEM block.\n  * **tls: private key does not match public key** The private key does not match certificate's public key. Use the correct private key. [openssl](https://www.ibm.com/support/pages/openssl-commands-check-and-verify-your-ssl-certificate-key-and-csr) can be used to test if a certificate and private key matches.\n  * **tls: failed to find PEM block with type ending in \"PRIVATE KEY\" in key input** The `Private Key` value does not contain a `PRIVATE KEY` or `RSA PRIVATE KEY` PEM block.\n\n\n[PreviousDNS Alias and certificate](https://radix.equinor.com/guides/external-alias/)[NextOverview](https://radix.equinor.com/guides/jobs/)\n  * [Acquire an Equinor TLS certificate](https://radix.equinor.com/guides/external-alias-certificate/#acquire-an-equinor-tls-certificate)\n    * [How to get it](https://radix.equinor.com/guides/external-alias-certificate/#how-to-get-it)\n    * [Apply the certificate and private key to the external DNS alias](https://radix.equinor.com/guides/external-alias-certificate/#apply-the-certificate-and-private-key-to-the-external-dns-alias)\n  * [Troubleshooting](https://radix.equinor.com/guides/external-alias-certificate/#troubleshooting)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/examples/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Examples\n\n\n# Examples\nThis site is running as a Radix application, configured with its [radixconfig.yaml](https://github.com/equinor/radix-public-site/tree/main/radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-a45b7e29768550210391968a2db566d1", "__created_at__": 1748191392.2717485, "content": "/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Examples\n\n\n# Examples\nThis site is running as a Radix application, configured with its [radixconfig.yaml](https://github.com/equinor/radix-public-site/tree/main/radixconfig.yaml) file.\nThere are also two sample projects you can look at in the same repository:\n  * [examples/radix-example-oauth-proxy](https://github.com/equinor/radix-public-site/tree/main/examples/radix-example-oauth-proxy)\n  * [examples/radix-example-keda-servicebus](https://github.com/equinor/radix-public-site/tree/main/examples/radix-example-keda-servicebus)\n\n\nThere also exists _many_ Radix Applications on Github. [Find them here](https://github.com/search?q=path%3A**%2Fradixconfig.yaml&type=code).\n[PreviousOnboarding](https://radix.equinor.com/start/onboarding/)[NextWhen to not use Radix](https://radix.equinor.com/start/not-radix/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/docker/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/docker/)\n    * [What is a Container](https://radix.equinor.com/guides/docker/)\n    * [Users in Containers](https://radix.equinor.com/guides/docker-useradd/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/docker/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/docker/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/docker/)\n  * [Jobs](https://radix.equinor.com/guides/docker/)\n  * [Volume Mounts](https://radix.equinor.com/guides/docker/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/docker/)\n  * [GitHub](https://radix.equinor.com/guides/docker/)\n\n\n  * [](https://radix.equinor.com/)\n  * Docker\n  * What is a Container\n\n\n# Overview\nEven if you do not use Radix, it is recommended that you learn how to use Docker for containerization, and use it for hosting. It has many benefits when utilizing cloud.\n[What is a container](https://www.youtube.com/watch?v=EnJ7qX9fkcU) and [Benefits of containers](https://www.youtube.com/watch?v=cCTLjAdIQho) are both good videos to explain what and why containers.\n[Best practice](https://radix.equinor.com/docs/topic-docker/) contains references to other relevant resources.\n[PreviousGuides](https://radix.equinor.com/guides/)[NextUsers in Containers](https://radix.equinor.com/guides/docker-useradd/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/git-submodules/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guid", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-53305dcc0f22c8161d5d71c17157c186", "__created_at__": 1748191392.2717485, "content": ")[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/git-submodules/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/git-submodules/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/git-submodules/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/git-submodules/)\n  * [Jobs](https://radix.equinor.com/guides/git-submodules/)\n  * [Volume Mounts](https://radix.equinor.com/guides/git-submodules/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/git-submodules/)\n  * [GitHub](https://radix.equinor.com/guides/git-submodules/)\n    * [Git submodules](https://radix.equinor.com/guides/git-submodules/)\n    * [Monorepo](https://radix.equinor.com/guides/monorepo/)\n\n\n  * [](https://radix.equinor.com/)\n  * GitHub\n  * Git submodules\n\n\nOn this page\n# Git submodule as Radix component\n[Submodules](https://git-scm.com/book/en/v2/Git-Tools-Submodules) is a native git feature which enables git repositories within other git repositories. This guide describes a pattern for using git submodules to incorporate multiple GitHub repositories in a single Radix application. This pattern can be used to e.g. build each Radix component in a single app from a separate GitHub repository.\n## Limitations[​](https://radix.equinor.com/guides/git-submodules/#limitations \"Direct link to Limitations\")\nAs of December 2022, Radix only supports a single SSH key for authenticating to remote git repositories. This means that a Radix repository's submodules must be either public or accessible using the same deploy key as the main repository. Because GitHub globally prohibits reuse of a single deploy key across multiple repositories, it's not possible to use submodules which point to private GitHub repositories.\nNote\nThere is an option to update submodule within the pipeline job. Please look [at the example](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job).\n### Trigger build of main app with commit to submodule[​](https://radix.equinor.com/guides/git-submodules/#trigger-build-of-main-app-with-commit-to-submodule \"Direct link to Trigger build of main app with commit to submodule\")\nBy default, a submodule reference is statically locked to a single commit in the remote repository. E.g. a dynamic reference to a branch of the submodule is not possible. If a new commit is made in the sub-module, this will not be reflected in the main repository unless the main repository is updated with a new commit reference.\nA development team might want a change in the submodule to be automatically reflected in parent repositories. This can be achieved with a GitHub actions workflow on the submodule repository which automatically updates the parent repositories.\nThe example workflow uses a deploy key with write access to automatically modify the parent repository when the submodule is modified. If a new commit is made to the `main` branch of the submodule, the `main` branch of the parent repository gets a new commit which changes the submodule reference to point to HEAD of the submodule's `main` branch.\n[PreviousAlerting](https://radix.equinor.com/guides/alerting/)[NextMonorepo](https://radix.equinor.com/guides/monorepo/)\n  * [Limitations](https://radix.equinor.com/guides/git-submodules/#limitations)\n    * [Trigger build of main app with commit to submodule](https://radix.equinor.com/guides/git-submodules/#trigger-build-of-main-app-with-commit-to-submodule)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-simple-pipeline/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c4a053a5348af8a8ee576972838166fc", "__created_at__": 1748191392.2717485, "content": "://radix.equinor.com/guides/git-submodules/#trigger-build-of-main-app-with-commit-to-submodule)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-simple-pipeline/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Simple pipeline\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/simple-pipeline) for this example.\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located - it is by default a root of the repository.\n  * The sub-pipeline in this example runs one task with a name `hello`. Create a file `hello-task.yaml` (file name can be arbitrary, file extension should be `yaml`). This task runs in the container with Alpine Linux and execute one command `echo \"Hello\"`.\n\n\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: hellospec:steps:-name: say-helloimage: alpinecommand:- echo \"Hello\"\n```\n\n  * Create a file `pipeline.yaml`. Add a task in the `tasks` list: give it a name (it can be any name, unique within this sub-pipeline), in the property `taskRef` (\"reference to a task\") put the value from the property `metadata.name` of the task, created above:\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipeline-examplespec:tasks:-name: task-example-hellotaskRef:name: hello\n```\n\n  * File structure should be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  └── hello-task.yaml└── radixconfig.yaml\n```\n\n  * Commit changes in the repository. Look at the details of a started Radix pipeline job (if the Radix app is connected to the GitHub WebHook, otherwise - start a job manually).\n  * Navigate to the Radix pipeline step \"Run pipeline\", when it is running or completed: the pipelines overview page shows a table with a list of sub-pipelines - in this example it is one sub-pipeline \"pipeline-example\", running for an environment \"dev\", and the sub-pipeline status. ![Sub-pipeline list](https://radix.equinor.com/assets/images/example-simple-pipeline-pipelines-bccfb625d6491cab4eceea21615ac88d.jpg)\n  * Navigate to the sub-pipeline (click on its name in the table row)\n  * The pipeline overview page shows a table with a list of this sub-pipeline's tasks - in this example it is one task \"task-example-hello\", and the task status. ![Sub-pipeline tasks](https://radix.equinor.com/assets/images/example-simple-pipeline-tasks-307044db51b183c3f5e5e566ba3bfc90.jpg)\n  * Navigate to the task (click on its name in the table row)\n  * The sub-pipeline task overview page shows a table with a list of this task's steps - in this example it is one step \"say-hello\", the step status and the step log: text \"Hello\", printed by the command `echo \"Hello\"` in the Linux container. ![Sub-pipeline task steps](https://radix.equinor.com/assets/images/example-simple-pipeline-task-ae7935083c7f920eb3596663eada71a8.jpg)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/openapi-swagger/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/openapi", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-499f5c32188ee9af4805ad1580372af9", "__created_at__": 1748191392.2717485, "content": "radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/openapi-swagger/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * OpenAPI/Swagger spec\n\n\nOn this page\n# OpenAPI/Swagger spec\n## OpenAPI/Swagger spec[​](https://radix.equinor.com/guides/jobs/openapi-swagger/#openapiswagger-spec \"Direct link to OpenAPI/Swagger spec\")\n[Download](https://raw.githubusercontent.com/equinor/radix-job-scheduler/main/swaggerui/html/swagger.json) Swagger/OpenAPI specification for job-scheduler\n## Generating clients[​](https://radix.equinor.com/guides/jobs/openapi-swagger/#generating-clients \"Direct link to Generating clients\")\nThe [openapi-generator](https://github.com/OpenAPITools/openapi-generator) can be used to generate client code for communicating with the `job-scheduler` API. It can also generate server stub code that can be used for local development and testing purposes.\nThe tool can be installed using [Homebrew](https://github.com/OpenAPITools/openapi-generator#15---homebrew), [npm](https://github.com/OpenAPITools/openapi-generator#17---npm), or by downloading the [JAR file](https://github.com/OpenAPITools/openapi-generator#13---download-jar). It can also be executed using a pre-built [Docker image](https://github.com/OpenAPITools/openapi-generator#16---docker).\nTo get the list of supported language and framework generators, execute\n```\nopenapi-generator-cli list\n```\n\nOn MacOS this CLI has the name `openapi-generator`.\nEach language/framework generator has its own set of additional configuration options\n```\nopenapi-generator-cli config-help -g<generator-name>\n```\n\nThese configuration options can be added to a file, e.g. `config.yaml`, and referenced in the `openapi-generator` CLI using the `-c` option (see examples below)\n```\nadditionalProperties:targetFramework: net5.0packageName: JobSchedulernetCoreProjectFile:true\n```\n\n## swagger.json[​](https://radix.equinor.com/guides/jobs/openapi-swagger/#swaggerjson \"Direct link to swagger.json\")\nDownload or reference the [swagger.json](https://raw.githubusercontent.com/equinor/radix-job-scheduler/main/swaggerui/html/swagger.json) file\n## Examples[​](https://radix.equinor.com/guides/jobs/openapi-swagger/#examples \"Direct link to Examples\")\nUsing the `config.yaml` above, we can generate a C# NET Core 5.0 client by executing\n```\nopenapi-generator-cli generate -g csharp-netcore-i https://raw.githubusercontent.com/equinor/radix-job-scheduler/main/swaggerui/html/swagger.json-c config.yaml-o Client\n```\n\n`openapi-generator-cli` generates client code, tests and documentation\n![Generated client code](https://radix.equinor.com/assets/images/netcore-client-output-39f740833f176d70aaa1582292f073fc.png)\nServer stub code for AspNetCore can be generated using the `aspnetcore` generator\n```\nopenapi-generator-cli generate -g aspnetcore -i https://raw.githubusercontent", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-8856a20bc8325ec9d98da3201034029b", "__created_at__": 1748191392.2717485, "content": "ui/html/swagger.json-c config.yaml-o Client\n```\n\n`openapi-generator-cli` generates client code, tests and documentation\n![Generated client code](https://radix.equinor.com/assets/images/netcore-client-output-39f740833f176d70aaa1582292f073fc.png)\nServer stub code for AspNetCore can be generated using the `aspnetcore` generator\n```\nopenapi-generator-cli generate -g aspnetcore -i https://raw.githubusercontent.com/equinor/radix-job-scheduler/main/swaggerui/html/swagger.json-c config_server.yaml-o Server\n```\n\n[PreviousManaging Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)[NextAzure Storage Account](https://radix.equinor.com/guides/volume-mounts/)\n  * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger/#openapiswagger-spec)\n  * [Generating clients](https://radix.equinor.com/guides/jobs/openapi-swagger/#generating-clients)\n  * [swagger.json](https://radix.equinor.com/guides/jobs/openapi-swagger/#swaggerjson)\n  * [Examples](https://radix.equinor.com/guides/jobs/openapi-swagger/#examples)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/workload-identity/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/workload-identity/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/workload-identity/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/workload-identity/)\n    * [OAuth 2.0 Authentication](https://radix.equinor.com/guides/authentication/)\n    * [Azure Workload Identity](https://radix.equinor.com/guides/workload-identity/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/workload-identity/)\n  * [Jobs](https://radix.equinor.com/guides/workload-identity/)\n  * [Volume Mounts](https://radix.equinor.com/guides/workload-identity/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/workload-identity/)\n  * [GitHub](https://radix.equinor.com/guides/workload-identity/)\n\n\n  * [](https://radix.equinor.com/)\n  * Authentication\n  * Azure Workload Identity\n\n\nOn this page\n# Workload Identity\nSome workloads (component or job replicas) running in Radix require credentials (JWT access tokens) for an **Azure AD app registration** or **user-assigned managed identity** to access Azure AD protected resources, like MS Graph, Key Vaults, Storage Accounts or Azure SQL Databases. Credentials for such workloads can be acquired using the [Oauth 2.0 client credentials flow](https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow). The **client credentials flow** permits a workload to use its own credentials to access protected resources instead of impersonating a user. Credentials can be acquired by using either a shared secret, a certificate or with [federated credentials](https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow#third-case-access-token-request-with-a-federated-credential).\nUsing shared secrets or certificates pose a security risk as they have to be stored securely and rotated regularly. With **federated credentials** , a trust between the [workload identity](https://learn.microsoft.com/en-us/azure/active-directory/develop/workload-identity-federation) and an **Azure AD app registration** or **user-assigned managed identity** is established. The **workload identity** is a JSON Web Token (JWT) mounted as a file inside the", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5dbb0201c8259a76d966a086e1fac7b0", "__created_at__": 1748191392.2717485, "content": "credential).\nUsing shared secrets or certificates pose a security risk as they have to be stored securely and rotated regularly. With **federated credentials** , a trust between the [workload identity](https://learn.microsoft.com/en-us/azure/active-directory/develop/workload-identity-federation) and an **Azure AD app registration** or **user-assigned managed identity** is established. The **workload identity** is a JSON Web Token (JWT) mounted as a file inside the workload's container. The JWT has a short liftime (one hour) and is automatically rotated.\n## Configure workload identity in Radix[​](https://radix.equinor.com/guides/workload-identity/#configure-workload-identity-in-radix \"Direct link to Configure workload identity in Radix\")\n**Workload identity** for a component or job is configured in the [identity](https://radix.equinor.com/radix-config/#identity) section in [radixconfig.yaml](https://radix.equinor.com/radix-config/). The value of `clientId` is either the _Application (client) ID_ for an Azure AD app registration or the _Client ID_ for a user-assigned managed identity. Read the Azure documentation on how to create an [Azure AD app registration](https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm) or [user-assigned managed identity](https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview).\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: my-radix-appspec:environments:-name: prod-name: devcomponents:-name: webidentity:azure:clientId: b96d264b-7053-4465-a4a7-32be5b0fec49 # Example value only, must be changed...\n```\n\nInformation required for setting up the trust relationship between a workload and the **Azure AD app registration** or **user-assigned managed identity** is available in the component/job page in Radix Web Console. ![Federation Trust Information](https://radix.equinor.com/assets/images/identity-web-console-d3219ed88ace3b3503d5ea1a7cb2d136.png)\n## Configure trust relationship in Azure[​](https://radix.equinor.com/guides/workload-identity/#configure-trust-relationship-in-azure \"Direct link to Configure trust relationship in Azure\")\nCreate a trust relationship (federated credential) between the workload (component or job) running in Radix and the app registration or user-assigned managed identity in Azure. A trust must be created per environment and workload. In the example above there are two environments (**prod** and **dev**) and one workload (**web**). Two trust relationships need to be created; one for **web** in **dev** environment and one for **web** in **prod** environment.\nTo create a trust relationship, open the [Azure Portal](https://portal.azure.com/), navigate to the _Azure AD app registration_ or _user-assigned managed identity_ configured in `clientId` and open the _Federated credentials_ page.\nFor _Azure AD app registration_ , the page is located in _Certificates & secrets_ ![Azure AD Application Federated Credentials](https://radix.equinor.com/assets/images/azure-ad-app-federation-89fdb1f2d4b18f3007f2bd2ec2b7a1ac.png)\nFor _user-assigned managed identities_ , the page is located in _Federated credentials_ ![Managed Identity Federated Credentials](https://radix.equinor.com/assets/images/managed-identity-federation-9f3e2525cf7959e3fd6920fa7ea3eb04.png)\nClick **Add Credential** and select **Kubernetes accessing Azure resources** in the drop-down. Fill out the required fields **Cluster Issuer URL** , **Namespace** and **Service Account** with information from the component/job page in Radix Web Console. Enter a value in the **Name** field that uniquely describes the federated credential, e.g. _my-radix-app_dev_web_. Click **Add** to save the changes. ![Add Federated Credentials](https://radix.equinor.com/assets/images/add-federated-credentials-31a4ecbefb629ab6614e77eab35b6edd.png)\n## Acquire credentials to access protected Azure resources[​](https://radix.equinor.com/guides/workload-identity/#acquire-credentials-to-access-protected-azure-resources \"Direct link to Acquire credentials to access protected Azure resources\")\nWhen workload identity is configured for a component or job, the following environment variables are set in the running container:\n  * **AZURE_FEDERATED_TOKEN_FILE** - path to the file containing the workload identity JWT (e.g. `/var/run/secrets/azure/tokens/azure-identity-token`)\n  * **AZURE_CLIENT_ID** - the value of `clientId` in the `identity` configuration section (e.g. `b96d264b-7053-4465-a4a7-32be5b0fec49`)\n  * **AZURE_AUTHORITY_HOST** - The base URL to Azure identity provider (`https://login.microsoftonline.com/`)\n  * **AZURE_TENANT_ID** - The tenant ID to use when aquiring tokens from the Azure identity provider (e.g. *`3aa4a235-b6e2-48d5-", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-a39d37efed864d8d37e8921a95782b32", "__created_at__": 1748191392.2717485, "content": "(e.g. `b96d264b-7053-4465-a4a7-32be5b0fec49`)\n  * **AZURE_AUTHORITY_HOST** - The base URL to Azure identity provider (`https://login.microsoftonline.com/`)\n  * **AZURE_TENANT_ID** - The tenant ID to use when aquiring tokens from the Azure identity provider (e.g. *`3aa4a235-b6e2-48d5-9195-7fcf05b459b0`)\n\n\nThe file defined by **AZURE_FEDERATED_TOKEN_FILE** contains the JWT which identifies the current workload, and is used as the **client_assertion** value when requesting access tokens for Azure resources using the [OAuth 2.0 client credentials flow with federated credentials](https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow#third-case-access-token-request-with-a-federated-credential).\nIt is recommended to use a SDK/library (see [SDKs and examples](https://radix.equinor.com/guides/workload-identity/#sdks-and-examples)), like the [Azure SDK](https://azure.github.io/azure-workload-identity/docs/topics/language-specific-examples/azure-identity-sdk.html), to handle the client credentials flow.\n## SDKs and examples[​](https://radix.equinor.com/guides/workload-identity/#sdks-and-examples \"Direct link to SDKs and examples\")\n  * [Azure SDK](https://azure.microsoft.com/en-us/downloads/): Programmatically manage and interact with Azure services with built in support for workload identity federation. See examples [here](https://azure.github.io/azure-workload-identity/docs/topics/language-specific-examples/azure-identity-sdk.html).\n  * [MSAL](https://learn.microsoft.com/en-us/azure/active-directory/develop/msal-overview): Acquire access tokens from the Microsoft identity platform. See examples [here](https://azure.github.io/azure-workload-identity/docs/topics/language-specific-examples/msal.html).\n  * [Azure CLI](https://learn.microsoft.com/en-us/cli/azure/): Interact with Azure services from the command line. Supports login with workload identity federation:\n\n\n```\n# Loginaz login --service-principal -u$AZURE_CLIENT_ID--tenant$AZURE_TENANT_ID --federated-token $(cat $AZURE_FEDERATED_TOKEN_FILE) --allow-no-subscriptions# Read a secret from a key vault that the logged on service principal has access toMYSECRET=$(az keyvault secret show -n mysecret --vault-name mykeyvault --query value -o tsv)\n```\n\n  * [curl](https://curl.se/): Send HTTP requests to the Microsoft identity platform to acquire access tokens:\n\n\n```\ncurl${AZURE_AUTHORITY_HOST}${AZURE_TENANT_ID}/oauth2/v2.0/token \\-X POST \\-d\"scope=https%3A%2F%2Fgraph.microsoft.com%2F.default  &client_id=${AZURE_CLIENT_ID}  &client_assertion_type=urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer  &client_assertion=$(cat $AZURE_FEDERATED_TOKEN_FILE)  &grant_type=client_credentials\"\n```\n\nResponse:\n```\n{\"token_type\":\"Bearer\",\"expires_in\":86399,\"ext_expires_in\":86399,\"access_token\":\"eyJ0eXAiOiJKV1QiLCJub25jZSI6Ik{a lot of characters here}\"}\n```\n\n[PreviousOAuth 2.0 Authentication](https://radix.equinor.com/guides/authentication/)[NextAzure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [Configure workload identity in Radix](https://radix.equinor.com/guides/workload-identity/#configure-workload-identity-in-radix)\n  * [Configure trust relationship in Azure](https://radix.equinor.com/guides/workload-identity/#configure-trust-relationship-in-azure)\n  * [Acquire credentials to access protected Azure resources](https://radix.equinor.com/guides/workload-identity/#acquire-credentials-to-access-protected-azure-resources)\n  * [SDKs and examples](https://radix.equinor.com/guides/workload-identity/#sdks-and-examples)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/environment-variables/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/environment-variables/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/environment-variables", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-122b52b6f7247f17ce2607b35c599e9f", "__created_at__": 1748191392.2717485, "content": "uides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/environment-variables/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/environment-variables/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/environment-variables/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/environment-variables/)\n  * [Jobs](https://radix.equinor.com/guides/environment-variables/)\n  * [Volume Mounts](https://radix.equinor.com/guides/environment-variables/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/environment-variables/)\n  * [GitHub](https://radix.equinor.com/guides/environment-variables/)\n\n\n  * [](https://radix.equinor.com/)\n  * Environment Variables\n\n\nOn this page\n# Configure environment variables\n[Environment variables](https://radix.equinor.com/radix-config/#variables-common) can be configured in the [radixconfig.yaml](https://radix.equinor.com/radix-config/). Additionally Radix will add some environment variables prefixed with `RADIX_` and `RADIXOPERATOR_` - these prefixes should not be used for environment variables.\nEnvironment variables can be overridden in the Radix Console, excluding those marked with the `RADIX_` and `RADIXOPERATOR_` prefix.\nThe value of an environment variable, changed to a new value in the Radix Console, will use this new value for all new deployments. To revert to the original value - edit it again, changing to its original value, specified in the `radixconfig.yaml`.\n## Overriding environment variables in the Radix Console[​](https://radix.equinor.com/guides/environment-variables/#overriding-environment-variables-in-the-radix-console \"Direct link to Overriding environment variables in the Radix Console\")\n  * Navigate to the application component or job page\n  * Click the `Edit` button\n  * Change one or more variables\n  * Click the `Apply` button\n\n\nAfter a few seconds the value of the overridden environment variables will be shown in the table.\ntip\nNote that changes made in the Radix Console will not be applied to _currently running_ replicas or jobs, meaning these will have to be restarted for the changes to take effect.\nTo apply changed environment variables:\n  * go to component replicas - restart the component\n  * go to jobs - start new jobs\n\n\nIn the `Environment variables` table, the column marked `Original` is used to show the original value of all modified variables.\n### Example[​](https://radix.equinor.com/guides/environment-variables/#example \"Direct link to Example\")\n  * Environment variables configured in `radixconfig.yaml`.\n```\nvariables:VAR1:\"val1\"VAR2:\"val2\"VAR3:\"\"# leaving a variable empty is a valid option\n```\n\n  * Environment variables shown in the Radix Console. Variables `VAR1` and `VAR3` has been changed. ![Edited environment variables](https://radix.equinor.com/assets/images/editable-env-vars-cfea29ac21b0b4c052ddc254f0e3f9db.png)\n\n\n[PreviousBuild Secrets](https://radix.equinor.com/guides/build-secrets/)[NextOAuth 2.0 Authentication](https://radix.equinor.com/guides/authentication/)\n  * [Overriding environment variables in the Radix Console](https://radix.equinor.com/guides/environment-variables/#overriding-environment-variables-in-the-radix-console)\n    * [Example](https://radix.equinor.com/guides/environment-variables/#example)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/private-link/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-6b635000ec02b2349bdf7191097c15cb", "__created_at__": 1748191392.2717485, "content": "radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/private-link/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/private-link/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/private-link/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/private-link/)\n  * [Jobs](https://radix.equinor.com/guides/private-link/)\n  * [Volume Mounts](https://radix.equinor.com/guides/private-link/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/private-link/)\n  * [GitHub](https://radix.equinor.com/guides/private-link/)\n\n\n  * [](https://radix.equinor.com/)\n  * Private Links\n\n\nOn this page\n# Private Links\nThe creation of Private Endpoints in Radix is a semi automated process, and the destination subscription must be part of Omnia Standalone.\n## Prerequisite[​](https://radix.equinor.com/guides/private-link/#prerequisite \"Direct link to Prerequisite\")\nThe destination subscription must be whitelisted in an Azure policy managed by [Solum](https://github.com/equinor/Solum). The policy allows the creation of Private Endpoints Connections only to Private Link Services in a list of whitelisted subscriptions.\nCheck if the subscription is whitelisted\n`Important:` If the target subscription are in this list [for Platform and Platform2](https://github.com/equinor/Solum/blob/master/src/platform/policyConfig/policy-assignments/S940_OP-Allow-PLS-Sub.json) or [for Playground](https://github.com/equinor/Solum/blob/master/src/platform/policyConfig/policy-assignments/S941_OP-Allow-PLS-Sub.json) the requirments are met.\n### How to add whitelist for your subscription[​](https://radix.equinor.com/guides/private-link/#how-to-add-whitelist-for-your-subscription \"Direct link to How to add whitelist for your subscription\")\n  1. Create a Pull Request in the repo\n\n\nFork the Solum repo, and update the following file /src/platform/policyConfig/policy-assignments/S940_OP-Allow-PLS-Sub.json - for Radix Platform /src/platform/policyConfig/policy-assignments/S941_OP-Allow-PLS-Sub.json - for Radix Playground\nCommit and add the PR, including this information: \"This PR needs to be approved by Technical owner `githubuser` and the `name`\"\n  * or -\n\n\n  1. Ask us to whitelist the subscription\n\n\nProvide the following information in the issue (request) Subscription ID GitHub `username` and the `name` of the Technical owner of the subscription\nWhen the pull request has been approved and merged, the policy will be updated.\n## Request the Private Link/Endpoint[​](https://radix.equinor.com/guides/private-link/#request-the-private-linkendpoint \"Direct link to Request the Private Link/Endpoint\")\nCreate an issue in the main Radix repo,[request a new private link](https://github.com/equinor/radix/issues/new?template=privatelink.yaml)\n```\n- [x] Confirm target subscription are whitelisted by Solum (as described above) - or -- [x] Request the Whitelist to be done by us- Resource ID: `Id of the destination resource` *sample* /subscriptions/A01234567-bc89-123d-ef45-678g9hi12jkl/resourceGroups/Some_RG_Prod/providers/Microsoft.Sql/servers/sql-some-prod - Radix environment (either):  - Radix Platform (North Europe) - Radix Platform 2 (West Europe) - Radix Playground\n```\n\nThe issue/request will be prosessed by Radix team and approve the privatelink if all requirements are met.\nThe submitter will get a mail with text 'Private link is created but needs manual approval in Azure Portal.'\nThis will show up as a pending request in the destination subscription. When the user approves the request", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-86de1afd277519f3fdf61c93b8bed274", "__created_at__": 1748191392.2717485, "content": "-some-prod - Radix environment (either):  - Radix Platform (North Europe) - Radix Platform 2 (West Europe) - Radix Playground\n```\n\nThe issue/request will be prosessed by Radix team and approve the privatelink if all requirements are met.\nThe submitter will get a mail with text 'Private link is created but needs manual approval in Azure Portal.'\nThis will show up as a pending request in the destination subscription. When the user approves the request, a Private Endpoint will be created on the destination subscription, and a Private Link between the two endpoints will be established.\nThe user can continue using the same FQDN to access the remote resource after the Private Endpoint has been created.\n[PreviousLimitations / Known Issues](https://radix.equinor.com/guides/volume-mounts/limitations)[NextEnable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Prerequisite](https://radix.equinor.com/guides/private-link/#prerequisite)\n    * [How to add whitelist for your subscription](https://radix.equinor.com/guides/private-link/#how-to-add-whitelist-for-your-subscription)\n  * [Request the Private Link/Endpoint](https://radix.equinor.com/guides/private-link/#request-the-private-linkendpoint)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/monitoring/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/monitoring/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/monitoring/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/monitoring/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/monitoring/)\n  * [Jobs](https://radix.equinor.com/guides/monitoring/)\n  * [Volume Mounts](https://radix.equinor.com/guides/monitoring/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/monitoring/)\n    * [Metrics](https://radix.equinor.com/guides/monitoring/)\n    * [Alerting](https://radix.equinor.com/guides/alerting/)\n  * [GitHub](https://radix.equinor.com/guides/monitoring/)\n\n\n  * [](https://radix.equinor.com/)\n  * Monitoring\n  * Metrics\n\n\nOn this page\n# Monitoring your app\nPrometheus and Grafana are the main tools provided in Radix for analytics and monitoring visualisation.\nClick the _`Monitoring`_link in the bottom left corner of the Radix Web Console, log into Grafana using Azure AD credentials and explore dashboards.\n## Metrics visualisation[​](https://radix.equinor.com/guides/monitoring/#metrics-visualisation \"Direct link to Metrics visualisation\")\nAll dashboards in Radix are shared, i.e. another project/team will also be able to open your dashboard. Therefore, it is a good idea to create a folder for your dashboard with a sensible name. Create your own dashboards from scratch or just make a copy of the sample dashboard and modify the content to meet your needs.\n## Standard metrics[​](https://radix.equinor.com/guides/monitoring/#standard-metrics \"Direct link to Standard metrics\")\nBy default every application on Radix gets the standard metrics about CPU, memory, disk and network usage out of the box.\n## Application-specific metrics[​](https://radix.equinor.com/guides/monitoring/#application-specific-metrics \"Direct link to Application-specific metrics\")\nDevelopers are encouraged to also export internal metrics. These metrics are automaticaly collected, stored and made available to graph by Radix. Advanced applications sometimes expose hundreds of custom metrics, but even a few help. Start with what's most important for your application to track.\nWhen you add `monitor", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3d8ed469511b1e5c49df868dab88bb34", "__created_at__": 1748191392.2717485, "content": "network usage out of the box.\n## Application-specific metrics[​](https://radix.equinor.com/guides/monitoring/#application-specific-metrics \"Direct link to Application-specific metrics\")\nDevelopers are encouraged to also export internal metrics. These metrics are automaticaly collected, stored and made available to graph by Radix. Advanced applications sometimes expose hundreds of custom metrics, but even a few help. Start with what's most important for your application to track.\nWhen you add `monitoring: true` to [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#monitoring), Radix will scrape the `/metrics` endpoint on your application expecting metrics in the `Prometheus` format (this is a very simple text-based format).\nThe Prometheus format looks something like this ([full documentation](https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md)):\n```\nmyapp_internal_queue_size { hostname=\"myhost\", env=\"dev\" } 100myapp_worker_pool_size { hostname=\"myhost\", env=\"dev\" } 10\n```\n\nIn the first line `myapp_internal_queue_size` is the name of the time-series, and `hostname` and `env` are labels. `100` is the value of the metric right now. It's a good idea to look into the types of metrics; counter, gauge and histogram: <https://prometheus.io/docs/concepts/metric_types/>\nYou can either write the handler to construct this format yourself, or use one of the many available [client libraries](https://prometheus.io/docs/instrumenting/clientlibs/).\nRadix will now collect these metrics and make them available in your Grafana dashboards.\nOnce you have started creating and monitoring metrics you might want to [explore the possibilities](https://radix.equinor.com/docs/topic-monitoring/) to make them more useful for your application.\ntip\nMetrics information is open (shared) among Radix users. Make sure you do not include confidential information in your metrics. It is suggested that you _prefix_ your metric names with your application name (e.g. `<app_name>_metric_name`), so that your application metrics can be easily distinguishable from other application metrics.\n### Adding custom metrics to a NodeJS application[​](https://radix.equinor.com/guides/monitoring/#adding-custom-metrics-to-a-nodejs-application \"Direct link to Adding custom metrics to a NodeJS application\")\nHere is a quick example showing how to add custom metrics to a NodeJS Express app. It's based on the examples [here](https://github.com/siimon/prom-client/blob/master/example/server.js) and [here](https://nodejs.org/es/docs/guides/getting-started-guide/).\nWe will have a single `server.js` file. Comments describe the sections pertaining to monitoring:\n```\nconst express =require('express');const server =express();// Import the prometheus-clientconst client =require('prom-client');// Create a register to hold all metricsconst register = client.register;const hostname ='127.0.0.1';const port =3000;// Create a collector for the default NodeJS metrics that we can run in the background.// Default metrics include memory heap size, event loop lag, CPU seconds and more.const collectDefaultMetrics = client.collectDefaultMetrics;// Probe the default metrics every 5th second.collectDefaultMetrics({timeout:5000});// Define a counterconst http_requests =newclient.Counter({// Name of the counter as it will be stored in Prometheus and used in Grafananame:'http_requests',// Help text. Not really used anywhere, but set it properly anywayhelp:'Cumulative number of HTTP requests',// Extra labels (dimensions) of the metric. For HTTP Requests labels could be path, status_code, method// Anything we might want to use later to filter or aggregate subsets of the datalabelNames:['path']});server.get('/',(req, res)=>{// Increase the counter with path label / http_requests.inc({path:'/'}); res.statusCode=200; res.setHeader('Content-Type','text/plain'); res.end('Hello World\\n');});server.get('/metrics',(req, res)=>{// Increase the counter with path label /metrics http_requests.inc({path:'/metrics'}); res.set('Content-Type', register.contentType); res.end(register.metrics());});server.listen(port, hostname,()=>{console.log(`Server running at http://${hostname}:${port}/`);});\n```\n\nBefore running it you might need to install some dependencies:\n```\nnpminstall prom-client express\n```\n\nAnd run it\n```\nnode server.js\n```\n\nYou can then view the metrics at <http://127.0.0.1:3000/metrics>.\n[PreviousEgress](https://radix.equinor.com/guides/egress-config/)[NextAlerting](https://radix.equinor.com/guides/alerting/)\n  * [Metrics visualisation](https://radix.equinor.com/guides/monitoring/#metrics-visualisation)\n  * [Standard metrics](https://radix.equinor.com/guides/monitoring/#standard-metrics)\n  * [Application-specific metrics](https://radix.equinor.com/guides/monitoring/#application-specific-metrics)\n    * [Adding custom metrics to a NodeJS application](https://radix.equinor.com/guides/monitoring/#adding-custom-metrics-to-a-nodejs-application)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#__docusaurus_skipToContent_fallback", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-189f7dfe19d7af8e7b05101070dd76c8", "__created_at__": 1748191392.2717485, "content": "es/monitoring/#application-specific-metrics)\n    * [Adding custom metrics to a NodeJS application](https://radix.equinor.com/guides/monitoring/#adding-custom-metrics-to-a-nodejs-application)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of multiple components application with the source in the sub-folders\nA multiple components application can have source code in sub-folders of the GitHub repository. `Dockerfile`-s of these components also need to be in their sub-folders.\nExample:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#github-repository \"Direct link to GitHub repository\")\n```\n/├── frontend/│  ├── app.js│  └── Dockerfile├── backend/│  ├── server.js│  └── Dockerfile└── radixconfig.yaml\n```\n\n#### Dockerfile of the frontend[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#dockerfile-of-the-frontend \"Direct link to Dockerfile of the frontend\")\n```\nFROM node:alpineWORKDIR /appCOPY . .USER 1000CMD [\"node\", \"app.js\"]\n```\n\n#### Dockerfile of the backend[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#dockerfile-of-the-backend \"Direct link to Dockerfile of the backend\")\n```\nFROM node:alpineWORKDIR /appCOPY . .USER 1000CMD [\"node\", \"server.js\"]\n```\n\n#### radixconfig.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#radixconfigyaml \"Direct link to radixconfig.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app-123spec:environments:-name: devbuild:from: maincomponents:-name: web-appsrc: ./frontendports:-name: httpport:8080publicPort: http-name: apisrc: ./backendports:-name: httpport:8080\n```\n\nThe path of the `web-app` component `./frontend` in the `src` refers to the sub-folder `frontend` of the repository. Equivalent can be `src: frontend`.\nThe path of the `api` component `./backend` in the `src` refers to the sub-folder `backend` of the repository. Equivalent can be `src: backend`.\nSource folder of components can be deeper in the folder hierarchy. `Dockerfile`-s need to be in component folders, defined in the `src`.\nExample for `src: source/app/frontend` or `src: ./source/app/backend`:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-subfolders/#github-repository-1 \"Direct link to GitHub repository\")\n```\n/├── source/│  └──app/│   ├── frontend/│   │  ├── app.js│   │  └── Dockerfile│   └── backend/│     ├── server.js│     └── Dockerfile└── radixconfig.yaml\n```\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/deployment-promotion/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/deployment-promotion/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d2e0819a9fc769c6a5b1f3c258709209", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/guides/deployment-promotion/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Apply Config](https://radix.equinor.com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/deployment-promotion/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/deployment-promotion/)\n  * [Jobs](https://radix.equinor.com/guides/deployment-promotion/)\n  * [Volume Mounts](https://radix.equinor.com/guides/deployment-promotion/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/deployment-promotion/)\n  * [GitHub](https://radix.equinor.com/guides/deployment-promotion/)\n\n\n  * [](https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Deployment Promotion\n\n\nOn this page\n# Deployment Promotion\n[Deployments](https://radix.equinor.com/start/radix-concepts/#deployment) in Radix are portable, which makes it possible to use them in several scenarios.\nUsually deployments are created by a `build-deploy` [job](https://radix.equinor.com/start/radix-concepts/#job) and deployed into an [environment](https://radix.equinor.com/start/radix-concepts/#environment). Older deployments remain accessible under the \"Deployments\" section of the Web Console.\n![Web Console deployments](https://radix.equinor.com/assets/images/web-console-deployments-03df90288e79a024efe3c5ba3555cd2c.png)\nA deployment can be _promoted_ into any environment. In effect this creates a new, duplicate deployment, which becomes the _active deployment_ in the target environment. The new deployment uses the same component images (Docker images) as the original deployment, while the original deployment remains unchanged.\ntip\nCareful: Deployments do not encapsulate [environment variables](https://radix.equinor.com/start/radix-concepts/#environment-variable). When a deployment is promoted from one environment to another, environment variables are read from the **current** settings in `radixconfig.yaml` for the target environment. Variables, overridden in Radix Web Console get current overriding values from the target environment.\nThe same is true for an old deployment promoted to the same environment: the values of environment variables are those defined in `radixconfig.yaml` at the moment of promotion, not what they were when the original deployment was created. Variables, overridden in Radix Web Console get current overriding values.\nTo promote a deployment you must create a new Job of type `promote`. There are some ways to do this in the Web Console:\n  * In an environment page, a \"promote\" button is next to the active deployment\n  * In the page for a deployment (Deployments → Deployment) there is a \"promote\" button\n  * The jobs page has a \"new job\" button, where \"promote\" can be selected\n\n\n## Promote to another environment[​](https://radix.equinor.com/guides/deployment-promotion/#promote-to-another-environment \"Direct link to Promote to another environment\")\nTaking the current active deployment from one environment into another is an effective workflow; it can be used as a manual \"deploy-to-production\" step if you prefer to not map the production environment to a git branch for deployment. The [workflows](https://radix.equinor.com/start/workflows/) guide has an example of how to use this.\n## Promote an old deployment/rollback[​](https://radix.equinor.com/guides/deployment-promotion/#promote-an-old-deploymentrollback \"Direct link to Promote an old deployment/rollback\")\nYou can promote an old deployment to become the active deployment within the same environment.\nFor instance, in case the current active deployment exhibits unwanted behaviour, you can quickly promote a previous deployment to the same environment without rebuilding. Since a new (copied) deployment is created by promotion, the faulty deployment will remain available for promotion (e.g. into another environment for debugging).\nThe previous deployments of an environment are", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-8eba7fcb7dfa378fa841920ad68f3a53", "__created_at__": 1748191392.2717485, "content": "/#promote-an-old-deploymentrollback \"Direct link to Promote an old deployment/rollback\")\nYou can promote an old deployment to become the active deployment within the same environment.\nFor instance, in case the current active deployment exhibits unwanted behaviour, you can quickly promote a previous deployment to the same environment without rebuilding. Since a new (copied) deployment is created by promotion, the faulty deployment will remain available for promotion (e.g. into another environment for debugging).\nThe previous deployments of an environment are listed in the respective Web Console's environment page.\nNote that if you have a git branch mapped to build and deploy to this environment, Radix will continue to react to new commits and will override the promoted deployment with a new one.\n[PreviousDeploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)[NextApply Config](https://radix.equinor.com/guides/apply-config/)\n  * [Promote to another environment](https://radix.equinor.com/guides/deployment-promotion/#promote-to-another-environment)\n  * [Promote an old deployment/rollback](https://radix.equinor.com/guides/deployment-promotion/#promote-an-old-deploymentrollback)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/egress-config/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/egress-config/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/egress-config/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/egress-config/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/egress-config/)\n  * [Jobs](https://radix.equinor.com/guides/egress-config/)\n  * [Volume Mounts](https://radix.equinor.com/guides/egress-config/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/egress-config/)\n  * [GitHub](https://radix.equinor.com/guides/egress-config/)\n\n\n  * [](https://radix.equinor.com/)\n  * Egress\n\n\nOn this page\n# Egress\nThe [egress configuration](https://radix.equinor.com/radix-config/#egress) defines rules for outbound traffic from a Radix application.\n## Built-in rules[​](https://radix.equinor.com/guides/egress-config/#built-in-rules \"Direct link to Built-in rules\")\nTwo built-in egress rules are applied to every Radix application environment:\n  1. TCP and UDP port 53 to the internal Radix DNS service\n  2. all TCP and UDP ports to all jobs and components in the same [Radix application environment](https://radix.equinor.com/start/radix-concepts/#environment)\n\n\n## Limitations[​](https://radix.equinor.com/guides/egress-config/#limitations \"Direct link to Limitations\")\nAs of May 2022, the following limitations apply\n  * Egress configuration only applies per application [environment](https://radix.equinor.com/start/radix-concepts/#environment). Egress configurations which are specific for [components](https://radix.equinor.com/start/radix-concepts/#component) or [jobs](https://radix.equinor.com/start/radix-concepts/#job) are currently not supported.\n  * Destinations in egress rules must be IPv4 subnets. IPv6 subnets or FQDNs are currently not supported.\n  * Network traffic logs to debug egress configurations are currently not available.\n\n\n## Allow traffic for OAuth2[​](https://radix.equinor.com/guides/egress-config/#allow-traffic-for-oauth2 \"Direct link to Allow traffic for OAuth2\")\nIf a Radix application uses the [Radix OAuth2 feature", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-45bc0a7a598883ec9da2bbcc5cb4b8fd", "__created_at__": 1748191392.2717485, "content": ".\n  * Destinations in egress rules must be IPv4 subnets. IPv6 subnets or FQDNs are currently not supported.\n  * Network traffic logs to debug egress configurations are currently not available.\n\n\n## Allow traffic for OAuth2[​](https://radix.equinor.com/guides/egress-config/#allow-traffic-for-oauth2 \"Direct link to Allow traffic for OAuth2\")\nIf a Radix application uses the [Radix OAuth2 feature](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature), necessary openings in the egress configuration are automatically taken care of.\nHowever, if an application uses a custom OAuth2 implementation, it is necessary to allow traffic to identity provider (IDP) in the egress rules. If the IDP is Microsoft, the application needs outbound access to login.microsoftonline.com, TCP port 443. As of February 2022, this domain has IP ranges 20.190.128.0/18 and 40.126.0.0/18 ([link to Microsoft 365 documentation](https://docs.microsoft.com/en-us/microsoft-365/enterprise/urls-and-ip-address-ranges?view=o365-worldwide#microsoft-365-common-and-office-online)). The [git history of the Microsoft 365 documentation](https://github.com/MicrosoftDocs/microsoft-365-docs/commit/589c327b139be96eca71128d36109ef7d56c39eb) shows these ranges have remained stable since at least August 2020.\n## Allow traffic to Azure service[​](https://radix.equinor.com/guides/egress-config/#allow-traffic-to-azure-service \"Direct link to Allow traffic to Azure service\")\n### Use Private Link[​](https://radix.equinor.com/guides/egress-config/#use-private-link \"Direct link to Use Private Link\")\nIn order to create a stable egress rule which allows traffic to an Azure SaaS service, it is best practice to make a [Private Link from the Radix cluster](https://radix.equinor.com/docs/topic-private-link/) to the SaaS service. A Private Link provides a stable IPv4 address from the RFC1918 range which will not change during the lifetime of the Private Link. This address can be safely referred to in egress rules in the radixconfig file.\n### Allow traffic to public IP[​](https://radix.equinor.com/guides/egress-config/#allow-traffic-to-public-ip \"Direct link to Allow traffic to public IP\")\nIf a Radix application needs outbound access to some Azure SaaS service without a static IP, it may be possible to use the IP ranges defined in [Azure service tags](https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview). A mapping between service tags and IP ranges [can be downloaded in JSON format](https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview#discover-service-tags-by-using-downloadable-json-files).\nExample: suppose an application needs to connect to an Azure SQL server in the North Europe Azure region. The public IP address of this server is guaranteed to be within the IP ranges of the `Sql.NorthEurope` service tag. As of February 2022, this service tag corresponds to the following IPv4 ranges\ntip\n13.69.224.0/26, 13.69.224.192/26, 13.69.225.0/26, 13.69.225.192/26, 13.69.233.136/29, 13.69.239.128/26, 13.74.104.64/26, 13.74.104.128/26, 13.74.105.0/26, 13.74.105.128/26, 13.74.105.192/29, 20.50.73.32/27, 20.50.73.64/26, 20.50.81.0/26, 23.102.16.130/32, 23.102.52.155/32, 40.85.102.50/32, 40.113.14.53/32, 40.113.16.190/32, 40.113.93.91/32, 40.127.128.10/32, 40.127.137.209/32, 40.127.141.194/32, 40.127.177.139/32, 52.138.224.0/26, 52.138.224.128/26, 52.138.225.0/26, 52.138.225.128/26, 52.138.229.72/29, 52.146.133.128/25, 65.52.225.245/32, 65.52.226.209/32, 104.41.202.30/32, 191.235.193.75/32, 191.235.193.139/32, 191.235.193.140/31\nAn appropriate egress rule could be to allow outbound traffic to these IPv4 ranges on TCP port 1433. Be wary of allowing traffic to service tags which can comprise IP addresses belonging to arbitrary services controlled by malicious actors. E.g., one can argue that a rule which allows traffic to the `AzureCloud.NorthEurope` service tag introduces greater risk than a rule which merely allows the `Sql.NorthEurope` tag.\nHowever, these IP ranges are subject to change. As of", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c61b8a45a96429fd2d7f0d660c290740", "__created_at__": 1748191392.2717485, "content": "31\nAn appropriate egress rule could be to allow outbound traffic to these IPv4 ranges on TCP port 1433. Be wary of allowing traffic to service tags which can comprise IP addresses belonging to arbitrary services controlled by malicious actors. E.g., one can argue that a rule which allows traffic to the `AzureCloud.NorthEurope` service tag introduces greater risk than a rule which merely allows the `Sql.NorthEurope` tag.\nHowever, these IP ranges are subject to change. As of February 2022, the `Sql.NorthEurope` tag has been subject to 11 revisions during its lifetime, 8 of which have happened between April 2021 and February 2022. 24 out of 961 IPv4 addresses which were included in the tag in April 2021, are no longer present in February 2022. 224 out of 1161 IPv4 addresses which are included as of February 2022, were not included in April 2021.\n[PreviousResource request and limit](https://radix.equinor.com/guides/resource-request/)[NextMetrics](https://radix.equinor.com/guides/monitoring/)\n  * [Built-in rules](https://radix.equinor.com/guides/egress-config/#built-in-rules)\n  * [Limitations](https://radix.equinor.com/guides/egress-config/#limitations)\n  * [Allow traffic for OAuth2](https://radix.equinor.com/guides/egress-config/#allow-traffic-for-oauth2)\n  * [Allow traffic to Azure service](https://radix.equinor.com/guides/egress-config/#allow-traffic-to-azure-service)\n    * [Use Private Link](https://radix.equinor.com/guides/egress-config/#use-private-link)\n    * [Allow traffic to public IP](https://radix.equinor.com/guides/egress-config/#allow-traffic-to-public-ip)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/sub-pipeline/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Build and Deploy](https://radix.equinor.com/guides/build-and-deploy/)\n    * [Deploy Using External CI/CD Tools](https://radix.equinor.com/guides/deploy-only/)\n    * [Deployment Promotion](https://radix.equinor.com/guides/deployment-promotion/)\n    * [Apply Config](https://radix.equinor.com/guides/apply-config/)\n    * [Sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/)\n    * [Status Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/sub-pipeline/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/sub-pipeline/)\n  * [Jobs](https://radix.equinor.com/guides/sub-pipeline/)\n  * [Volume Mounts](https://radix.equinor.com/guides/sub-pipeline/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/sub-pipeline/)\n  * [GitHub](https://radix.equinor.com/guides/sub-pipeline/)\n\n\n  * [](https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Sub-pipeline\n\n\nOn this page\n# Sub-pipeline\nIn the [Radix pipeline](https://radix.equinor.com/start/radix-concepts/#pipeline), optionally a sub-pipeline can be run. It is run after \"Build components step\" (if components need to be built) or after \"Prepare pipeline\" step. This sub-pipeline is based on the [Tekton CI", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-ed795a076ed89b4869595266dc74c049", "__created_at__": 1748191392.2717485, "content": "https://radix.equinor.com/)\n  * CI/CD Pipeline\n  * Sub-pipeline\n\n\nOn this page\n# Sub-pipeline\nIn the [Radix pipeline](https://radix.equinor.com/start/radix-concepts/#pipeline), optionally a sub-pipeline can be run. It is run after \"Build components step\" (if components need to be built) or after \"Prepare pipeline\" step. This sub-pipeline is based on the [Tekton CI/CD framework](https://tekton.dev/docs/getting-started/).\ntip\nNote on nomenclature! The content in this guide concerns a [Tekton pipeline](https://tekton.dev/docs/getting-started/) which is defined as a _pipeline within_ a parent [Radix pipeline](https://radix.equinor.com/start/radix-concepts/#pipeline). In the context of the Radix platform, a Tekton pipeline is referred to as a _sub-pipeline_ or _Tekton pipeline_ , while the parent Radix pipeline is referred to as a _pipeline_ or _Radix pipeline_.\n## Configure sub-pipeline[​](https://radix.equinor.com/guides/sub-pipeline/#configure-sub-pipeline \"Direct link to Configure sub-pipeline\")\nSub-pipeline is configured with file `pipeline.yaml`. This file will in turn have references to one or several other YAML-files which define _tasks_ for the sub-pipeline.\n### Pipeline and task files[​](https://radix.equinor.com/guides/sub-pipeline/#pipeline-and-task-files \"Direct link to Pipeline and task files\")\n  * Default folder for sub-pipeline is `tekton`, next to the [Radix configuration file](https://radix.equinor.com/radix-config) of the application.\n  * Default name for the sub-pipeline is `pipeline.yaml`.\n  * Files with sub-pipeline task configurations should be located next to the file `pipeline.yaml`.\n\n\nExample: a sub-pipeline `pipeline.yaml` refers to tasks in files `clone.yaml`, `build.yaml`, `migration.yaml`\n```\n/├── component1├── component2├── tekton/│  ├── pipeline.yaml│  ├── clone.yaml│  ├── build.yaml│  └── migration.yaml└── radixconfig.yaml\n```\n\nSuppose an app has a sub-pipeline defined, like the example above. Within the Radix pipeline step \"Prepare pipeline\", the following logic will be executed:\n  1. the sub-pipeline defined in `pipeline.yaml` is loaded\n  2. task files referred to inside the `pipeline.yaml` file are loaded, which are `clone.yaml`, `build.yaml` and `migration.yaml`\n  3. if an error occurred during loading of the sub-pipeline or its tasks, the step \"Prepare pipeline\" and entire Radix pipeline job is considered failed\n  4. the sub-pipeline is run\n  5. if any step of any task is failed - the pipeline gets status \"failed\", the step \"Run sub-pipeline\" and entire Radix pipeline job gets the status \"failed\"\n\n\nErrors in stage (3) can be caused by:\n  * an invalid format of a sub-pipeline or tasks files\n  * an empty list of tasks in a sub-pipeline\n  * a missing task, referenced in a sub-pipeline\n  * empty step list in a task\n\n\nFollow the [Tekton documentation](https://tekton.dev/docs/) to configure a sub-pipeline and its tasks, particularly [Tekton pipeline](https://tekton.dev/docs/pipelines/pipelines/) and [task](https://tekton.dev/docs/pipelines/tasks/) documentation.\n## Limitations[​](https://radix.equinor.com/guides/sub-pipeline/#limitations \"Direct link to Limitations\")\nIn Radix platform, the following limitations are applied to sub-pipelines:\n  * sub-pipeline does not support [workspaces](https://tekton.dev/docs/pipelines/workspaces/). However, it is possible to use [volumes](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-multiple-task-steps) in sub-pipeline tasks.\n  * sub-pipeline Task step cannot mount secrets as volumes, with some exceptions: \n    * the secret to access [private image repository](https://radix.equinor.com/radix-config/#privateimagehubs), which is mounted automatically\n    * [build secrets](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-build-secrets)\n  * sub-pipeline Task step cannot run as a privileged container (e.g. cannot run as root) or with a host network \n    * if a container image used in a step is configured to run as a root, this user can (and should) be changed to a non-root user with a field `securityContext.runAsUser` in the step definition, `securityContext.runAsGroup` is also supported. `runAsUser` and `runAsGroup` cannot have value `0` (= `root` user).\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: my-taskspec:steps:-image: alpinename: show-user-idscript:|    #!/usr/bin/env sh    id    :securityContext:runAsUser:1000\n```\n\nSuggestion\nThe following command can be used to find out with which user the image runs its container:\n```\ndocker run -it alpine id\n```\n\n\n\n## Hints[​](https://radix.equinor.com/guides/sub-pipeline/#hints \"Direct link to Hints\")\n  * Tekton pipeline", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3909ce9b5c9965671896c7d65e022c88", "__created_at__": 1748191392.2717485, "content": "alpinename: show-user-idscript:|    #!/usr/bin/env sh    id    :securityContext:runAsUser:1000\n```\n\nSuggestion\nThe following command can be used to find out with which user the image runs its container:\n```\ndocker run -it alpine id\n```\n\n\n\n## Hints[​](https://radix.equinor.com/guides/sub-pipeline/#hints \"Direct link to Hints\")\n  * Tekton pipeline and tasks can be developed and tested on PC within [local Kubernetes cluster](https://tekton.dev/docs/getting-started/tasks/).\n  * Name of a task, file name of a task and a name of a task in the Tekton pipeline task list - all can be different. It is important only to use the same name in the task field `metadata.name` and in the Tekton pipeline field `taskRef.name`. In the example below it is name `build-image`:\n  * File `pipeline.yaml`:\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipelinespec:tasks:-name: some-build-tasktaskRef:name: build-image\n```\n\nFile `build-image-task.yaml`:\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: build-imagespec:steps:...\n```\n\n  * It is not important in which order to put tasks in the sub-pipeline - tasks can run in parallel or in sequences, defined by fields [runAfter](https://tekton.dev/docs/pipelines/pipelines/#using-the-runafter-field), [conditions](https://tekton.dev/docs/pipelines/pipelines/#guard-task-execution-using-conditions), [from](https://tekton.dev/docs/pipelines/pipelines/#using-the-from-field).\n  * If a task has a field `runAfter` - it will be started on;yy when all tasks, referenced in the field `runAfter` are complete.\n  * Task details:\n    * Each sub-pipeline task runs in its own Kubernetes pod (replica).\n    * Task step runs in its own container of this task's pod.\n    * Task step [can be configured individually](https://tekton.dev/docs/pipelines/tasks/#defining-steps): which container image and how many resources to use, how to proceed [on an error](https://tekton.dev/docs/pipelines/tasks/#specifying-onerror-for-a-step), specify a [timeout](https://tekton.dev/docs/pipelines/tasks/#specifying-a-timeout), if the task runs script - is it [bash](https://tekton.dev/docs/pipelines/tasks/#running-scripts-within-steps) or [PowerShell](https://tekton.dev/docs/pipelines/tasks/#windows-scripts) script, etc.\n    * When task step uses `script` - it would be recommended to finish this script with the `no-op` command: put `:` (column) on the last new line of the script. It will help to avoid some irrelevant errors (e.g. in the example below: run of this task raises an error, when the command `printenv|grep \"DB\"` is on the last line of the script and there are no environment variables with a fragment \"DB\" in names). Or just put a command like `echo \"\"`\n```\nspec:steps:-image: alpinename: show-db-env-varsscript:|   #!/usr/bin/env sh   printenv|grep \"DB\"   :\n```\n\n\n\n## Examples[​](https://radix.equinor.com/guides/sub-pipeline/#examples \"Direct link to Examples\")\n  * [Simple sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/example-simple-pipeline)\n  * [Sub-pipeline with multiple tasks](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-multiple-tasks)\n  * [Sub-pipeline with multiple task steps](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-multiple-task-steps)\n  * [Sub-pipeline with build environment variables](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-env-vars)\n  * [Sub-pipeline with build environment variables for environments](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-env-vars-for-envs)\n  * [Sub-pipeline with build secrets](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-build-secrets)\n  * [Sub-pipeline with GitHub deploy keys](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-deploy-keys)\n  * [Sub-pipeline with Azure Workload Identity](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity)\n\n\n[PreviousApply Config](https://radix.equinor.com/guides/apply-config/)[NextStatus Badges](https://radix.equinor.com/guides/pipeline-badge/)\n  * [Configure sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/#configure-sub-pipeline)\n    * [Pipeline and task files](https://radix.equinor.com/guides/sub-pipeline/#pipeline-and-task-files)\n  * [Limitations](https://radix.equinor.com/guides/sub-pipeline/#limitations)\n  * [Hints](https://radix.equinor.com/guides/sub-pipeline/#hints)\n  * [Examples](https://radix.equinor.com/guides/sub-pipeline/#examples)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-3dd276bdc575d60ad777e855edbf6090", "__created_at__": 1748191392.2717485, "content": "://radix.equinor.com/guides/sub-pipeline/#pipeline-and-task-files)\n  * [Limitations](https://radix.equinor.com/guides/sub-pipeline/#limitations)\n  * [Hints](https://radix.equinor.com/guides/sub-pipeline/#hints)\n  * [Examples](https://radix.equinor.com/guides/sub-pipeline/#examples)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/enable-and-disable-components/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Jobs](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Volume Mounts](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [GitHub](https://radix.equinor.com/guides/enable-and-disable-components/)\n\n\n  * [](https://radix.equinor.com/)\n  * Enable and disable components\n\n\n# Enable and disable components\n  * Component can be [disabled or enabled](https://radix.equinor.com/radix-config/#enabled) for all or specific environment configurations.\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodenabled:false\n```\n\nIn the example above the component `backend` is disabled for the environment `prod`, but it remains enabled for other environments, if they exist. An equal configuration:\n```\nspec:components:-name: backendenabled:trueenvironmentConfig:-environment: prodenabled:false\n```\n\n  * The component can be enabled for specific environment configurations.\n```\nspec:components:-name: backendenabled:falseenvironmentConfig:-environment: prodenabled:true\n```\n\nIn the example above the component `backend` is disabled for all environments, but it is disabled for the environment `prod`.\n  * If a component is disabled and there are its environment configurations, where the option `enabled` is not specified, the component is disabled for such environments.\n```\nspec:components:-name: backendenabled:falseenvironmentConfig:-environment: prod\n```\n\nIn the example above the component `backend` is disabled for all environments, including the environment `prod`.\n\n\n[PreviousPrivate Links](https://radix.equinor.com/guides/private-link/)[NextComponent scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-env-vars/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with environment variables\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-example-with-env-vars) for this example.\n  * In the Radix application repository create a folder `tekton", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5508233653a7e7bfbf59d8a2e6ecff48", "__created_at__": 1748191392.2717485, "content": "quinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with environment variables\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-example-with-env-vars) for this example.\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located (by default it is a root of the repository).\n  * The sub-pipeline in this example runs one task.\n  * Create a file `env-vars-list-task.yaml` for the task `env-vars-list`. This task has one step \"show-env-vars-list\", which runs in the container with Alpine Linux.\n    * The step runs a script with one command `printenv | grep 'VAR'` - show a list of the step's container environment variables, with names containing \"VAR\".\n    * The task has input [parameters](https://tekton.dev/docs/pipelines/tasks/#specifying-parameters) in the field `params`\n    * The task step has description of environment variables in the field `env`, which will be created in the step's container. These environment variables can get values from parameters, referencing to them with `$(params.PARAM_NAME)` or explicitly set with a value.\n    * In the task below - there is parameters with names `VAR1T`, `VAR2T`, `VAR3T` (names not necessary have to be in capital letters). \n      * Actual parameter values are set in the sub-pipeline, which use the task, like arguments of a method in programming languages\n      * `VAR1T` - this parameter does not have default value, so it _has_ to be set in the sub-pipeline, otherwise there will be an error \"missing parameters\". When `type` of a parameter is not set, it is a `string`.\n      * `VAR2T`, `VAR3T`, `VAR4T`, `VAR5T` - these parameters have default values. Field `default` allows to specify a value, used when the param is not passed from a sub-pipeline. Available types are `string` and `array`. When type is `string` - default value should be put as a string value, when type is `array` - default value should be put as [an array of items lead by a dash](https://tekton.dev/docs/pipelines/tasks/#substituting-array-parameters), an additional field `type` need to be set as `array`: `type: array`.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: env-vars-listspec:params:-name: VAR1T         #it must be set in a sub-pipeline's task params, because it does not have default value-name: VAR2T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var2-in-task\"default: not-set-var2-in-task-name: VAR3T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var3-in-task\"default: not-set-var3-in-task-name: VAR4T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var4-in-task\"default: not-set-var4-in-task-name: VAR5T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var5-in-task\"default: not-set-var5-in-tasksteps:-name: show-env-vars-listimage: alpineenv:-name: VAR1examplevalue: $(params.VAR1T) #set by parameter VAR1T-name: VAR2examplevalue: $(params.VAR2T) #set by parameter VAR2T-name: VAR3examplevalue: $(params.VAR3T) #set by parameter VAR3T-name: VAR4examplevalue: $(params.VAR4T) #set by parameter VAR4T-name: VAR5examplevalue: $(params.VAR5T) #set by parameter VAR5T-name: VAR6examplevalue:\"value6\"#set explicitly with the value \"value6\"script:|    #!/usr/bin/env sh    printenv | grep 'VAR'\n```\n\n  * Create a file `pipeline.yaml`. Add a task in the `tasks` list: give it a name (it can be any name, unique within this sub-pipeline), in the property `taskRef` (\"reference to a task\") put the value from the property `metadata.name` of the task, created above:\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipeline-example-with-env-varsspec:params:-name: VAR1        #it must be set in the radixconfig.yaml-name: VAR2        #it can be set in the radixconfig.yaml, if not - used default \"not-set-var2\"default: not-set-var2-name: VAR3        #it can be set in the radixconfig.yaml, if not - used default \"not-set-var3\"default: not-set-var3tasks:-name: show-env-vars   #name of the task \"env-vars-list\" in this sub-pipelineparams:-name: VAR1T     #set by parameter VAR1, from the radixconfig.yamlvalue: $(params.VAR1)-name: VAR2T     #set by parameter VAR2, from the radixconfig.yaml or used default \"not-set-var2\"value: $(params.VAR2)-name: VAR", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f0d6e4b01fec91d8e1059f8f5db0af02", "__created_at__": 1748191392.2717485, "content": "default \"not-set-var3\"default: not-set-var3tasks:-name: show-env-vars   #name of the task \"env-vars-list\" in this sub-pipelineparams:-name: VAR1T     #set by parameter VAR1, from the radixconfig.yamlvalue: $(params.VAR1)-name: VAR2T     #set by parameter VAR2, from the radixconfig.yaml or used default \"not-set-var2\"value: $(params.VAR2)-name: VAR3T     #set by parameter VAR3, not set in the radixconfig.yaml - used default \"not-set-var3\"value: $(params.VAR3)-name: VAR4T     #set explicitly with the value \"value4\"value: value4taskRef:name: env-vars-list  #task name\n```\n\ntip\nIn Tekton documentation and examples `params` items have fields `value` and `default`, assigned directly with strings, not with objects, which is not correspond to the [API specification](https://github.com/tektoncd/pipeline/blob/main/docs/api-spec.md#param). Currently, Radix strictly follows thes specification.\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  └── env-vars-list-task.yaml└── radixconfig.yaml\n```\n\n  * In the file `radixconfig.yaml` add a field `build` with sub-field `variables` within the `subPipeline` option. Values of these variables will be passed to the sub-pipeline parameters, which have the same name: \n    * `VAR1` - mandatory variable, passed to the sub-pipeline's parameter `VAR1`\n    * `VAR2` - optional variable, passed to the sub-pipeline's parameter `VAR2`. If it does not exist in the `radixconfig.yaml`, the sub-pipeline parameter `VAR2` will get a value, specified in its `default` field.\n    * `VAR100` - unnecessary variable, not used in the sub-pipeline, it will be not passed to the sub-pipeline parameters.\n\n\n```\nspec:build:subPipeline:variables:VAR1: value1   #it must be set, as it is expected by the sub-pipelineVAR2: value2   #it can be set, if it does not exist - the sub-pipeline will set default valueVAR100: value100 #it is not used in the sub-pipeline and its tasks\n```\n\nThis sub-pipeline runs the task `show-env-vars` (which reference to the task `env-vars-list` described in the file `env-vars-list-task.yaml`), which has one step, as described above. This step run a script, printing environment variables, which names contain text `VAR`\n```\n#!/usr/bin/env shprintenv | grep 'VAR'\n```\n\ntip\nFirst line of the script is [shebang](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)). It is recommended to use for consistent script behaviour. It can refer to a default shell `sh` or to a specific shell, existing in the step's image distribution, like `bash` for Ubuntu:\n```\n#!/usr/bin/env bash\n```\n\n  * Commit changes in the repository. Look at the details of a started Radix pipeline job (if the Radix app is connected to the GitHub WebHook, otherwise - start a job manually).\n  * Navigate to the Radix pipeline step \"Run pipeline\", when it is running or completed: the pipelines overview page shows a table with a list of sub-pipelines - in this example it is one sub-pipeline \"pipeline-example-with-env-vars\", running for an environment \"dev\", and the sub-pipeline status. ![Sub-pipeline list](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-pipelines-7decbf918fddba25724d723459d51a78.jpg)\n  * Navigate to the sub-pipeline (click on its name in the table row)\n  * The sub-pipeline overview page shows a table with a list of this sub-pipeline's tasks - in this example it is one task \"env-vars-list\", and the task status. ![Sub-pipeline tasks](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-tasks-eaacbe8e56ed472df56c7712a9ef1836.jpg)\n  * Navigate to the task (click on its name in the table row)\n  * The sub-pipeline task overview page shows a table with a list of this task's steps - in this example it is one step \"show-env-vars-list\", the step status and log. ![Sub-pipeline task steps](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-task-step-378843122fc2c35d07945cdabb4de729.jpg) The log shows environment variables of the step container:\n```\nVAR1example=value1VAR2example=value2VAR3example=not-set-var3VAR4example=value4VAR5example=not-set-var5-in-taskVAR6example=value6\n```\n\n    * `VAR1example` and `VAR2example` - these variables are set with values from the `radixconfig.yaml`, field `build.variables`. None of other task step environment variables are set in the `radixconfig.yaml`.\n```\nbuild:subPipeline:variables:VAR1: value1VAR2: value2\n```\n\n    * `VAR3example` - this variable gets its default value fom sub-pipeline's `params` field\n```\nspec:params:-name: VAR3default: not-set-var3\n```\n\n    * `VAR4example` - this variable", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-4a6bca4a144501aaea61fe7f9863ef26", "__created_at__": 1748191392.2717485, "content": "ixconfig.yaml`, field `build.variables`. None of other task step environment variables are set in the `radixconfig.yaml`.\n```\nbuild:subPipeline:variables:VAR1: value1VAR2: value2\n```\n\n    * `VAR3example` - this variable gets its default value fom sub-pipeline's `params` field\n```\nspec:params:-name: VAR3default: not-set-var3\n```\n\n    * `VAR4example` - this variable is set explicitly in the sub-pipeline, in the task `params`\n```\ntasks:-name: show-env-varsparams:-name: VAR4Tvalue: value4\n```\n\n    * `VAR5example` - this variable is not defined in the sub-pipeline's task `params`, it is set to its default value, specified in the task\n```\nspec:params:-name: VAR5T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var5-in-task\"default: not-set-var5-in-task\n```\n\n    * `VAR6example` - this variable is not defined in the sub-pipeline's task `params` and task's `params`, it is set implicitly in the task step's field `env`\n```\nsteps:-env:-name: VAR6examplevalue:\"value6\"\n```\n\n![radixconfig to pipeline](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-buildenvs-to-pipeline-acf8423f7de0b41bf888a4d653c766f1.jpg) ![Pipeline to task](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-pipeline-to-task-54d402950446557fccdc9e85ab527719.jpg)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/azure-key-vaults/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [Jobs](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [Volume Mounts](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [GitHub](https://radix.equinor.com/guides/azure-key-vaults/)\n\n\n  * [](https://radix.equinor.com/)\n  * Azure Key Vault\n\n\nOn this page\n# Configuring Azure Key Vaults\nAzure Key Vault secrets, keys and certificates can be used in Radix, configured in the property `secretRefs.azureKeyVaults` of the [radixconfig.yaml](https://radix.equinor.com/radix-config/#secretrefs) file. It is implemented with Azure Key Vault Provider for Secrets Store CSI Driver for Kubernetes. Read [more](https://github.com/Azure/secrets-store-csi-driver-provider-azure) about the driver.\n## Configuration[​](https://radix.equinor.com/guides/azure-key-vaults/#configuration \"Direct link to Configuration\")\n  * Create or use existing Azure Key Vault in own Azure subscription\n  * Add or use existing `Access policy` (e.g. with [Azure App registration](https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade) as a selected principal) with `Get` and `List` permissions to secrets, keys and/or certificates ![Add Access Policy](https://radix.equinor.com/assets/images/create-key-vault-access-policy-bcdc00cea", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-07a5ddb2ac41e63e5dc87695a2baf1ff", "__created_at__": 1748191392.2717485, "content": "* Create or use existing Azure Key Vault in own Azure subscription\n  * Add or use existing `Access policy` (e.g. with [Azure App registration](https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade) as a selected principal) with `Get` and `List` permissions to secrets, keys and/or certificates ![Add Access Policy](https://radix.equinor.com/assets/images/create-key-vault-access-policy-bcdc00cea1d881d9aa845d9577b9597a.png) ![Set permissions fo Access policy](https://radix.equinor.com/assets/images/configure-key-vault-access-policy-permissions-7413031ef64ed5d30d2e0e6ec807e750.png) ![Select principal for Access Policy](https://radix.equinor.com/assets/images/configure-key-vault-access-policy-service-principal-85d33fbfd5860c9bcc1fcfdcb1ecfc74.png)\n  * Create or use existing secrets, keys and/or certificates to be used in Radix application component as secrets ![Add Azure Key Vault secrets](https://radix.equinor.com/assets/images/add-key-vault-access-policy-secrets-57c24833dbae000e39f687e64fd04018.png) ![Add Azure Key Vault secrets](https://radix.equinor.com/assets/images/add-second-key-vault-access-policy-secrets-f310bbdbc0b8a72d6a2ac73f2834c84a.png)\n  * Define properties of the Azure Key Vaults in the [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#secretrefs) property `secretRefs.azureKeyVaults`\n  * `secretRefs.azureKeyVaults` properties `name` and `path` should be unique within one Radix application component and its environment (different environments can have the same `name` and `path`).\n    * Examples of correct configurations in component and `environmentConfig` (if exists) sections\n```\nvariables:VAR1:\"val1\"secrets:- SECRET1secretRefs:azureKeyVaults:#Azure Key Vault configuration, common for the component-name: radix-app-secretspath: /mnt/secrets          #overrides default \"path\", where secrets, keys and certificates are available as filesitems:-name: connection-string-prod   #example value \"server:prod\" in Azure Key Vault \"radix-app-secrets\"envVar: CONNECTION_STRING    #default environment variable CONNECTION_STRING-name: db-user          #example value \"readeruser\" in Azure Key Vault \"radix-app-secrets\"envVar: DB_USER         #default environment variable DB_USER-name: db-password        #example value \"Pa$$w0rd!\" in Azure Key Vault \"radix-app-secrets\"envVar: DB_PASS         #default environment variable DB_PASSenvironmentConfig:-environment: devsecretRefs:azureKeyVaults:#Azure Key Vault configuration, customized in environment \"dev\"-name: radix-app-secretspath: /mnt/dev          #overrides common configuration \"path\" in \"dev\" environmentitems:-name: connection-string-test #example value \"server:dev\" in Azure Key Vault \"radix-app-secrets\"envVar: CONNECTION_STRING  #overrides Azure Key Vault \"radix-app-secrets\" secret name for environment variable CONNECTION_STRING-environment: qasecretRefs:azureKeyVaults:#Azure Key Vault configuration, customized in environment \"qa\"-name: radix-app-secrets-2#overrides common configuration Azure Key Vault name in \"qa\" environmentitems:#\"qa\" environment uses the same \"path\" as in common configuration-name: connection-string-test #example value \"server:qa\" in Azure Key Vault \"radix-app-secrets-2\"envVar: CONNECTION_STRING  #overrides Azure Key Vault secret name for environment variable CONNECTION_STRING-name: db-password      #example value \"$ecretPa$$!\" in Azure Key Vault \"radix-app-secrets-2\"envVar: DB_PASS       #overrides Azure Key Vault secret name for environment variable DB_PASS-name: db-qa-user       #example value \"writeruser\" in Azure Key Vault \"radix-app-secrets-2\"envVar: DB_QA_USER      #new environment variable, existing only in environment \"qa\"-environment: prod        #Azure Key Vault configuration is not customized in environment \"prod\"variables:VAR1:\"val2\"\n```\n\n      * Environment variables in \"dev\" environment replica\n```\nVAR1=\"val1\"SECRET1=\"some secret dev\"CONNECTION_STRING=\"server:dev\"DB_USER=readeruserDB_PASS=\"Pa$$w0rd!\"\n```\n\n      * Environment variables in \"qa\" environment replica\n```\nVAR1=\"val1\"SECRET1=\"some secret qa\"CONNECTION_STRING=\"server:qa\"DB_USER=readeruserDB_PASS=\"$ecretPa$$!\"DB_QA_USER=writeruser\n```\n\n      * Environment variables in \"prod\" environment replica\n```\nVAR1=\"val2\"SECRET1=\"some secret prod\"CONNECTION_STRING=\"server:prod\"DB_USER=readeruserDB_PASS=\"Pa$$w0rd!\"\n```\n\n      * Files in \"dev\" environment replica\n```\n$ ls /mnt/dev/connection-string-test db-password db-user\n```\n\n      * Files in \"qa\" environment replica\n```\n$ ls /mnt/secrets/db-user$ ls /mnt/azure-key-vault/radix-app-secrets-2/connection-string-test db-password db-qa-user\n```\n\n      * Files in \"prod\" environment replica\n```\n$ ls /mnt/secretsconnection-string-prod db-password db-user", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-63ec96f4ed386731c5b9e49e62b30b1d", "__created_at__": 1748191392.2717485, "content": "\"dev\" environment replica\n```\n$ ls /mnt/dev/connection-string-test db-password db-user\n```\n\n      * Files in \"qa\" environment replica\n```\n$ ls /mnt/secrets/db-user$ ls /mnt/azure-key-vault/radix-app-secrets-2/connection-string-test db-password db-qa-user\n```\n\n      * Files in \"prod\" environment replica\n```\n$ ls /mnt/secretsconnection-string-prod db-password db-user\n```\n\n    * Examples of invalid configuration in component section\n```\nvariables:VAR1:\"val1\"secrets:- SECRET1secretRefs:azureKeyVaults:-name: radix-app-secrets-1path: /mnt/1items:-name: secret1envVar: VAR1     #invalid: collision with environment variable VAR1-name: secret4envVar: SECRET1    #invalid: collision with secret SECRET1-name: secret2envVar: SECRET2-name: secret3envVar: SECRET2    #invalid: duplicate environment variable SECRET2 in Azure Key Vault configuration...-name: radix-app-secrets-1#invalid: duplicate Azure Key Vault configurationpath: /mnt/1       #invalid: duplicate \"path\" within the componentitems:-name: secret4envVar: SECRET2    #invalid: duplicate environment variable SECRET2 in Azure Key Vault configuration ...\n```\n\n    * Examples of invalid configuration in component and `environmentConfig` sections\n```\nsecretRefs:azureKeyVaults:-name: radix-app-secrets-1items:-name: secret1envVar: VAR1     #invalid: collision with environment variable VAR1-name: secret2envVar: SECRET1...environmentConfig:-environment: devsecretRefs:azureKeyVaults:#Azure Key Vault configuration, customized in environment \"dev\"-name: radix-app-secrets-1path: /mnt/1items:-name: secret1envVar: VAR1     #invalid: collision with environment variable VAR1-name: secret2envVar: SECRET1    #correct: overrides environment variable SECRET1 in common Azure Key Vault configuration-name: secret3envVar: SECRET3...-name: radix-app-secrets-1#invalid: duplicate Azure Key Vault configurationpath: /mnt/1       #invalid: duplicate \"path\" within the componentitems:-name: secret3envVar: SECRET3    #invalid: duplicate environment variable SECRET2 in Azure Key Vault configuration...-environment: qasecretRefs:azureKeyVaults:#Azure Key Vault configuration, customized in environment \"qa\"-name: radix-app-secrets-1path: /mnt/1items:-name: secret2envVar: SECRET1    #correct: overrides environment variable SECRET1 in common Azure Key Vault configuration-name: secret3envVar: SECRET3    #correct: unique environment variable in environment \"qa\"...\n```\n\n\n\n## Authentication[​](https://radix.equinor.com/guides/azure-key-vaults/#authentication \"Direct link to Authentication\")\nThere are two options for authentication to Azure Key Vault from a Radix application component\n  * [Azure Service Principal Client ID and Client Secret](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-service-principal-client-id-and-client-secret)\n  * [Azure Workload Identity](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-workload-identity)\n\n\n### Authentication with Azure Service Principal Client ID and Client Secret[​](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-service-principal-client-id-and-client-secret \"Direct link to Authentication with Azure Service Principal Client ID and Client Secret\")\n  * Get access policy principal client-id and client secret to enter as credential secrets in the Radix Console ![Get Azure App registration client-id](https://radix.equinor.com/assets/images/key-vault-sp-client-id-4df389c680689ece33e947c5ea324d09.png) ![Get Azure App registration client-secret](https://radix.equinor.com/assets/images/key-vault-sp-client-secret-008ee0c831b8a780ed734964d00b895c.png)\n  * After environment has been built and deployed, set the generated credential secrets with client-id and client-secret of Azure principal, selected in access policy for Azure Key Vault. This should ensure that secrets are in Consistent status. It is recommended to restart a component after credential secrets has been set in the console \n    * Credential secrets in \"prod\" environment ![Set secrets](https://radix.equinor.com/assets/images/set-key-vault-secrets-in-radix-console-4fdcbf34693f12ddcf4e7127e174ad76.png)\n    * Credential secrets in \"qa\" environment ![Set secrets](https://radix.equinor.com/assets/images/set-key-vault-secrets-in-radix-console-qa-c8f974f12c9bdeb1fcdfa287de6671ae.png)\n\n\n### Authentication with Azure Workload Identity[​](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-workload-identity \"Direct link to Authentication with Azure Workload Identity\")\n  * Enable [Workload Identity](https://radix.equinor.com/guides/workload-identity/#configure-workload-identity-in-radix) for the component or job.\n  * Configure Workload Identity authentication for the Azure Key Vault by setting `useAzureIdentity: true` in the [azureKeyVault](https://radix.equinor.com/radix-config/#azurekeyvault) section in [radixconfig.yaml](https://", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-0fed40b27e07e6482b5f653851522510", "__created_at__": 1748191392.2717485, "content": "Azure Workload Identity\")\n  * Enable [Workload Identity](https://radix.equinor.com/guides/workload-identity/#configure-workload-identity-in-radix) for the component or job.\n  * Configure Workload Identity authentication for the Azure Key Vault by setting `useAzureIdentity: true` in the [azureKeyVault](https://radix.equinor.com/radix-config/#azurekeyvault) section in [radixconfig.yaml](https://radix.equinor.com/radix-config/)\n\n\nAn option `useAzureIdentity` on a component level, defined or left default `false`, can be overridden on an `environmentConfig` level.\nExample:\n```\nidentity:azure:clientId: abcdefgh-1234-5678-9012-34567abcdefgsecretRefs:azureKeyVaults:-name: radix-app-secretspath: /mnt/key-vaultuseAzureIdentity:trueitems:-name: connection-string-devenvVar: CONNECTION_STRING\n```\n\n## Azure Key Vault secret, certificate and key versions[​](https://radix.equinor.com/guides/azure-key-vaults/#azure-key-vault-secret-certificate-and-key-versions \"Direct link to Azure Key Vault secret, certificate and key versions\")\nSecret, certificate and key versions from referenced Azure Key Vault currently used by component replicas can be shown in the Radix console. Click on the link of Azure Key Vault secret, cert or key to open a popup with this info. ![Versions of valid used secrets](https://radix.equinor.com/assets/images/azure-key-vault-secrets-versions-on-radix-console-valid-8137d1871ff1b7d176f97ffbac2ada17.png) ![Versions of invalid or not used secrets](https://radix.equinor.com/assets/images/azure-key-vault-secrets-versions-on-radix-console-failed-60b1d9a151a2749597a04c3e4d9561c8.png) For job component the dialog show information which job or batch uses secret versions (prefixed with \"job\" and \"batch\") and which secret version will be used in new started jobs (consumer is \"New job\") ![Versions of secrets, used in a job component](https://radix.equinor.com/assets/images/azure-key-vault-secrets-versions-for-job-component-on-radix-console-valid-dfc92b450703a4468d095f040c776e2e.png)\n## Certificates[​](https://radix.equinor.com/guides/azure-key-vaults/#certificates \"Direct link to Certificates\")\nWhen a certificate is created in an Azure Key Vault, secret and key [are created implicitly](https://docs.microsoft.com/en-us/azure/aks/csi-secrets-store-driver#obtain-certificates-and-keys) with the same names:\nObject| Return value| Returns entire certificate chain  \n---|---|---  \n`key`| The public key, in Privacy Enhanced Mail (PEM) format| N/A  \n`cert`| The certificate, in PEM format| No  \n`secret`| The private key and certificate, in PEM format| Yes  \nUse `alias` property to get all these three items in Radix application component. Example to use certificate and its keys `cert1` as three files in the component replicas:\n  * Create a certificate in an Azure Key Vault, `cert1` in this example.\n  * Key and secret with the same names are implicitly created in this Key Vault, but not shown in the Azure Key Vault.\n  * Refer to them in the `radixconfig.yaml` `azureKeyVaults.items` with the same `name`, but with different `alias`.\n  * The `envVar` property should be omitted if environment variables for these values are not needed.\n\n\n```\nsecretRefs:azureKeyVaults:-name: radix-app-secretspath: /mnt/secretsitems:-name: secret1   #regular Azure Key Vault secret - available in the container as an environment variable SECRET1 and as a file /mnt/secrets/secret1envVar: SECRET1-name: cert1    #The certificate, manually generated in Azure Key Vault - no environment variable (as envVar is not set), only as a file /mnt/secrets/cert1.crttype: certalias:\"cert1.crt\"-name: cert1    #The public key, automatically generated in Azure Key Vault - no environment variable (as envVar is not set), only as a file /mnt/secrets/cert1.pemtype: keyalias:\"cert1.pem\"-name: cert1    #The private key and certificate, automatically generated in Azure Key Vault - no environment variable (as envVar is not set), only as a file /mnt/secrets/cert1.keytype: secretalias:\"cert1.key\"\n```\n\nFiles in the component replica\n```\n/mnt/secrets $ lscert1.crt   cert1.key   cert1.pem secret1\n```\n\n## Autorotation of secrets[​](https://radix.equinor.com/guides/azure-key-vaults/#autorotation-of-secrets \"Direct link to Autorotation of secrets\")\nRadix cluster supports Azure Key Vault autorotation. Kubernetes secrets, containing Azure Key Vault secrets, keys and certificates, used in Radix component containers are updated every 2 minutes with new versions of these values if new versions exist.\ntip\nRecommendation of using Azure Key Vault secrets in Kubernetes replicas [in Microsoft documentation](https://docs.microsoft.com/en-us/azure/aks/csi-secrets-store-driver#enable-and-disable-autorotation):\n_When a secret is updated in an external secrets store after initial pod deployment, the", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-33bae0934ab5a94adb0601fb921119e5", "__created_at__": 1748191392.2717485, "content": "Azure Key Vault autorotation. Kubernetes secrets, containing Azure Key Vault secrets, keys and certificates, used in Radix component containers are updated every 2 minutes with new versions of these values if new versions exist.\ntip\nRecommendation of using Azure Key Vault secrets in Kubernetes replicas [in Microsoft documentation](https://docs.microsoft.com/en-us/azure/aks/csi-secrets-store-driver#enable-and-disable-autorotation):\n_When a secret is updated in an external secrets store after initial pod deployment, the Kubernetes Secret and the pod mount will be periodically updated depending on how the application consumes the secret data._\n  * _**Mount the Kubernetes Secret as a volume** : Use the auto rotation and Sync K8s secrets features of Secrets Store CSI Driver. The application will need to watch for changes from the mounted Kubernetes Secret volume. When the Kubernetes Secret is updated by the CSI Driver, the corresponding volume contents are automatically updated._\n  * _**Application reads the data from the container’s filesystem** : Use the rotation feature of Secrets Store CSI Driver. The application will need to watch for the file change from the volume mounted by the CSI driver._\n  * _**Use the Kubernetes Secret for an environment variable** : Restart the pod to get the latest secret as an environment variable. Use a tool such as Reloader to watch for changes on the synced Kubernetes Secret and perform rolling upgrades on pods._\n\n\nFollow the secret versions in the [popup dialogue](https://radix.equinor.com/guides/azure-key-vaults/#azure-key-vault-secret-certificate-and-key-versions) and notifications about rotated secret in the events list: ![Azure Key Vault secret rotation event](https://radix.equinor.com/assets/images/azure-key-vault-secret-rotation-event-e3da6a50f446a712d7911f5e1f03d633.png)\n[PreviousAzure Workload Identity](https://radix.equinor.com/guides/workload-identity/)[NextDNS Alias and certificate](https://radix.equinor.com/guides/external-alias/)\n  * [Configuration](https://radix.equinor.com/guides/azure-key-vaults/#configuration)\n  * [Authentication](https://radix.equinor.com/guides/azure-key-vaults/#authentication)\n    * [Authentication with Azure Service Principal Client ID and Client Secret](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-service-principal-client-id-and-client-secret)\n    * [Authentication with Azure Workload Identity](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-workload-identity)\n  * [Azure Key Vault secret, certificate and key versions](https://radix.equinor.com/guides/azure-key-vaults/#azure-key-vault-secret-certificate-and-key-versions)\n  * [Certificates](https://radix.equinor.com/guides/azure-key-vaults/#certificates)\n  * [Autorotation of secrets](https://radix.equinor.com/guides/azure-key-vaults/#autorotation-of-secrets)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/workflows/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Workflows\n\n\nOn this page\n# Workflows\nHow should you set up Git branches and Radix environments?\nIn Radix, our development workflow can be modelled to match our needs. It is possible to use, for instance [Git Flow](https://nvie.com/posts/a-successful-git-branching-model/) or [Trunk-based development](https://paulhammant.com/2013/04/05/what-is-trunk-based-development/). Radix gives us a couple of tools to shape our workflow: **branch-environment mapping** and **deployment promotion**.\nIf we **map** a git branch to an environment, commits to that", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-0cfbe8ebe384b83696d9c44f7c0bb103", "__created_at__": 1748191392.2717485, "content": ". It is possible to use, for instance [Git Flow](https://nvie.com/posts/a-successful-git-branching-model/) or [Trunk-based development](https://paulhammant.com/2013/04/05/what-is-trunk-based-development/). Radix gives us a couple of tools to shape our workflow: **branch-environment mapping** and **deployment promotion**.\nIf we **map** a git branch to an environment, commits to that branch will trigger a build and deployment to the specified environment. For instance, a `dev` environment might be built and deployed from `master` branch, while a `prod` environment can be built and deployed from the `production` branch. Branches and environments that are not mapped are ignored and do not trigger automatic builds or deployments.\nA common strategy is to use [promotion](https://radix.equinor.com/guides/deployment-promotion/) to control how deployments end up in production environments.\n**Promotion** allows us to take an existing deployment in an environment, and deploy it in another. For instance, take what is currently running in the `preprod` environment and place it in `prod`. It is also possible to promote previous non-active deployment of the same environment - a \"rollback\" feature.\nIt is fine to combine these features to produce the workflow that we want. For instance, we can automatically build and deploy `master` branch to the `dev` environment, and the `release` branch to `preprod` environment. We can then manually promote the deployment in `preprod` environment to the `prod` environment.\n📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) reference.\n![Dev and QA workflow](https://radix.equinor.com/assets/images/workflow-dev-qa-953e2168fdeb9bdd4f9ac03fd1a9854c.png)\n## Branches mapped to different environments[​](https://radix.equinor.com/start/workflows/#branches-mapped-to-different-environments \"Direct link to Branches mapped to different environments\")\nLet's go over the example above in more detail. We are continuously working on `master`, and we want commits here to be automatically deployed to `dev`:\n![Dev-only workflow](https://radix.equinor.com/assets/images/workflow-dev-95e2f355836e0d129dbc83eda8e818b9.png)\nIn `radixconfig.yaml` we define this behaviour like so:\n```\nspec:environments:-name: devbuild:from: master\n```\n\nLet's create a `qa` branch, which builds and deploys to a `preprod` environment. When `master` is in a \"ready-to-test\" state, we will merge `master` to `qa`.\nHere's how `radixconfig.yaml` looks now:\n```\nspec:environments:-name: devbuild:from: master-name: preprodbuild:from: qa\n```\n\n## Promotion[​](https://radix.equinor.com/start/workflows/#promotion \"Direct link to Promotion\")\nFinally, building on the previous example, if `preprod` is working fine, we can then manually **promote** the deployment to the `prod` environment:\n![Dev, QA, and prod workflow](https://radix.equinor.com/assets/images/workflow-dev-qa-prod-8fdf393064013dcf0d2d7401edcc1cb1.png)\nThis is our final workflow configuration in `radixconfig.yaml` (note that `prod` is not mapped — we will promote deployments manually via the Radix Web Console):\n```\nspec:environments:-name: devbuild:from: master-name: preprodbuild:from: qa-name: prod\n```\n\n## Multiple branches to one environment[​](https://radix.equinor.com/start/workflows/#multiple-branches-to-one-environment \"Direct link to Multiple branches to one environment\")\nThere is also an ability in Radix to map many branches to one environment. I.e. you could map feature/* branches to one feature environment. This is particularly useful for developers needing to pre-test their features in an environment as close to production as possible. Team needs to take care on who can use this environment at one point in time. Example of this mapping:\n```\nspec:environments:-name: featurebuild:from: feature/*-name: releasebuild:from: release/*-name: hotfixbuild:from: hotfix/**/*-name: preprodbuild:from: master-name: prod\n```\n\n[PreviousRegistering your application](https://radix.equinor.com/start/registering-app/)[NextRadix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Branches mapped to different environments](https://radix.equinor.com/start/workflows/#branches-mapped-to-different-environments)\n  * [Promotion](https://radix.equinor.com/start/workflows/#promotion)\n  * [Multiple branches to one environment](https://radix.equinor.com/start/workflows/#multiple-branches-to-one-environment)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/volume-mounts/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.e", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-788d12c77561518934f418e6185d64e1", "__created_at__": 1748191392.2717485, "content": "](https://radix.equinor.com/guides/volume-mounts/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/volume-mounts/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/volume-mounts/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/volume-mounts/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/volume-mounts/)\n  * [Jobs](https://radix.equinor.com/guides/volume-mounts/)\n  * [Volume Mounts](https://radix.equinor.com/guides/volume-mounts/)\n    * [Azure Storage Account](https://radix.equinor.com/guides/volume-mounts/)\n    * [Limitations / Known Issues](https://radix.equinor.com/guides/volume-mounts/limitations)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/volume-mounts/)\n  * [GitHub](https://radix.equinor.com/guides/volume-mounts/)\n\n\n  * [](https://radix.equinor.com/)\n  * Volume Mounts\n  * Azure Storage Account\n\n\nOn this page\n# Azure Storage Account\nRadix supports mounting [Azure storage account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview) blob containers with the [`blobFuse2`](https://radix.equinor.com/radix-config/#blobfuse2) volume type in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/), using the [blob-csi-driver](https://github.com/kubernetes-sigs/blob-csi-driver/).\n## General Settings[​](https://radix.equinor.com/guides/volume-mounts/#general-settings \"Direct link to General Settings\")\nThe only required settings in a `blobFuse2` configuration are `container` and `useAdsl`.\n`container` defines the name of the container in the Azure storage account to be mounted into the directory defined in `path`. `useAdls` is a flag that defines if the storage account is [hierarchical namespace](https://learn.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-namespace) enabled or not.\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:container: imagesuseAdls:true\n```\n\nWith this minimal configuration, the **images** container is mounted **read only** into **/mnt/files** , using [access keys](https://radix.equinor.com/guides/volume-mounts/#access-keys) as the authentication method, and [Block](https://radix.equinor.com/guides/volume-mounts/#block-cache) as `cacheMode`. The two screenshots below shows where to find container names and if hierarchical namespace is enabled or disabled.\nContainer names: ![Azure storage account container name](https://radix.equinor.com/assets/images/azure-storage-account-container-f29929ba5ed7815fa9b83bf9ebdf64c9.png)\nHierarchical Namespace: ![Azure storage account hierarcical namespace](https://radix.equinor.com/assets/images/hns-enabled-storage-account-67a0dc95eb38e172307f2002b7284e8f.png)\n`accessMode` defines if the volume is mounted in **read-only** (default) or **read-write** mode. Valid values are:\n  * `ReadOnlyMany` (default) - Volume is mounted read-only.\n  * `ReadWriteMany` - Volume is mounted with read-write access. Warning: This option can lead to data corruption if multiple replicas write to the same file. Read [this](https://radix.equinor.com/guides/volume-mounts/limitations) for more information.\n\n\n`uid` and `gid` defines the owning user and group for", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-ec06ffcfc4e641349401b4874a6eb13d", "__created_at__": 1748191392.2717485, "content": "-write** mode. Valid values are:\n  * `ReadOnlyMany` (default) - Volume is mounted read-only.\n  * `ReadWriteMany` - Volume is mounted with read-write access. Warning: This option can lead to data corruption if multiple replicas write to the same file. Read [this](https://radix.equinor.com/guides/volume-mounts/limitations) for more information.\n\n\n`uid` and `gid` defines the owning user and group for the files and directories in the mounted volume. It is optional to configure these settings, as the current version of the driver does not honor user and group ownership.\n## Authentication[​](https://radix.equinor.com/guides/volume-mounts/#authentication \"Direct link to Authentication\")\nThe **blob-csi-driver** uses access key credentials when accessing the Azure storage account. The access key can be set manually in [Radix Web Console](https://console.radix.equinor.com/), or it can be read by the driver from the Azure storage account using [Azure workload identity](https://www.radix.equinor.com/guides/workload-identity/#configure-workload-identity-in-radix) if `useAzureIdentity` is set to `true`.\n### Access Keys[​](https://radix.equinor.com/guides/volume-mounts/#access-keys \"Direct link to Access Keys\")\nWhen `useAzureIdentity` is omitted or set to `false`, the access key and the name of the Azure storage account must be set manually, either on the component/job page in Radix Web Console, or with [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/). Component replicas will be in **Pending** state until both secrets are set.\n![Set account name and key](https://radix.equinor.com/assets/images/set-account-key-and-name-617511af06fcbd2646213557b5a1983e.png)\nValues for these secrets is located in **Access keys** on the Azure storage account.\n![Get account name and key](https://radix.equinor.com/assets/images/azure-storage-account-name-and-key-61ede60e446193bcf623dfc56466bb89.png)\nThe name of the Azure storage account can also be defined in the `storageAccount` field in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/), in which only the access key must be set i Radix Web Console.\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:container: imagesuseAdls:truestorageAccount: mystorageaccount # replace with real storage account name\n```\n\n![Set account name only](https://radix.equinor.com/assets/images/set-account-key-only-bd781f9554296a7835ddec1704bb159d.png)\n### Azure Workload Identity[​](https://radix.equinor.com/guides/volume-mounts/#azure-workload-identity \"Direct link to Azure Workload Identity\")\nWhen `useAzureIdentity` is set to `true`, the driver will connect to the Azure storage account using the [Azure Workload Identity](https://radix.equinor.com/guides/workload-identity/#configure-workload-identity-in-radix) configured for the compopnent or job, to acquire an access key to use when accessing data in a blob container.\nIn order for the driver to successfully acquire an access key, the service principal configured in [`identity.azure.clientId`](https://radix.equinor.com/radix-config/#identity-2) must be granted the [**Microsoft.Storage/storageAccounts/listkeys/action**](https://learn.microsoft.com/en-us/azure/storage/blobs/authorize-data-operations-portal#use-the-account-access-key) permission on the Azure storage account.\nThe following `blobFuse2` settings are required, and is used by the driver when acquiring the access key.\n  * `storageAccount` - Name of the Azure storage account.\n  * `resourceGroup` - Name of the resource group for the storage account.\n  * `subscriptionId` - ID of the subscription for the storage account.\n\n\nExample configuration:\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:container: imagesuseAdls:truestorageAccount: mystorageaccount # replace with real storage account nameresourceGroup: myresourcegroup # replace with real resource group namesubscriptionId: ffffffff-ffff-ffff-ffff-ffffffffffff # replace with real subscription ID\n```\n\n## Cache Modes[​](https://radix.equinor.com/guides/volume-mounts/#cache-modes \"Direct link to Cache Modes\")\nCaching improves subsequent access times, and can reduce ingress and egress traffic to the Azure storage account, which in turn can lower cost related to data transfer.\n`cacheMode` defines how data should be cached:\n  * `Block` (default) - Improve performance for operations on large files by reading/writing blocks instead of entire files.\n  * `File` - Cache entire files for improved subsequent access.\n  * `DirectIO` - Disables caching.\n\n\n### Block Cache[​](https://radix.equinor.com/guides/volume-mounts/#block-cache \"Direct link to Block Cache\")\nWith block cache, the driver reads and writes fixed size blocks of data, defined by `blockSize` (default 4MB), instead of the entire files. Blocks are cached by the driver in a memory pool, defined by `poolSize` (default 48MB), and in the OS kernel cache, on the node where the replica is running", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-58e801f7e8a61dd62e1f876b87800a51", "__created_at__": 1748191392.2717485, "content": "[​](https://radix.equinor.com/guides/volume-mounts/#block-cache \"Direct link to Block Cache\")\nWith block cache, the driver reads and writes fixed size blocks of data, defined by `blockSize` (default 4MB), instead of the entire files. Blocks are cached by the driver in a memory pool, defined by `poolSize` (default 48MB), and in the OS kernel cache, on the node where the replica is running. The driver will also prefetch consecutive blocks, defined by `prefetchCount` (default 11), from the current position of the file. `prefetchOnOpen` defines if prefetching should start when the file is opened, or wait for the first read. Data operations are performed in parallel, defined by `parallelism` (8 threads by default).\nWhen a file is opened and cached data exist, the driver will check if the source file has changed by comparing file attributes (Size, Modified) for the cached data, with the current attributes (see [Attribute Cache](https://radix.equinor.com/guides/volume-mounts/#attribute-cache)) of the source file. If a change is detected, the driver will evict the cached data and fetch up-to-date data from the Azure storage account.\nThe driver also supports using disk a cache for data blocks. This cache has its own timeout defined by `diskTimeout`. Disk caching is disabled by default, and must be enabled by setting `diskSize` (in MB) to the desired disk cache size.\nThe following settings are available to fine-tune block cache:\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:container: imagescacheMode: BlockblockCache:blockSize:4# Size in MBpoolSize:48# Size in MBprefetchCount:11prefetchOnOpen:falseparallelism:8diskSize:0# Size in MBdiskTimeout:120# Seconds\n```\n\n`blockSize` defines the size of a block to be downloaded as a unit from the Azure storage account. Increasing this value can improved the transfer rate when reading large files.\nThe following table shows the transfer rate when reading a 3GB file using different values for `blockSize`:\nBlock Size| Transfer Rate  \n---|---  \n4| 220 MB/s  \n8| 350 MB/s  \n16| 440 MB/s  \n`poolSize` defines the total size of the memory pool that the driver will use for caching data blocks. The default value is set to `blockSize` + `prefetchCount` * `blockSize`, which is the minimum allowed value. If set to a lower value, Radix will automatically adjust it at runtime.\n`prefetchCount` defines how many blocks the driver will prefetch at max when sequential reads are in progress. Prefetching can be disabled by setting the value to `0`. Otherwise the value must be `11` (default) or higher. When only small parts of a large file needs to be read, it can be beneficial to disable prefetching to reduced network traffic from the Azure storage account.\nDisk caching, enabled when `diskSize` is set to a non-zero value, is used by the driver to store data blocks as files on disk. The driver will check the disk cache for data blocks when reading from a file, and the requested data is found neither in the memory pool nor in the kernel cache. `diskTimeout` defines how long unused disk cache entries is stored on disk before being evicted.\n### File Cache[​](https://radix.equinor.com/guides/volume-mounts/#file-cache \"Direct link to File Cache\")\nWith file cache, the driver downloads and caches the entire file when it is opened. The cached file remains in cache for a duration defined by `timeout` (default 120 seconds).\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:container: imagesfileCache:timeout:120# Default value\n```\n\n### Direct IO[​](https://radix.equinor.com/guides/volume-mounts/#direct-io \"Direct link to Direct IO\")\n`DirectIO` disables caching on driver and kernel level. All operations are sent directly to the storage account.\n## Attribute Cache[​](https://radix.equinor.com/guides/volume-mounts/#attribute-cache \"Direct link to Attribute Cache\")\nThe attribute cache defines how long file attributes (Size, Modified) are cached by the driver. Caching is disabled by default, but can be enabled by setting `timeout` to a non-zero value.\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:container: imagesattributeCache:timeout:0# Disabled by default\n```\n\n## Deprecated Options[​](https://radix.equinor.com/guides/volume-mounts/#deprecated-options \"Direct link to Deprecated Options\")\nThe `streaming` section in `blobFuse2` is deprecated in favor of `cacheMode`. To prevent breaking changes to existing configurations, Radix will implicitly use [File](https://radix.equinor.com/guides/volume-mounts/#file-cache) as `cacheMode` when `streaming.enabled` is set to `false`, and [Block](https://radix.equinor.com/guides/volume-mounts/#block-cache) when `streaming.enabled` is set to `true`. The `streaming` section is ignored when `cacheMode` is set.\n`streaming` will be removed in a future release, and it is therefore recommended to migrate to use `cacheMode` instead.\nReplace implicit **File** cache:\n```\nvolumeMounts:-name: myimagespath", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5e9de0062e159e22336c829310237ba6", "__created_at__": 1748191392.2717485, "content": "`false`, and [Block](https://radix.equinor.com/guides/volume-mounts/#block-cache) when `streaming.enabled` is set to `true`. The `streaming` section is ignored when `cacheMode` is set.\n`streaming` will be removed in a future release, and it is therefore recommended to migrate to use `cacheMode` instead.\nReplace implicit **File** cache:\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:   <...>streaming:enabled:false\n```\n\nwith:\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:   <...>cacheMode: File\n```\n\nReplace implicit **Block** cache:\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:   <...>streaming:enabled:true\n```\n\nwith:\n```\nvolumeMounts:-name: myimagespath: /mnt/filesblobFuse2:   <...>cacheMode: Block\n```\n\n[PreviousOpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)[NextLimitations / Known Issues](https://radix.equinor.com/guides/volume-mounts/limitations)\n  * [General Settings](https://radix.equinor.com/guides/volume-mounts/#general-settings)\n  * [Authentication](https://radix.equinor.com/guides/volume-mounts/#authentication)\n    * [Access Keys](https://radix.equinor.com/guides/volume-mounts/#access-keys)\n    * [Azure Workload Identity](https://radix.equinor.com/guides/volume-mounts/#azure-workload-identity)\n  * [Cache Modes](https://radix.equinor.com/guides/volume-mounts/#cache-modes)\n    * [Block Cache](https://radix.equinor.com/guides/volume-mounts/#block-cache)\n    * [File Cache](https://radix.equinor.com/guides/volume-mounts/#file-cache)\n    * [Direct IO](https://radix.equinor.com/guides/volume-mounts/#direct-io)\n  * [Attribute Cache](https://radix.equinor.com/guides/volume-mounts/#attribute-cache)\n  * [Deprecated Options](https://radix.equinor.com/guides/volume-mounts/#deprecated-options)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/requirements/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Requirements\n\n\nOn this page\n# Requirements\nThere aren't many requirements: Radix runs applications written in Python, Java, .NET, JavaScript, or [LOLCODE](https://en.wikipedia.org/wiki/LOLCODE) equally well. If it can be built and deployed as Docker containers, we are nearly ready. If not, it's not hard to \"dockerise\" most applications.\nBuilds\nBuilds in Radix are Docker builds! The [Docker builds](https://radix.equinor.com/guides/docker/) guide has recommendations for creating good `Dockerfile`(s) that work well in the cloud ☁️\nAn in-depth understanding of Docker is not a requirement, but it helps to be familiar with the concepts of containers and images. There are many beginner tutorials online; here's one of the most straightforward: [Getting Started with Docker](https://scotch.io/tutorials/getting-started-with-docker).\nIt is also expected that you have a [basic understanding of Git](http://rogerdudler.github.io/git-guide/) (branching, merging) and some networking (ports, domain names).\n## Repository[​](https://radix.equinor.com/start/requirements/#repository \"Direct link to Repository\")\nA Git", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-616f7033d0ab58c8d2c7a6fa3db0f84d", "__created_at__": 1748191392.2717485, "content": "are many beginner tutorials online; here's one of the most straightforward: [Getting Started with Docker](https://scotch.io/tutorials/getting-started-with-docker).\nIt is also expected that you have a [basic understanding of Git](http://rogerdudler.github.io/git-guide/) (branching, merging) and some networking (ports, domain names).\n## Repository[​](https://radix.equinor.com/start/requirements/#repository \"Direct link to Repository\")\nA GitHub repository for our code is required (only GitHub is supported at the moment). However other repositories can be used to build images, which can be used in a deploy only workflow in Radix.\n## Radix config file (radixconfig.yaml)[​](https://radix.equinor.com/start/requirements/#radix-config-file-radixconfigyaml \"Direct link to Radix config file \\(radixconfig.yaml\\)\")\nA `radixconfig.yaml` file that defines the running environments. By default, it is in the root directory of our repository and in the branch we set as our `Config Branch` when we register our application in Radix. Usually we set it to _main_ or _master_ , but you can use any branch in your repository.\nSee the 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) documentation.\n[PreviousGetting access](https://radix.equinor.com/start/getting-access/)[NextConfiguring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Repository](https://radix.equinor.com/start/requirements/#repository)\n  * [Radix config file (radixconfig.yaml)](https://radix.equinor.com/start/requirements/#radix-config-file-radixconfigyaml)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/example-monorepo-for-multiple-applications-with-same-repository/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of multiple Radix applications with the source in the same GitHub repository\nA multiple Radix applications can have source code the same GitHub repository. Their components can use different or common sub-folders. `Dockerfile`-s of these components also need to be in their sub-folders.\nExample:\n#### GitHub repository with applications, which can use common sources[​](https://radix.equinor.com/guides/build-and-deploy/example-monorepo-for-multiple-applications-with-same-repository/#github-repository-with-applications-which-can-use-common-sources \"Direct link to GitHub repository with applications, which can use common sources\")\nIn this example two application use common `proxy` and `cache` components\n```\n/├── frontend-app1/│  ├── app.js│  └── Dockerfile├── frontend-app2/│  ├── app.js│  └── Dockerfile├── backend/│  ├── server.js│  └── Dockerfile├── common/│  ├── proxy/│  │  ├── proxy.js│  │  └── Dockerfile│  └── cache/│    ├── cache.js│    └── Dockerfile├── Dockerfile.app1├── Dockerfile.app2├── radixconfig-app1.yaml└── radixconfig-app2.yaml\n```\n\n#### radixconfig-app1.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-monorepo-for-multiple-applications-with-same-repository/#radixconfig-app1yaml \"Direct link to radixconfig-app1.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app1spec:environments:-name: devbuild:from: maincomponents:-name: web-appsrc: ./frontend-app1ports:-name: httpport:8080publicPort: http-name: apisrc: ./backendports:-name: httpport:8080-name: proxysrc: ./proxyports:-name: httpport:8000-name: cachesrc: ./cacheports:-name: httpport:8001\n```\n\n#### radixconfig-app2.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-monorepo-for-multiple-applications-with-same-repository/#radixconfig-app2yaml \"Direct link to radixconfig-app2.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app2spec:environments:-name: devbuild:from: maincomponents:-name: web-appsrc: ./frontend-app2ports:-name: httpport:8080publicPort: http-name: apisrc: ./backendports:-name: httpport:8080-name: proxysrc: ./proxyports:-name: httpport:8000-name: cachesrc: ./cacheports:-name: httpport:8001\n```\n\nSource code of applications can be located in own sub-folders. If docker files are", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-12ca10a25ec9457cd53bf2dd8c093068", "__created_at__": 1748191392.2717485, "content": "build:from: maincomponents:-name: web-appsrc: ./frontend-app2ports:-name: httpport:8080publicPort: http-name: apisrc: ./backendports:-name: httpport:8080-name: proxysrc: ./proxyports:-name: httpport:8000-name: cachesrc: ./cacheports:-name: httpport:8001\n```\n\nSource code of applications can be located in own sub-folders. If docker files are also located in these folders, then they cannot share common sources, because docker file cannot refer to folders on the higher folder hierarchy level.\n#### GitHub repository with applications, located in their own sub-folders[​](https://radix.equinor.com/guides/build-and-deploy/example-monorepo-for-multiple-applications-with-same-repository/#github-repository-with-applications-located-in-their-own-sub-folders \"Direct link to GitHub repository with applications, located in their own sub-folders\")\n```\n/├── docs/├── source/│  ├── app1/│  │  ├── frontend/│  │  │  ├── app.js│  │  │  └── Dockerfile│  │  └── backend/│  │    ├── server.js│  │    └── Dockerfile│  └── app2/│    ├── frontend/│    │  ├── app.js│    │  └── Dockerfile│    └── backend/│      ├── server.js│      └── Dockerfile├── radixconfig-app1.yaml└── radixconfig-app2.yaml\n```\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/registering-app/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Registering your application\n\n\n# Registering your application\nWe are now ready to register our application using the Web Console. Load the console for the [Radix cluster](https://radix.equinor.com/start/radix-clusters) that you want to use. Click \"Create new app\" in the top right of the page and follow the instructions there to integrate the GitHub repository with Radix.\nRemember that we can always change the 📖 [`radixconfig.yaml`](https://radix.equinor.com/radix-config/) file and the `Dockerfile`(s) after registration to change how the application builds and deploys.\nHere is an example of how a new application registration could look like\n![CreateApplication](https://radix.equinor.com/assets/images/create-application-f63a643b3d6c6852f91aaf124c63dda9.png)\ntip\nThe **Configuration Item** and **Administrators** fields are optional in the Playground cluster.\n[PreviousConfiguring your application](https://radix.equinor.com/start/config-your-app/)[NextWorkflows](https://radix.equinor.com/start/workflows/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-subfolder/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of single component application with the source", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-62c38778386e269284f626577a5832e1", "__created_at__": 1748191392.2717485, "content": "quinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of single component application with the source in the sub-folder\nA single component application can have source code in the sub-folder of the GitHub repository. The `Dockerfile` also need to be in this sub-folder.\nExample:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-subfolder/#github-repository \"Direct link to GitHub repository\")\n```\n/├── app/│  ├── server.js│  └── Dockerfile└── radixconfig.yaml\n```\n\n#### Dockerfile[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-subfolder/#dockerfile \"Direct link to Dockerfile\")\n```\nFROM node:alpineWORKDIR /appCOPY . .USER 1000CMD [\"node\", \"server.js\"]\n```\n\n#### radixconfig.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-subfolder/#radixconfigyaml \"Direct link to radixconfig.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app-123spec:environments:-name: devbuild:from: maincomponents:-name: websrc: ./appports:-name: httpport:8080publicPort: http\n```\n\nThe path `./app` in the `src` refers to the sub-folder `app` of the repository. Equivalent can be `src: app`.\nSource folder of the component can be deeper in the folder hierarchy. `Dockerfile` need to be in this folder, defined in the `src`.\nExample for `src: source/app` or `src: ./source/app`:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-subfolder/#github-repository-1 \"Direct link to GitHub repository\")\n```\n/├── source/│  └──app/│   ├── server.js│   └── Dockerfile└── radixconfig.yaml\n```\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/radix-concepts/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Radix concepts\n\n\nOn this page\n# Radix concepts\n## Application[​](https://radix.equinor.com/start/radix-concepts/#application \"Direct link to Application\")\nApplications are the highest level of objects that can be created in Radix — all other objects are contained within them.\n![Diagram of application main concepts](https://radix.equinor.com/assets/images/application-overview-af6be61beaff226ed3d662b13d7a5d3c.png)\nAn application declares all its [components](https://radix.equinor.com/start/radix-concepts/#component); this allows for them to be deployed and managed together within [environments](https://radix.equinor.com/start/radix-concepts/#environment). For instance, `front-end` and `back-end` components would in principle be part of the same application.\nThe components of an application don't need to share aspects like coding language, runtime, or system resources — they are just running processes. But within an application, components should in principle relate closely by communicating with each other.\nThe basic configuration for an application (the _application registration_) is composed of a **name** , the URL of a **GitHub", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-584a040a39e0f8314504ebb9f88e8bce", "__created_at__": 1748191392.2717485, "content": "adix-concepts/#environment). For instance, `front-end` and `back-end` components would in principle be part of the same application.\nThe components of an application don't need to share aspects like coding language, runtime, or system resources — they are just running processes. But within an application, components should in principle relate closely by communicating with each other.\nThe basic configuration for an application (the _application registration_) is composed of a **name** , the URL of a **GitHub repository** , and **access control** configuration (i.e. which Active Directory groups can administer the application in Radix). The remainder of the configuration is provided by the [`radixconfig.yaml`](https://radix.equinor.com/radix-config/).\n## Environment[​](https://radix.equinor.com/start/radix-concepts/#environment \"Direct link to Environment\")\nAn environment is an isolated area where all of an application's [components](https://radix.equinor.com/start/radix-concepts/#component) run. It is meant to compartmentalise an instance of the application, and can be used to provide that instance to users.\nA typical setup is to create two environments, `development` and `production` — the former can be used for testing and showcasing features under development, and the latter is the \"live\" application that users rely on. Any (reasonable) number of environments is allowed in Radix; you can use these in a way that best fits your development and deployment [workflow](https://radix.equinor.com/start/workflows/).\nWithin an environment, components should address each other over the network by using just their names, instead of IP addresses or FQDNs. For instance, if you have two components, `api` and `worker` (listening on port 3000 for HTTP calls), the API can communicate with `http://worker:3000/some-endpoint`.\ntip\nIf you ❤️ Kubernetes, you'll be happy to know that Radix environments are actually just [K8s namespaces](https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/).\nEnvironments are targets for [deployments](https://radix.equinor.com/start/radix-concepts/#deployment); at any time an environment will contain at most one _active deployment_. When a deployment is made active, all components within the environment are shut down and new ones are started, using the images defined in the deployment.\n![Diagram of active deployment within environment](https://radix.equinor.com/assets/images/environment-deployment-80d89f1ba8bb7c47947fe6c24db7f3ce.png)\nEnvironments (not deployments) also define any [secrets](https://radix.equinor.com/start/radix-concepts/#secret) that are required by the running components. Those secrets are kept in the environment when the active deployment is changed, and applied to the new components.\n## Component[​](https://radix.equinor.com/start/radix-concepts/#component \"Direct link to Component\")\nA component represents a standalone process running within an [environment](https://radix.equinor.com/start/radix-concepts/#environment) in a Radix application. Components are defined in the [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#components), but they are only instantiated by [deployments](https://radix.equinor.com/start/radix-concepts/#deployment), which specify the Docker image to use. A component can have one or more running [replicas](https://radix.equinor.com/start/radix-concepts/#replica), depending on its configuration.\ntip\nFamiliar with Docker or containers? A Radix component can be thought of as Docker image, and replicas as containers running that image.\nIf a component's [`publicPort`](https://radix.equinor.com/radix-config/#publicport) is defined, [endpoints](https://radix.equinor.com/docs/topic-domain-names/) are made available on the public Internet for each environment the component is deployed to. This allows connections via HTTPS into Radix, which are routed internally to an HTTP endpoint on the component.\nComponents can further be configured independently on each environment. Besides [environment variables](https://radix.equinor.com/start/radix-concepts/#environment-variable) and [secrets](https://radix.equinor.com/start/radix-concepts/#secret), a component can have different resource usage and monitoring settings.\n## Job[​](https://radix.equinor.com/start/radix-concepts/#job \"Direct link to Job\")\nA [job](https://radix.equinor.com/guides/jobs/) represents an on-demand and short lived container/process, running within an [environment](https://radix.equinor.com/start/radix-concepts/#environment), that performs a set of tasks and exits when it is done. Jobs are defined in the [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#jobs). They share the same configuration as a component with a few exceptions; a job does not have publicPort, ingressConfiguration, replicas, horizontalScaling and alwaysPullImageOnDeploy. A job has two extra configuration options: [`schedulerPort`](https://radix.equinor.com/radix-config/#schedulerport) (required), which is the port the [job-scheduler](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) will listen to, and [`payload`](https://radix.equinor.com/radix-config/#payload) (optional), which is a directory in the container where the payload, sent via", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-4309e3f3cd6bc7033f1cef15620d1f4d", "__created_at__": 1748191392.2717485, "content": "Deploy. A job has two extra configuration options: [`schedulerPort`](https://radix.equinor.com/radix-config/#schedulerport) (required), which is the port the [job-scheduler](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) will listen to, and [`payload`](https://radix.equinor.com/radix-config/#payload) (optional), which is a directory in the container where the payload, sent via the job-scheduler, is mounted.\nRadix creates a [job-scheduler](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) service for each job defined in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#jobs). The job-scheduler is a web API that you use to create, delete and monitor containers from the Docker image built or defined for the job. HTTP requests to the job-scheduler can only be sent by components running in the same application and environment.\nWhen creating a new job, a payload with arbitrary arguments can be specified in the body of the HTTP request to the job-scheduler. The payload is a string and can therefore contain any type of data (text, json, binary) as long as you encode it as a string, e.g. base64, when sending the request to the job-scheduler, and decode it when reading it from the file in the container where the payload is mounted.\nMultiple job containers can run simultaneously. Each container is assigned a unique name that can be used to monitor the state of the job through the job-scheduler API. This name is also the internal DNS name that you can use to communicate with a specific job if it exposes any ports, e.g. a custom metrics HTTP endpoint.\n## Replica[​](https://radix.equinor.com/start/radix-concepts/#replica \"Direct link to Replica\")\nA replica is a running instance of a [component](https://radix.equinor.com/start/radix-concepts/#component). As a normal process, it can write to the standard output (`stdout`), which is made available for inspection by Radix.\nIf a replica terminates unexpectedly, a new one is started so that the component will maintain the specified number of replicas running (by default, this number is one). Each replica is started with the exact same configuration.\n## Environment variable[​](https://radix.equinor.com/start/radix-concepts/#environment-variable \"Direct link to Environment variable\")\nA component can use any number of environment variables; the values of these are specified per [environment](https://radix.equinor.com/start/radix-concepts/#environment) in the `radixconfig.yaml`.\nNote that each component has its own set of environment variables. It's quite possible (though maybe not great practice) to have two different components in the same environment using variables with the same name (e.g. `MY_ENV_VAR`), each with different values.\nIn addition to the user-defined variables, a series of variables prefixed with `RADIX_*` are made available to all components. Check the [variables section](https://radix.equinor.com/radix-config/#variables-common) of the `radixconfig.yaml` reference for details.\n## Secret[​](https://radix.equinor.com/start/radix-concepts/#secret \"Direct link to Secret\")\nSecrets are made available to components as environment variables. Unlike [environment variables](https://radix.equinor.com/start/radix-concepts/#environment-variable), secrets are defined in each [environment](https://radix.equinor.com/start/radix-concepts/#environment), and components specify the name of the secret they require (not the value). This means that the secrets remain in their environment regardless of the specific active [deployment](https://radix.equinor.com/start/radix-concepts/#deployment).\nFor each environment, a secret can be **consistent** or **missing**. A missing secret will prevent the component from starting up. To populate a secret, navigate to each environment within the Web Console, where required secrets and their state are displayed.\n## Continuous integration and deployment[​](https://radix.equinor.com/start/radix-concepts/#continuous-integration-and-deployment \"Direct link to Continuous integration and deployment\")\n### Pipeline Jobs[​](https://radix.equinor.com/start/radix-concepts/#pipeline-jobs \"Direct link to Pipeline Jobs\")\nPipeline jobs are the core of the continuous integration/deployment (CI/CD) capabilities of Radix. Pipeline jobs perform tasks, which can causes changes in an application, its environments, and components. Depending on the type of job (its [pipeline](https://radix.equinor.com/start/radix-concepts/#pipeline)), different behaviours can be expected.\nJobs consist of a series of _steps_ , run either in parallel or sequentially (this is also defined by the pipeline). Each step is a stand-alone process, and its output can be inspected.\n### Pipeline[​](https://radix.equinor.com/start/radix-concepts/#pipeline \"Direct link to Pipeline\")\nA pipeline defines a type of job. There are following types of pipeline in Radix:\n### The `build-deploy` pipeline[​](https://radix.equinor.com/start/radix-concepts/#the-build-deploy-pipeline \"Direct link to the-build-deploy-pipeline\")\nThis is triggered by a commit in GitHub to a branch mapped to an environment. In turn, this causes all components to be rebuilt and a new deployment to be created in the appropriate environment.\n![Diagram of the build-deploy pipeline](https://radix.equinor.com/assets/images/pipeline-build-deploy-f", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-4a32b70993322ce2191639925175a403", "__created_at__": 1748191392.2717485, "content": "pipeline[​](https://radix.equinor.com/start/radix-concepts/#the-build-deploy-pipeline \"Direct link to the-build-deploy-pipeline\")\nThis is triggered by a commit in GitHub to a branch mapped to an environment. In turn, this causes all components to be rebuilt and a new deployment to be created in the appropriate environment.\n![Diagram of the build-deploy pipeline](https://radix.equinor.com/assets/images/pipeline-build-deploy-fbbce57312a11a5ebdb47ce09150a531.jpg)\n### The `build` pipeline[​](https://radix.equinor.com/start/radix-concepts/#the-build-pipeline \"Direct link to the-build-pipeline\")\nExactly the same as the `build-deploy` pipeline, but a deployment is not created at the end of the build. Useful for testing the ability to build the code, run tests, etc.\n### The `promote` pipeline[​](https://radix.equinor.com/start/radix-concepts/#the-promote-pipeline \"Direct link to the-promote-pipeline\")\nUsed to duplicate an existing [deployment](https://radix.equinor.com/start/radix-concepts/#deployment) from one environment into another (or to redeploy an old deployment). You can read more about it in the [promotion guide](https://radix.equinor.com/guides/deployment-promotion/).\n### The `apply-config` pipeline[​](https://radix.equinor.com/start/radix-concepts/#the-apply-config-pipeline \"Direct link to the-apply-config-pipeline\")\nUsed to apply config without re-building or re-deploying components in environments. No Radix deployment is created. Changes in the [radixconfig.yaml](https://radix.equinor.com/radix-config/) are applied to the Radix application regarding changes in properties [environments](https://radix.equinor.com/radix-config/#environments), [build](https://radix.equinor.com/radix-config/#build), [dnsAlias](https://radix.equinor.com/radix-config/#dnsalias).\n### Cleanup of pipeline Jobs[​](https://radix.equinor.com/start/radix-concepts/#cleanup-of-pipeline-jobs \"Direct link to Cleanup of pipeline Jobs\")\nNumber of pipeline jobs may accumulate in time for a Radix application, cluttering the job list. Following rules are used to clean them up when a new pipeline job is created for a Radix application:\n  * Pipeline jobs preserved in the job history: \n    * All successful jobs for which there is a Radix deployment they created\n    * Up to 5 jobs per each environment and status type (Successful, Failed, etc.)\n  * Pipeline jobs being removed from the job history: \n    * There is no anymore a Radix deployment for a corresponding successful job\n    * A job is older than 30 days\n\n\n### Scanning images for security issues[​](https://radix.equinor.com/start/radix-concepts/#scanning-images-for-security-issues \"Direct link to Scanning images for security issues\")\nAfter a successful deployment, and on a daily schedule, component and job images are scanned for security related issues using [Snyk](https://snyk.io/). Refer to the [Vulnerability Scanning](https://radix.equinor.com/docs/topic-vulnerabilities/) documentation for more information.\n### Sub-pipeline[​](https://radix.equinor.com/start/radix-concepts/#sub-pipeline \"Direct link to Sub-pipeline\")\nAfter \"Build components\" step (if it does not exist - after \"Prepare pipeline\" step), the step \"Run sub-pipeline\" runs optional sub-pipeline, if it is configured. Sub-pipelines are based on the [Tekton CI/CD framework](https://tekton.dev/docs/getting-started/). Please read [Configure sub-pipeline](https://radix.equinor.com/guides/sub-pipeline/) guide for details about sub-pipelines.\n### Deployment[​](https://radix.equinor.com/start/radix-concepts/#deployment \"Direct link to Deployment\")\nDeployments are created by some types of [job](https://radix.equinor.com/start/radix-concepts/#job). A deployment defines the specific image used for each [component](https://radix.equinor.com/start/radix-concepts/#component) when it runs in an [environment](https://radix.equinor.com/start/radix-concepts/#environment). Deployments thus serve to aggregate specific versions of components, and make them easy to deploy together.\n[Environment variables](https://radix.equinor.com/start/radix-concepts/#environment-variable) (but not [secrets](https://radix.equinor.com/start/radix-concepts/#secret)) are also stored within a deployment.\ntip\nSee [this](https://radix.equinor.com/guides/deploy-only/) guide on how to set up your application to only use the continuous deployment (CD) on Radix\n[PreviousWhat is Radix](https://radix.equinor.com/start/)[NextGetting access](https://radix.equinor.com/start/getting-access/)\n  * [Application](https://radix.equinor.com/start/radix-concepts/#application)\n  * [Environment](https://radix.equinor.com/start/radix-concepts/#environment)\n  * [Component](https://radix.equinor.com/start/radix-concepts/#component)\n  * [Job](https://radix.equinor.com/start/radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-822a78e399d8ae2379727e193d624b17", "__created_at__": 1748191392.2717485, "content": "NextGetting access](https://radix.equinor.com/start/getting-access/)\n  * [Application](https://radix.equinor.com/start/radix-concepts/#application)\n  * [Environment](https://radix.equinor.com/start/radix-concepts/#environment)\n  * [Component](https://radix.equinor.com/start/radix-concepts/#component)\n  * [Job](https://radix.equinor.com/start/radix-concepts/#job)\n  * [Replica](https://radix.equinor.com/start/radix-concepts/#replica)\n  * [Environment variable](https://radix.equinor.com/start/radix-concepts/#environment-variable)\n  * [Secret](https://radix.equinor.com/start/radix-concepts/#secret)\n  * [Continuous integration and deployment](https://radix.equinor.com/start/radix-concepts/#continuous-integration-and-deployment)\n    * [Pipeline Jobs](https://radix.equinor.com/start/radix-concepts/#pipeline-jobs)\n    * [Pipeline](https://radix.equinor.com/start/radix-concepts/#pipeline)\n    * [The `build-deploy` pipeline](https://radix.equinor.com/start/radix-concepts/#the-build-deploy-pipeline)\n    * [The `build` pipeline](https://radix.equinor.com/start/radix-concepts/#the-build-pipeline)\n    * [The `promote` pipeline](https://radix.equinor.com/start/radix-concepts/#the-promote-pipeline)\n    * [The `apply-config` pipeline](https://radix.equinor.com/start/radix-concepts/#the-apply-config-pipeline)\n    * [Cleanup of pipeline Jobs](https://radix.equinor.com/start/radix-concepts/#cleanup-of-pipeline-jobs)\n    * [Scanning images for security issues](https://radix.equinor.com/start/radix-concepts/#scanning-images-for-security-issues)\n    * [Sub-pipeline](https://radix.equinor.com/start/radix-concepts/#sub-pipeline)\n    * [Deployment](https://radix.equinor.com/start/radix-concepts/#deployment)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/radix-clusters/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Radix clusters\n\n\n# The Radix clusters\nYour application(s) will run in a _Kubernetes cluster_. Radix currently have three clusters: **Platform (North Europe)** , **Platform 2 (West Europe)** and **Playground**. Use Playground for testing Radix and see if it's a good fit for your needs. When your project and team are happy with Radix, you should register your application to one of the **Platform** clusters, which provides [specific guarantees](https://radix.equinor.com/docs/topic-uptime/).\nCluster| Azure Region| DNS Zone| Web Console| Radix API (Swagger UI)  \n---|---|---|---|---  \n**Platform (North Europe)**|  North Europe| radix.equinor.com| [Link](https://console.radix.equinor.com)| [Link](https://api.radix.equinor.com/swaggerui/)  \n**Platform 2 (West Europe)**|  West Europe| c2.radix.equinor.com| [Link](https://console.c2.radix.equinor.com)| [Link](https://api.c2.radix.equinor.com/swaggerui/)  \n**Playground**|  North Europe| playground.radix.equinor.com| [Link](https://console.playground.radix.equinor.com)| [Link](https://api.playground.radix.equinor.com/swaggerui/)  \nMoving applications between clusters\nCurrently, there is no automated process of moving an", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b2ef8b788527e0f05e23bd988fbbfeba", "__created_at__": 1748191392.2717485, "content": ".com| [Link](https://console.c2.radix.equinor.com)| [Link](https://api.c2.radix.equinor.com/swaggerui/)  \n**Playground**|  North Europe| playground.radix.equinor.com| [Link](https://console.playground.radix.equinor.com)| [Link](https://api.playground.radix.equinor.com/swaggerui/)  \nMoving applications between clusters\nCurrently, there is no automated process of moving an application between clusters. To move an application, you must manually register it in the new cluster, run pipeline jobs to deploy the application, and reconfigure any secrets, workload identities, external DNS entries, network settings on external resources etc.\n[PreviousWorkflows](https://radix.equinor.com/start/workflows/)[NextOnboarding](https://radix.equinor.com/start/onboarding/)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/not-radix/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * When to not use Radix\n\n\nOn this page\n# When to not use Radix\n## When to not use Radix[​](https://radix.equinor.com/start/not-radix/#when-to-not-use-radix \"Direct link to When to not use Radix\")\nThere will be certain circumstances that will Radix not suitable for your applications, some of these can be\n  * On-prem or Omnia Classic connectivity is required\n  * Needs to accept public traffic other than HTTP (eg. mqtt or UDP)\n  * Need **low-latency** persistant storage (eg. databases and similar)\n  * Your application needs **root** privileges\n  * Need to have direct access to Kubernetes \n    * Need to deploy kubernetes resources using tools like Helm, Flux, Terraform, ArgoCD etc.\n    * Need to use DAPR\n    * Need to run own operators (e.g. redis operator to run Redis database in cluster)\n  * Need to use sidecars\n\n\nHowever there are workaround for many of these cases, use the Radix community to ask for guidance.\n[PreviousExamples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/#when-to-not-use-radix)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of single component application with the source in the root\nA single component application can have source code in the root of the GitHub repository. The `Dockerfile` also need to be in the root repository.\nExample:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root/#github-repository \"Direct link to GitHub repository\")\n```\n/├── server.js├── Dockerfile└── radixconfig.yaml\n```\n\n#### Dockerfile[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root/#dockerfile \"Direct link to Dockerfile\")\n```", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-48a11fe0c43fda4f859deec297838a7b", "__created_at__": 1748191392.2717485, "content": "​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root/#github-repository \"Direct link to GitHub repository\")\n```\n/├── server.js├── Dockerfile└── radixconfig.yaml\n```\n\n#### Dockerfile[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root/#dockerfile \"Direct link to Dockerfile\")\n```\nFROM node:alpineWORKDIR /appCOPY . .USER 1000CMD [\"node\", \"server.js\"]\n```\n\n#### radixconfig.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-single-component-application-with-source-in-root/#radixconfigyaml \"Direct link to radixconfig.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app-123spec:environments:-name: devbuild:from: maincomponents:-name: websrc: .ports:-name: httpport:8080publicPort: http\n```\n\nThe path `.` in the `src` refers to the root of the repository, in such case this option can be omitted.\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/start/getting-access/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [What is Radix](https://radix.equinor.com/start/)\n  * [Radix concepts](https://radix.equinor.com/start/radix-concepts/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/)\n  * [Requirements](https://radix.equinor.com/start/requirements/)\n  * [Configuring your application](https://radix.equinor.com/start/config-your-app/)\n  * [Registering your application](https://radix.equinor.com/start/registering-app/)\n  * [Workflows](https://radix.equinor.com/start/workflows/)\n  * [Radix clusters](https://radix.equinor.com/start/radix-clusters/)\n  * [Onboarding](https://radix.equinor.com/start/onboarding/)\n  * [Examples](https://radix.equinor.com/start/examples/)\n  * [When to not use Radix](https://radix.equinor.com/start/not-radix/)\n\n\n  * [](https://radix.equinor.com/)\n  * Getting access\n\n\nOn this page\n# Getting access\n## Getting access[​](https://radix.equinor.com/start/getting-access/#getting-access \"Direct link to Getting access\")\nAccess to Radix is managed in Access IT. To get started, decide if you want to try the Playground cluster or go straight to one of the Platform clusters. You will have access to register, build, deploy and maintain applications in that cluster.\n  * 🎪 **Playground cluster** : Request the role \"[Radix Playground Users](https://accessit.equinor.com/Search/Search?term=Radix+Playground+Users+%28OMNIA+RADIX%29)\"\n  * 💯 **Platform clusters** : Request the role \"[Radix Platform Users](https://accessit.equinor.com/Search/Search?term=Radix+Platform+Users+%28OMNIA+RADIX%29)\"\n\n\nWhen the request is approved, you can access the clusters using Radix Web Console, Radix API or [Radix CLI](https://radix.equinor.com/docs/topic-radix-cli/).\nYou can register your app in Playground first, and then again in Platform; there is no special \"migrate to platform\" process. If you have questions, [speak with us on Slack](https://equinor.slack.com/messages/CBKM6N2JY) and we'll help.\ntip\nRefer to [Radix clusters](https://radix.equinor.com/start/radix-clusters/) for a list of available clusters.\n[PreviousRadix concepts](https://radix.equinor.com/start/radix-concepts/)[NextRequirements](https://radix.equinor.com/start/requirements/)\n  * [Getting access](https://radix.equinor.com/start/getting-access/#getting-access)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/deploy-only/example-github-action-using-ad-service-principal-access-token/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1a89215cfa6112d553d1095ed0402963", "__created_at__": 1748191392.2717485, "content": "quinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Example of using AD service principal to get access to a Radix application in a GitHub action\nTo create a GitHub Actions you need to create a workflow file in the folder `.github/workflows`.\nSteps in the example:\n  * Install RX and authenticate: use the provided id-token (Workload Identity) and Azure Client ID to authenticate with matching federated credentials. The Federated Credentials must be configured upfront in Azure Entra for the specified Azure Client ID.\n  * \"Update build secret\" - example of using the [Radix CLI](https://github.com/equinor/radix-cli) to configure a build secret.\n  * \"Restart qa env\" - example of use the [Radix CLI](https://github.com/equinor/radix-cli), in this case to restart a Radix application components for an environment.\n  * After the workflow is finished, the Radix GitHub action will automatically execute `rx logout` to clear any Radix tokens from the workflow runner.\n\n\n```\nname: Manage Radix Appon:push:branches:[\"main\"]permissions:id-token: writejobs:set-build-secret-and-restart:runs-on: ubuntu-lateststeps:-name: Install RX and authenticateuses: equinor/radix-github-actions@v2with:azure_client_id:\"00000000-0000-0000-0000-000000000000\"# App Registration Application ID or Managed Identity Client ID-run: rx set build-secret--application your-radix-app-name --secret A_BUILD_SECRET--value P4ssW0rd--context playground-run: rx restart environment --application your-radix-app-name--environment qa--context playground\n```\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-deploy-keys/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Sub-pipeline with GitHub deploy keys\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located (by default it is a root of the repository).\n  * The sub-pipeline in this example runs one task with two steps.\n  * Create a file `test-github.yaml` for the task `test-github`. This task has two steps \"git-clone\" and a step \"list-contents\".\n\n\ntip\nMount a volume named `$(radix.git-deploy-key)` where you need you ssh credentials.\nFile `test-github.yaml`\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: test-githubspec:stepTemplate:image: alpine/gitvolumeMounts:-name: source-volumemountPath: /var/sourcesecurityContext:runAsUser:65534# nobodysteps:-name: git-clonevolumeMounts:-name: $(radix.git-deploy-key) # <-- This volume is created by Radix and available where you mount it.mountPath: /.sshcommand:- git- clone- git@github.com:Equinor-Playground/rihag-edc23-radix-1.git- /var/source/branch-name: list-contentsscript:|    #!/usr/bin/env sh    ls -la /var/source/branchvolumes:-name: source-volumeemptyDir:{}\n```\n\n  * Create a file `pipeline.yaml`. Add a task in the `tasks` list: give it a name (it can be any name, unique within this sub-pipeline), in the property `taskRef` (\"reference to a task\") put the value from the property `metadata.name` of the task, created above:\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: test-pipelinespec:tasks:-name: test-githubtaskRef:name: test-github\n```\n\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  └── test-github.yaml└── radixconfig.yaml\n```\n\n## Details:[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-deploy-keys/#details \"Direct link to Details:\")\n  * The userid `65534` is mapped to the user `nobody` in the image `alpine/git`, with the home folder set to `/`\n  * The volume referenced by `$(radix.git-deploy-key)` is", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-dc0bb0ab633b17c7c7419bb17db12d38", "__created_at__": 1748191392.2717485, "content": "└── test-github.yaml└── radixconfig.yaml\n```\n\n## Details:[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-deploy-keys/#details \"Direct link to Details:\")\n  * The userid `65534` is mapped to the user `nobody` in the image `alpine/git`, with the home folder set to `/`\n  * The volume referenced by `$(radix.git-deploy-key)` is mounted read-only and both files, `id_rsa` and `known_hosts` have permission level `444`, owned by `root:root`. \n```\ntotal 4drwxrwxrwt  3 root   root      120 Nov 16 09:06 .drwxr-sr-x  1gitgit4096 Nov 16 09:06 ..drwxr-xr-x  2 root   root      80 Nov 16 09:06 ..2023_11_16_09_06_55.2062090024lrwxrwxrwx  1 root   root      32 Nov 16 09:06 ..data ->..2023_11_16_09_06_55.2062090024lrwxrwxrwx  1 root   root      13 Nov 16 09:06 id_rsa ->..data/id_rsalrwxrwxrwx  1 root   root      18 Nov 16 09:06 known_hosts ->..data/known_hosts\n```\n\nNote that the permissions listed are wrong, and the underlaying data have limited permissions.\n\n\n  * [Details:](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-deploy-keys/#details)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of multiple components application with the source in the root\nA multiple components application can have source code in the root of the GitHub repository. `Dockerfile`-s of these components also need to be in the root, having different names.\nExample:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#github-repository \"Direct link to GitHub repository\")\n```\n/├── frontend.js├── backend.js├── Dockerfile.frontend├── Dockerfile.backend└── radixconfig.yaml\n```\n\nThe root of the repository contains files, belonging to all components. These files need to be selectively copied into the docker image by Dockerfile command `COPY`.\n#### Dockerfile.frontend for the frontend[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#dockerfilefrontend-for-the-frontend \"Direct link to Dockerfile.frontend for the frontend\")\n```\nFROM node:alpineWORKDIR /appCOPY ./frontend.js .USER 1000CMD [\"node\", \"frontend.js\"]\n```\n\nCopy only files, belonging to the frontend.\n#### Dockerfile.backend for the backend[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#dockerfilebackend-for-the-backend \"Direct link to Dockerfile.backend for the backend\")\n```\nFROM node:alpineWORKDIR /appCOPY ./backend.js .USER 1000CMD [\"node\", \"backend.js\"]\n```\n\nCopy only files, belonging to the backend.\n#### radixconfig.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#radixconfigyaml \"Direct link to radixconfig.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app-123spec:environments:-name: devbuild:from: maincomponents:-name: web-appdockerfileName: Dockerfile.frontendports:-name: httpport:8080publicPort: http-name: apidockerfileName: Dockerfile.backendports:-name: httpport:8080\n```\n\nThe `dockerfileName` of the `web-app` component refers to the docker file `Dockerfile.frontend` of the repository.\nThe `dockerfileName` of the `api` component refers to the docker file `Dockerfile.backend` of the repository.\nFor some or all components source folders can be deeper in the folder hierarchy. `Dockerfile`-s need to be in these component folders, defined in the `src`.\nExample:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#github-repository-1 \"Direct link to GitHub repository\")\n```\n/├── backend.js├── source/│  ├── frontend/│  │  ├── components/│", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e4b1b4a46402ec73bc1824c71d998890", "__created_at__": 1748191392.2717485, "content": "folder hierarchy. `Dockerfile`-s need to be in these component folders, defined in the `src`.\nExample:\n#### GitHub repository[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#github-repository-1 \"Direct link to GitHub repository\")\n```\n/├── backend.js├── source/│  ├── frontend/│  │  ├── components/│  │  ├── models/│  │  ├── app.js│  │  └── Dockerfile.frontend│  └── cache/│    ├── cache-app.js│    └── Dockerfile├── Dockerfile.backend└── radixconfig.yaml\n```\n\n#### radixconfig.yaml[​](https://radix.equinor.com/guides/build-and-deploy/example-multiple-components-application-with-source-in-root/#radixconfigyaml-1 \"Direct link to radixconfig.yaml\")\n```\nkind: RadixApplicationmetadata:name: radix-app-123spec:environments:-name: devbuild:from: maincomponents:-name: web-appsrc: ./source/frontenddockerfileName: Dockerfile.frontendports:-name: httpport:8080publicPort: http-name: apidockerfileName: Dockerfile.backendports:-name: httpport:8080-name: cachesrc: ./source/cacheports:-name: httpport:8080\n```\n\nIn the example above:\n  * only components `web-app` and `cache` have an option `src`, as their source is located in sub-folders.\n  * only components `web-app` and `api` have an option `dockerfileName`, as their docker files have names, different from the default name `Dockerfile`.\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Example of using GitHub action to create a Radix deploy pipeline job\nTo use GitHub Actions, create a workflow file under `.github/workflows`. In the sample workflow below, we will build new images for the `api` component for the `main` branch and deploy to the `prod` environment.\nMake sure your radixconfig.yaml file is in the root of your repository. The workflow will read the application name from the radixconfig.yaml file (the argument `--from-config`), or you can specify it with `--application` option.\nIt should also use the image tag name `api` for the component, but you can change it to your own component name.\nYou must also add a Github Personal Access Token to Radix Console for the GitHub Container Registry. Add it to your Application Configuration in Radix Console under Private Image Hubs.\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: YOUR-APP-NAME # Must match the registerd app in Radix Consolespec:environments:-name: prodprivateImageHubs:ghcr.io:username: YOUR-GITHUB-USERNAMEcomponents:-name: apiimage: ghcr.io/YOUR-ORG/YOUR-REPO-NAME/api:{imageTagName}imagePullSecret: latestports:-name: httpport:8000publicPort: http\n```\n\nSteps in the example:\n  * Build image tags\n  * Set up Docker Buildx\n  * Authenticate to Github Container Registry\n  * Build and push docker image\n  * Install RX and Authenticate\n  * Deploy your component on Radix\n\n\nRead more about permissions in GitHub Actions [here](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs)\n```\nname: CIon:push:branches:- mainpermissions:id-token: write # Required to authenticate with Azure Entra IDpackages: write # Required to push to GitHub Container Registrycontents: read # set required permissions (https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs)jobs:build-deploy:name: Build and Deployruns-on: ubuntu-lateststeps:-uses: actions/checkout@v4-name: Build image tagsid: metadatarun:|     sha=${GITHUB_SHA::8}     ts=$(date +%s)     tag=${GITHUB_REF_NAME}-${sha}-${ts}     repo=${GITHUB_REPOSITORY@L} # @L is bash syntax that converts REPO to lowercase     echo \"tag=${tag}\" >> $GITHUB_OUTPUT     echo \"repo=${repo}\" >> $GITHUB_OUTPUT -name: Set up Docker Buildxuses: docker/setup-buildx-action@v3# Login, build and push the image to your preffered registry-name: Log in to GitHub Container Registryuses: docker/login-action@v3with:registry: ghcr.iousername: ${{ github.actor }}password: ${{ secrets.GITHUB_TOKEN }}# Use the default GITHUB_TOKEN for", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2268c02092a4c9bc4836b65148a0aefd", "__created_at__": 1748191392.2717485, "content": "}\" >> $GITHUB_OUTPUT     echo \"repo=${repo}\" >> $GITHUB_OUTPUT -name: Set up Docker Buildxuses: docker/setup-buildx-action@v3# Login, build and push the image to your preffered registry-name: Log in to GitHub Container Registryuses: docker/login-action@v3with:registry: ghcr.iousername: ${{ github.actor }}password: ${{ secrets.GITHUB_TOKEN }}# Use the default GITHUB_TOKEN for ghcr.io-name: Build and push docker imageuses: docker/build-push-action@v6with:push:true      ghcr.io/${{ steps.metadata.outputs.repo }}:latest      ghcr.io/${{ steps.metadata.outputs.repo }}:${{ steps.metadata.outputs.tag }}# Radix# - Install rx cli and authenticate# - Create a pipeline job to deploy the application-name: Install RX and authenticateuses: equinor/radix-github-actions@v2with:azure_client_id:\"00000000-0000-0000-0000-000000000000\"# App Registration Application ID or Managed Identity Client ID-name:'Deploy API on Radix'run: rx create pipeline-job deploy--context playground--from-config # Read application name from radixconfig.yaml in the root of the repository. Or use `--application your-app-name` to specify the application name--environment prod--image-tag-name api=${{ steps.metadata.outputs.tag }}# Specify the component name and image tag--follow\n```\n\nFollowing are last steps for \"Build and deploy\" pipeline workflow (e.g. when some application components need to be built):\n```\n-name:'Deploy API on Radix'run: rx create pipeline-job deploy--context playground--from-config--environment prod--image-tag-name api=${{ steps.metadata.outputs.tag }}--follow\n```\n\nAn option `--context playground` is used if a Radix application is registered in the Playground cluster, otherwise remove this line - Platform cluster is used by default\n### Troubleshooting[​](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job/#troubleshooting \"Direct link to Troubleshooting\")\n  * Error `response status code does not match any response statuses defined for this endpoint in the swagger spec (status 403): {}` - make sure that in the Radix CLI command it is correctly specified an application name (an option `-a` or `--application`, if used), or context - cluster where the application is registered (an option `-c` or `--context`, if used)\n  * Error `Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable. Please make sure to give write permissions to id-token in the workflow.` - make sure that the permission is set: \n```\npermissions:id-token: write\n```\n\n  * Error `No matching federated identity record found for presented assertion` - make sure that the [AD Service principal access token is set](https://radix.equinor.com/guides/deploy-only/#ad-service-principal-access-token)\n\n\n  * [Troubleshooting](https://radix.equinor.com/guides/deploy-only/example-github-action-to-create-radix-deploy-pipeline-job/#troubleshooting)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/monorepo/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/monorepo/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/monorepo/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/monorepo/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/monorepo/)\n  * [Jobs](https://radix.equinor.com/guides/monorepo/)\n  * [Volume Mounts](https://radix.equinor.com/guides/monorepo/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guid", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2688d8bab068f0e469d91fc120bd7e0a", "__created_at__": 1748191392.2717485, "content": "ix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/monorepo/)\n  * [GitHub](https://radix.equinor.com/guides/monorepo/)\n    * [Git submodules](https://radix.equinor.com/guides/git-submodules/)\n    * [Monorepo](https://radix.equinor.com/guides/monorepo/)\n\n\n  * [](https://radix.equinor.com/)\n  * GitHub\n  * Monorepo\n\n\nOn this page\n# Multiple Radix applications with the same GitHub repository - monorepo strategy\nIt is possible to have multiple Radix applications, using the same GitHub repository, also known as monorepo software development strategy. These applications have to use different Radix configuration files, because the configuration file contains an application name, which should be unique within the Radix cluster.\nExample:\n  * Register an application, specifying a GitHub repository. The name of this application is defined in a Radix configuration file. This file is by default `radixconfig.yaml`, located in the repository root folder, but it can have different name and location in the repository: ![Custom config file when creating an application](https://radix.equinor.com/assets/images/custom-config-file-when-create-application-34fd643b82ce31a6bcc3204f54195254.png)\n  * Start registering a second application, specifying the same GitHub repository \n    * This second application might have different components and settings, and its name should also be different, so another Radix configuration file have to be used. Following options are available: \n      * a file with a different name\n      * a file in a sub-folder of this repository, and optionally having different name\n      * a file in another branch of this repository. It is optional, but recommended to give this configuration file a different name or keep it in different sub-folder to avoid its potential overwriting during merge from another branch. Configuration file can be defined on the application registration form, in the field `Config file` ![Radix config altered name](https://radix.equinor.com/assets/images/radixconfig-altered-name-648b926f941a14f5bf802ee14b229eff.png) or ![Radix config altered folder](https://radix.equinor.com/assets/images/radixconfig-altered-folder-95f143b18ce2995b723391b6f430686c.png)\n    * Because the same repository will be used for multiple applications, a warning is shown on creating of the application ![Warning on repository, used in another applications](https://radix.equinor.com/assets/images/register-application-with-already-used-repository-acc8f0f6b4b0d1916a1b780275337af2.png)\n    * Ticking the checkbox under warnings confirms understood consequences, like pushed changes to the repository can start Radix pipeline jobs for all applications, which use it. \ntip\n[Radix CLI](https://github.com/equinor/radix-cli) also shows this warning, when creating an application with a GitHub repository, used in another application. To confirm such operation - add an option `--acknowledge-warnings` to command line arguments\n  * When an application is registered, GitHub webhook with a secret can be added to the repository to run Radix pipeline jobs, when changes are pushed to the repository. Because each application has a unique webhook secret, the webhook URL has an argument with an application name to validate GitHub event signature with a webhook secret of this particular application. Example: \n    * Webhook URL for the application \"radix-app-1\" `https://webhook.playground.radix.equinor.com/events/github?appName=radix-app-1`\n    * Webhook URL for the application \"radix-app-2\" `https://webhook.playground.radix.equinor.com/events/github?appName=radix-app-2`\ntip\nNewly introduced webhook URL argument `appName` does not exist in webhooks of already registered applications. If repositories of such applications will be used in another applications, these existing webhook need to get this argument with their application names. Otherwise, Radix pipeline is not able to validate GitHub events from webhooks of multiple applications.\n  * When an application is registered, Radix web-console configuration page for the application shows the GitHub repository name, config branch and config file - all with actual links ![img.png](https://radix.equinor.com/assets/images/application-configuration-page-repo-info-1144aac23b6ae92ad8d84023aad965bb.png)\n\n\n## Custom Radix configuration file name[​](https://radix.equinor.com/guides/monorepo/#custom-radix-configuration-file-name \"Direct link to Custom Radix configuration file name\")\nRadix configuration file name and path can be changed on the Radix web-console configuration page for the application. This file can have extension `yaml` or `yml` (the name and extension should be exactly same as for the file in the GitHub repository), it can optionally be located in a sub-folder of the GitHub repository. In the example below - the configuration file `radix", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e0c0541f6f9eb1770bb727b3edddb5ff", "__created_at__": 1748191392.2717485, "content": "/#custom-radix-configuration-file-name \"Direct link to Custom Radix configuration file name\")\nRadix configuration file name and path can be changed on the Radix web-console configuration page for the application. This file can have extension `yaml` or `yml` (the name and extension should be exactly same as for the file in the GitHub repository), it can optionally be located in a sub-folder of the GitHub repository. In the example below - the configuration file `radixconfig-app2.yml` is located in the sub-folder `web-app2` of the repository (no leading slash is required) ![Change Radix configuration file](https://radix.equinor.com/assets/images/change-config-file-2a91d321a3d13412039ff479094a7104.png)\n  * If applications are configured to have [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline), these sub-pipelines can be different applications. To solve this requirement, Radix currently expects sub-pipeline folder `tekton` be in the same location, where the Radix configuration file is defined to be for the application.\n\n\n[PreviousGit submodules](https://radix.equinor.com/guides/git-submodules/)\n  * [Custom Radix configuration file name](https://radix.equinor.com/guides/monorepo/#custom-radix-configuration-file-name)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/radix-config/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [The radixconfig.yaml file](https://radix.equinor.com/radix-config/)\n\n\n  * [](https://radix.equinor.com/)\n  * The radixconfig.yaml file\n\n\nOn this page\n# Radix Config\nIn order for Radix to configure your application it needs a configuration file. By default, it is expected to be located in the root of the application repository, has a name `radixconfig.yaml` and be in YAML or JSON format - in either case, it must have the `.yaml` or `.yml` extension (the name and extension should be exactly same as for the file in the GitHub repository). The name of the file and its location in the repository can be different. It can also be changed later on the Radix web-console configuration page for the application. Read more in the [monorepo](https://radix.equinor.com/guides/monorepo) guide.\ntip\nRadix only reads `radixconfig.yaml` from the branch we set as the `Config Branch` in the application registration form. If the file is changed in other branches, those changes will be ignored.\nThe basic format of the file is this; the configuration keys are explained in the Reference section below:\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:...spec:...\n```\n\ntip\nYou can enable auto-completion and validation for `radixconfig.yaml` in your code editor. Read more about it [here](https://radix.equinor.com/docs/topic-code-editor-integration/).\n# Reference\n## `name`[​](https://radix.equinor.com/radix-config/#name \"Direct link to name\")\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: myappspec:\n```\n\n`name` needs to match the name given in when registering an application. Only lowercase characters are allowed. If the name supplied in the configuration contains uppercase characters, a warning will be logged and the name will be automatically converted to lowercase.\n## `build`[​](https://radix.equinor.com/radix-config/#build \"Direct link to build\")\n```\nspec:build:useBuildKit:trueuseBuildCache:truesecrets:- SECRET_1- SECRET_2variables:VAR1: val1  CONNECTION_STRING:\"Provider=MySQLProv;Data Source=mydb;\"\n```\n\nThe `build` section of the spec contains configuration used during the build process of the components and jobs.\n### `useBuildKit`[​](https://radix.equinor.com/radix-config/#usebuildkit \"Direct link to usebuildkit\")\n`useBuildKit` - (optional, default `false` for backwards compatibility) builds components and jobs using [Buildah](https://www.redhat.com/en/topics/containers/what-is-buildah). This option provides several benefits over the default Radix build engine:\n  * Secure handling of [**build secrets**](https://radix.equinor.com/guides/build-secrets/#build-secrets-with-buildkit).\n  * Caching support that can reduce build time, see [`useBuildCache`](https://radix.equinor.com/radix-config/#usebuildcache).\n  * Use images from protected container registries defined in [`privateImageHubs`](https://radix.equinor.com/radix-config/#privateimagehubs), in the Dockerfile's `FROM` instructions.", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2522ad7f85f9581514f5702c4af2db3f", "__created_at__": 1748191392.2717485, "content": "://radix.equinor.com/guides/build-secrets/#build-secrets-with-buildkit).\n  * Caching support that can reduce build time, see [`useBuildCache`](https://radix.equinor.com/radix-config/#usebuildcache).\n  * Use images from protected container registries defined in [`privateImageHubs`](https://radix.equinor.com/radix-config/#privateimagehubs), in the Dockerfile's `FROM` instructions.\n  * Faster builds due to less steps involved and higher performance nodes.\n\n\ntip\n`useBuildKit` is the recommended way to build containers and will be the default in the future.\n### `useBuildCache`[​](https://radix.equinor.com/radix-config/#usebuildcache \"Direct link to usebuildcache\")\n`useBuildCache` - (optional, defaults to `true`) pushes all layers to cache, and uses it in future builds when possible. Requires `useBuildKit` to be enabled. Internally Radix sets `--cache-to`, `--cache-from` and `--layers` in Buildah. Read more at [Buildahs Documentation](https://github.com/containers/buildah/blob/main/docs/buildah-build.1.md)\nThis option can be overridden in the [Radix CLI command](https://radix.equinor.com/docs/topic-radix-cli/#build-and-deploy-pipeline-job) `rx create pipeline-job build-deploy` with an argument `--use-build-cache=true|false` and with the checkbox `Use Build Cache` in the Radix Web Console.\n#### Refresh Build Cache[​](https://radix.equinor.com/radix-config/#refresh-build-cache \"Direct link to Refresh Build Cache\")\nThere are cases when cache need to be refreshed explicitly:\n  * When `useBuildCache` is `true` and there are changes in source code's implicit dependencies or external resources, used by the Dockerfile (e.g. components, referenced to external Git repository or service)\n  * When build secrets are changed\n\n\nIn such (or other) cases the build cache can be refreshed within a `build` or `build-deploy` pipeline job created with the CLI command with the option `--refresh-build-cache true` or with the ticked checkbox `Refresh Build Cache` in the Radix Web Console.\ntip\nMake sure you never store secrets or confidential information in any intermediate layer, multistage image, or in your final container image.\n### `secrets`[​](https://radix.equinor.com/radix-config/#secrets \"Direct link to secrets\")\n```\nspec:build:secrets:- SECRET_1- SECRET_2\n```\n\n`secrets` - (optional) Defines secrets to be used in Dockerfiles or [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline). Secrets values must be set in Radix Web Console. `build-deploy` jobs will fail if not all secret values are set.\ntip\n  * When an option `useBuildKit: false`, to ensure that multiline build secrets are handled correct by the build, **all** build secrets are passed as `ARG`-s during container build, base-64 encoded (they need to be decoded before use).\n  * When an option `useBuildKit: true`, build secrets are not available as `ARG`-s during container build, but they can be mounted as files. Secret values are not base-64 encoded in these files.\n\n\nRead the [build secrets](https://radix.equinor.com/guides/build-secrets/) guide to see how to use build secrets in a Dockerfile.\n### `subPipeline`[​](https://radix.equinor.com/radix-config/#subpipeline \"Direct link to subpipeline\")\n`subPipeline` - (optional, available only in [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline)) configuration of sub-pipeline options.\n#### `variables`[​](https://radix.equinor.com/radix-config/#variables \"Direct link to variables\")\n```\nspec:build:subPipeline:variables:VAR1: value1VAR2: value2\n```\n\n`variables` - (optional, available only in [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline)) environment variables names and values, provided for all build Radix environments in [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline). These common environment variables can be overridden by environment-specific environment variables with the same names.\n#### `identity`[​](https://radix.equinor.com/radix-config/#identity \"Direct link to identity\")\n```\nspec:build:subPipeline:identity:azure:clientId: 12345678-a263-abcd-8993-683cc6123456\n```\n\nWhen `identity.azure.clientId` option is set, the environment variable `AZURE_CLIENT_ID` with its value is automatically added to the running pipeline, and it can be used in this pipeline tasks. Read more about the identity in the [component identity](https://radix.equinor.com/radix-config/#identity-1) option and about using it in the sub-pipeline in the [Pipeline with Azure workload identity](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity) example.\n## `environments`[​](https://radix.equinor.com/radix-config/#environments \"Direct link to environments\")\n```\nspec:environments:-name: devbuild:from: master-name: prodbuild:from: release\n```\n\nThe `en", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d7faca85a3f3ee00cd4b188086650e4d", "__created_at__": 1748191392.2717485, "content": "in the sub-pipeline in the [Pipeline with Azure workload identity](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity) example.\n## `environments`[​](https://radix.equinor.com/radix-config/#environments \"Direct link to environments\")\n```\nspec:environments:-name: devbuild:from: master-name: prodbuild:from: release\n```\n\nThe `environments` section of the spec lists the environments for the application.\n### `name`[​](https://radix.equinor.com/radix-config/#name-1 \"Direct link to name-1\")\nThe name of the environment. Can be `dev`, `qa`, `production` etc.\n### `build`[​](https://radix.equinor.com/radix-config/#build-1 \"Direct link to build-1\")\n`from` specifies which branch or git tag each environment will build from. If `from` is not specified for the environment, no automatic builds or deployments will be created. This configuration is useful for a promotion-based [workflow](https://radix.equinor.com/start/workflows/#promotion).\nWildcard branch or git tag mapping is also support, using `*` and `?`. Examples:\n  * `feature/*`\n  * `feature-?`\n  * `hotfix/**/*`\n\n\n`variables` - environment variable names and values (currently available only in [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline)), provided for specific environments. They override common environment variables with the same names, if specified in the `spec.build.variables`.\nA text input field, will be available to put a full branch name for a build environment.\nExample:\n```\nspec:build:variables:VAR1: val1CONNECTION_STRING:\"Provider=MySQLProv;Data Source=prodDb;\"environments:-name: devbuild:from: mainvariables:VAR1:\"val1-for-dev\"#overrides common env-var VAR1 in the \"dev\" external pipelineCONNECTION_STRING:\"Provider=MySQLProv;Data Source=devDb;\"#overrides common env-var CONNECTION_STRING in the \"dev\" custom sub-pipeline-name: prodbuild:from: releasevariables:VAR3: val3 #env-var VAR3 only exists in the \"prod\" custom sub-pipeline, in addition to common VAR1 and CONNECTION_STRING \n```\n\n### `webhookEnabled`[​](https://radix.equinor.com/radix-config/#webhookenabled \"Direct link to webhookenabled\")\n```\nspec:environments:-name: devbuild:from: masterwebhookEnabled:false\n```\n\n`webhookEnabled` - (optional, default `true`) controls whether the environment is built and deployed by `build-deploy` pipeline jobs triggered from Github webhook.\n### `egress`[​](https://radix.equinor.com/radix-config/#egress \"Direct link to egress\")\n```\nspec:environments:-name: devbuild:from: masteregress:allowRadix:truerules:-destinations:-\"143.97.5.5/32\"-\"143.97.6.1/32\"ports:-port:443protocol: TCP-name: prodbuild:from: release\n```\n\nSpecify `egress` with settings for which egress traffic is allowed from all components and jobs in the environment.\n`allowRadix` can be set to `true` or `false` to allow or deny traffic to other applications in Radix. The default value is `false`.\n`rules` can be defined with a list of legal `destinations` and `ports` for egress traffic. Each entry in `destinations` must be a string representing a valid IPv4 mask. Each entry in `ports` must be an object with a valid TCP/UDP `port` number and `protocol` equal to either \"TCP\" or \"UDP\". If one or more egress rules are defined, any traffic not allowed by the egress rules will be blocked. If no egress rules are defined, all traffic is allowed.\nSee [the egress configuration guide](https://radix.equinor.com/guides/egress-config/) for usage patterns and tips and tricks.\ntip\nIf an `environment` has defined the `egress` field, all traffic is blocked by default. If `egress` is not defined, all traffic is allowed. If your application uses a custom OAuth2 implementation, outbound access to Microsoft authentication endpoints must be allowed. See [allow traffic for OAuth2](https://radix.equinor.com/guides/egress-config/#allow-traffic-for-oauth2).\n### `subPipeline`[​](https://radix.equinor.com/radix-config/#subpipeline-1 \"Direct link to subpipeline-1\")\n`subPipeline` - (optional, available only in [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline)) configuration of sub-pipeline options for specific environment.\n  * It can override common [subPipeline](https://radix.equinor.com/radix-config/#subpipeline) or combine with it (if present) for a specific environment.\n  * It can remove the common Sub-Pipeline [identity](https://radix.equinor.com/radix-config/#identity) (if present) with `{}` (empty object) for a specific environment\n\n\n```\nspec:environments:-name: devsubPipeline:{}\n```\n\n#### `variables`[​](https://radix.equinor.com/radix-config/#variables-1 \"Direct link to variables-1\")", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-af40532eab153a8b43a1e39b09a8a213", "__created_at__": 1748191392.2717485, "content": "(if present) for a specific environment.\n  * It can remove the common Sub-Pipeline [identity](https://radix.equinor.com/radix-config/#identity) (if present) with `{}` (empty object) for a specific environment\n\n\n```\nspec:environments:-name: devsubPipeline:{}\n```\n\n#### `variables`[​](https://radix.equinor.com/radix-config/#variables-1 \"Direct link to variables-1\")\n```\nspec:environments:-name: devsubPipeline:variables:VAR1: value1VAR2: value2\n```\n\nSub-pipeline environment variables names and values, provided for specific build Radix environment in [sub-pipelines](https://radix.equinor.com/guides/sub-pipeline). These variables will be combined with [subPipeline environment variables](https://radix.equinor.com/radix-config/#variables) (if present).\n#### `identity`[​](https://radix.equinor.com/radix-config/#identity-1 \"Direct link to identity-1\")\n```\nspec:environments:-name: devsubPipeline:identity:azure:clientId: 12345678-a263-abcd-8993-683cc6123456\n```\n\nThe `identity` section enables identity for a specific environment. Read mode about [build identity](https://radix.equinor.com/radix-config/#identity).\n  * It can remove the common [identity](https://radix.equinor.com/radix-config/#identity) with `{}` empty object for a specific environment\n\n\n```\nspec:environments:-name: devsubPipeline:identity:azure:{}\n```\n\n## `components`[​](https://radix.equinor.com/radix-config/#components \"Direct link to components\")\nThis is where you specify the various components for your application - it needs at least one. Each component needs a `name`; this will be used for building the Docker images (appName-componentName). Source for the component can be; a folder in the repository, a dockerfile or an image.\n### `src`[​](https://radix.equinor.com/radix-config/#src \"Direct link to src\")\n```\nspec:components:-name: frontendsrc: frontendports:-name: httpport:8080-name: backendsrc: backendports:-name: httpport:5000\n```\n\n`src` a folder, relative to the repository root, where the `Dockerfile` for the component is located. The Dockerfile is used by the [Build and deploy](https://radix.equinor.com/guides/build-and-deploy/) workflow of the Radix CI-CD pipeline to build a container image for the component. By default `src` is `.` - a root of the GitHub repository.\nFor Radix environment specific `src`, refer to [environmentConfig src](https://radix.equinor.com/radix-config/#src-1).\ntip\nWhen the `image` option is set - `src` option is ignored.\n### `dockerfileName`[​](https://radix.equinor.com/radix-config/#dockerfilename \"Direct link to dockerfilename\")\n```\nspec:components:-name: frontenddockerfileName: Dockerfile # Absolute path from repository root: /Dockerfileports:-name: httpport:8080-name: backendsrc: .dockerfileName: backend/Dockerfile # Absolute path from repository root: /backend/Dockerfileports:-name: httpport:5000-name: apisrc: apidockerfileName:\"../Dockerfile\"# Absolute path from repository root: /Dockerfileports:-name: httpport:5000-name: websrc: webdockerfileName:\"subfolder/Dockerfile\"# Absolute path from repository root: /web/subfolder/Dockerfileports:-name: httpport:5000\n```\n\nBy default, Radix pipeline expects a docker file with a name `Dockefile` in the component `src` folder. If this file name needs to be different, it can be specified in the option `dockerfileName`. The name can also contain a path relative to `src`. See configuration examples above.\nFor Radix environment specific `dockerfileName`, refer to [environmentConfig image](https://radix.equinor.com/radix-config/#dockerfilename-1).\ntip\nWhen the `image` option is set - `dockerfileName` option is ignored.\n### `image`[​](https://radix.equinor.com/radix-config/#image \"Direct link to image\")\nAn alternative configuration of a component could be to use an existing container image, which can be specified in the option `image`. When this option is set for a component - the component will be not build, but only deployed with this image. An example of such a configuration:\n```\nspec:components:-name: redisimage: redis:5.0-alpine-name: swagger-uiimage: swaggerapi/swagger-uiports:-name: httpport:8080publicPort: http\n```\n\ntip\n  * When a container image is from the DockerHub repository, it is enough to specify only the image name. Examples: \n    * `image: redis:latest`\n    * `image: redis:7.0.5`.\n    * When an image is located in another container registry, the image name need to have the container registry URL. Example:\n    * `image: gcr.io/distroless/nodejs18-debian11`.\n    * `image: gcr.io/distroless/nodejs18-debian11:latest`.\n  * When an image is not publicly available, it is required to provide an authentication information. Please read", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-28fefeb5b2445aa73020102afe931c91", "__created_at__": 1748191392.2717485, "content": ":latest`\n    * `image: redis:7.0.5`.\n    * When an image is located in another container registry, the image name need to have the container registry URL. Example:\n    * `image: gcr.io/distroless/nodejs18-debian11`.\n    * `image: gcr.io/distroless/nodejs18-debian11:latest`.\n  * When an image is not publicly available, it is required to provide an authentication information. Please read more about [privateImageHubs](https://radix.equinor.com/radix-config/#privateimagehubs) option.\n\n\nFor Radix environment specific `image`, refer to [environmentConfig image](https://radix.equinor.com/radix-config/#image-1).\n### `replicas`[​](https://radix.equinor.com/radix-config/#replicas \"Direct link to replicas\")\n```\nspec:components:-name: backendreplicas:2\n```\n\n`replicas` can be used to [horizontally scale](https://en.wikipedia.org/wiki/Scalability#Horizontal_and_vertical_scaling) the component. If `replicas` is not set, it defaults to `1`. If `replicas` is set to `0`, the component will not be deployed (i.e. stopped).\n### `ports`[​](https://radix.equinor.com/radix-config/#ports \"Direct link to ports\")\n```\nspec:components:-name: frontendports:-name: httpport:8000-name: apiport:8001\n```\n\nA component can optionally have one or several ports:\n  * `name` - internal name of a port, used as a reference within the radixconfig. It needs to be unique within the component `ports` list.\n  * `port` - numeric value of a port, in the range between 1024 and 65535. It needs to be unique within the component `ports` list.\n\n\nA component doesn't need to have ports. If it has at least one port, it has to respond to TCP or HTTP requests, sent to this port. Kubernetes [readiness probe](https://radix.equinor.com/docs/topic-rollingupdate/#readiness-probe) will regularly request the first port in the `ports` list to ensure that the component can handle requests.\nWhen a new component version is deployed, the probe waits until replicas of the new component version start responding to such requests, keeping them in the \"Starting\" state. When the new replicas respond to these requests, the [rolling update](https://radix.equinor.com/docs/topic-rollingupdate/) will remove the replicas of the old component version\n### `publicPort`[​](https://radix.equinor.com/radix-config/#publicport \"Direct link to publicport\")\n```\nspec:components:-name: frontendpublicPort: http\n```\n\nThe `publicPort` field of a component, if set to `<PORT_NAME>`, is used to make the component accessible on the internet by generating a public endpoint. By default, the public endpoint can be accessed from all public IP addresses. You can restrict access to the public endpoints by configuring a list of IP address ranges in `network.ingress.public.allow`, see [network](https://radix.equinor.com/radix-config/#network-1) for more information.\nA component without `publicPort: <PORT_NAME>` can only be accessed from another component in the app. If specified, the `<PORT_NAME>` should exist in the `ports` field.\ntip\nIf no [ports](https://radix.equinor.com/radix-config/#ports) specified for a component, `publicPort` should not be set.\n### `monitoring`[​](https://radix.equinor.com/radix-config/#monitoring \"Direct link to monitoring\")\n```\nspec:components:-name: frontendmonitoring:true\n```\n\nWhen the `monitoring` field is set to `true`, is used to expose custom application metrics in the Radix monitoring dashboards. It is expected that the component provides a `/metrics` endpoint: this will be queried periodically (every five seconds) by an instance of [Prometheus](https://prometheus.io/) running within Radix. General metrics, such as resource usage, will always be available in monitors, regardless of this being set.\n### `monitoringConfig`[​](https://radix.equinor.com/radix-config/#monitoringconfig \"Direct link to monitoringconfig\")\n```\nspec:components:-name: frontendports:-name: httpport:8000-name: metricsport:1234monitoringConfig:portName: metricspath: /my-metrics\n```\n\nThe `monitoringConfig` field of a component can be used to override the default port and/or path used for `monitoring`. Both fields are optional and are by default set to use the first available port and the path as `/metrics`.\nNote\nIf overriding `portName` it will have to match one of the defined ports in the component.\n### `horizontalScaling`[​](https://radix.equinor.com/radix-config/#horizontalscaling \"Direct link to horizontalscaling\")\nScale your components replicas up and down based on resources or external metrics like CRON or Azure Service Bus.\nIf you need any other trigger types, find the list of available triggers at <https://keda.sh/docs/latest/scalers/> and open a feature request on <https://github.com/equinor/radix>\nYou can override horizontalScaling in your environments and we will merge `minReplicas`, `maxReplicas`, `pollingInterval` and `cooldownPeriod`. If any triggers are defined in the", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2b64ff8829acdf39c45c4195b7a0a150", "__created_at__": 1748191392.2717485, "content": "and down based on resources or external metrics like CRON or Azure Service Bus.\nIf you need any other trigger types, find the list of available triggers at <https://keda.sh/docs/latest/scalers/> and open a feature request on <https://github.com/equinor/radix>\nYou can override horizontalScaling in your environments and we will merge `minReplicas`, `maxReplicas`, `pollingInterval` and `cooldownPeriod`. If any triggers are defined in the environment, they will replace all triggers on the component level. Read more about polling intervall and cooldown period in KEDAs documentation [here](https://keda.sh/docs/latest/concepts/scaling-deployments/#pollinginterval)\n```\nspec:components:-name: backendhorizontalScaling:minReplicas:0# defaults to 1 if not setmaxReplicas:6# pollingInterval: 30 # Default# cooldownPeriod: 300 # Defaulttriggers:# Cpu/Memory triggers will scale up/down so the average usage# is 85% of requested Cpu across all pods, # or 75% of requested memory across all pods, whatever is highest.-name: cpucpu:value:85-name: memorycpu:value:75-name: croncron:timezone: Europe/Oslostart: 0 7 * * 1-5# 07:00 Monday - Fridayend: 0 17 * * 1-5# 17:00 Monday - FridaydesiredReplicas:1-name: azuresbazureServiceBus:namespace: <your servicebus namespace>#.servicebus.windows.net# messageCount: 5# activationMessageCount: 0queueName: main# or use TopicName/subscriptionName:# topicName: my-topic# subscriptionName: my-subscriptionauthentication:# Currently we only support Workload Identityidentity:azure:clientId: 00000000-0000-0000-0000-000000000000# Deperecated: legacy resources will be rewritten as triggers by Radix. # - It is not allowed to mix resources with triggers.# resources:#   memory:#    averageUtilization: 75#   cpu:#    averageUtilization: 85\n```\n\nThe `horizontalScaling` field is used for enabling automatic scaling of the component. This field is optional, and if set, it will override the `replicas` value of the component. If no triggers are defined, we will configure a default CPU trigger with a target of 80% average usage.\nOne exception is when the `replicas` value is set to `0` (i.e. the component is stopped), the `horizontalScaling` config will not be used.\nDeprecation\nThe previous `resources` block have been replaced by `triggers`.\n#### `azureServiceBus` trigger[​](https://radix.equinor.com/radix-config/#azureservicebus-trigger \"Direct link to azureservicebus-trigger\")\nTake a look here [github.com/equinor/radix-public-site/examples/radix-example-keda-servicebus](https://github.com/equinor/radix-public-site/tree/main/examples/radix-example-keda-servicebus) for a sample implementation that runs on Radix.\nAzure Service Bus supports either a `queueName`, or a `topicName` and `subscriptionName`. You can also select the target average `messageCount` (defaults to 5), and `activationMessageCount` (defaults to 0).\nTo authenticate Keda for scaling, you must provide a clientId to a managed identity, that contains a federeated credential with these properties:\n```\nFederated credential scenario: Kubernetes Service Account# Find real and current value here: https://console.radix.equinor.com/about (CLUSTER_OIDC_ISSUER_URL), # it will change in the future, we will post details in the slack channel #omnia-radix when it must be changed.Cluster Issuer URL: https://northeurope.oic.prod-aks.azure.com/00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000/ Namespace: kedaService Account: keda-operator# ⚠️ When you give Keda access to your Service Bus, any other Radix app can scale their app based on your queue. #  We are hoping on improving this - https://github.com/kedacore/keda/issues/5630\n```\n\n### `healthChecks`[​](https://radix.equinor.com/radix-config/#healthchecks \"Direct link to healthchecks\")\nBy default Radix configures a TCP Readiness probe that tells the platform your component is ready to accept traffic as soon as the port is opened. Radix support [Readiness, Liveness and Startup Probes](https://kubernetes.io/docs/concepts/configuration/liveness-readiness-startup-probes).\nIf any custom probes are configured, Radix will not include the default readiness probe and you should configure it yourself.\ntip\nA **HTTP Get probe** for readiness probe is usually easer to manage than a TCP probe, and the probe should let Radix now when your component _and_ your dependencies are ready for traffic.\n**TCP Probes** only checks if the port is open or closed. This way its hard to explicitly open or close the port when your component or dependencies are unavailable after startup. This could also disrupt regular requests that might not be affected.\n```\nspec:components:-name: backendhealthChecks:startupProbe:tcpSocket:port:8000livenessProbe:httpGet:port:8000path: /healthz/livereadinessProbe:successThreshold:1periodSeconds:30failureThreshold:3initialDelaySeconds:10timeout", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b43b4ca6d26177d230899066e3db46a0", "__created_at__": 1748191392.2717485, "content": "port is open or closed. This way its hard to explicitly open or close the port when your component or dependencies are unavailable after startup. This could also disrupt regular requests that might not be affected.\n```\nspec:components:-name: backendhealthChecks:startupProbe:tcpSocket:port:8000livenessProbe:httpGet:port:8000path: /healthz/livereadinessProbe:successThreshold:1periodSeconds:30failureThreshold:3initialDelaySeconds:10timeoutSeconds:5httpGet:port:8000path: /healthz/ready # Component is Ready when this endpoint returns a successful status code (2xx or 3xx)\n```\n\nAll probes have all settings (except for successThreshold that is not available for liveness and startup probes). We support HTTP, TCP, Exec and GRPC probes. `environmentConfig` can also override individual startup, liveness or readiness-probes (but will not merge probe specific config).\nwarning\nIncorrectly configured probes can lead to premature restarts and will affect your uptime.\nRead more about probes here: <https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/>\n### `imageTagName`[​](https://radix.equinor.com/radix-config/#imagetagname \"Direct link to imagetagname\")\n```\ncomponents:-name: backendimage: docker.pkg.github.com/equinor/myapp/backend:{imageTagName}imageTagName: master-latest\n```\n\nThe `imageTagName` allows for flexible configuration of fixed images, built outside of Radix. It can be configured with separate tag for each environment.\ntip\nSee [this](https://radix.equinor.com/guides/deploy-only/) guide on how make use of `imageTagName` in a deploy-only scenario.\n### `volumeMounts`[​](https://radix.equinor.com/radix-config/#volumemounts \"Direct link to volumemounts\")\n```\nspec:components:-name: backendvolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:protocol: fuse2container: container-namecacheMode: BlockblockCache:blockSize:4poolSize:100diskSize:250diskTimeout:120prefetchCount:11prefetchOnOpen:falseparallelism:8fileCache:timeout:120attributeCache:timeout:0accessMode: ReadWriteManyrequestsStorage: 1Muid:\"2000\"gid:\"2001\"useAdls:falseuseAzureIdentity:falsestorageAccount: radixblobtest6subscriptionId: ffffffff-ffff-ffff-ffff-fffffffffffftenantId: ffffffff-ffff-ffff-ffff-ffffffffffffstreaming:# deprecated in favor of cacheModeenabled:false-name: temp-volume-namepath: /another/path/in/container/to/mount/toemptyDir:sizeLimit: 10M\n```\n\nThe `volumeMounts` field configures volume mounts within the running component.\n  * `name` - The name of the volume. Unique within `volumeMounts` list of a component\n  * `path` - The folder inside the running container, where the external storage is mounted.\n\n\nConfigure one of the following volume types:\n  * `emptyDir` - Mounts a read-write empty volume.\n  * `blobFuse2` - Mounts an [Azure storage account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview) blob container.\n\n\n#### `emptyDir`[​](https://radix.equinor.com/radix-config/#emptydir \"Direct link to emptydir\")\n  * `sizeLimit` - The maxiumum capacity for the volume.\n\n\nAn `emptyDir` volume mounts a temporary writable volume in the container. Data in an `emptyDir` volume is safe across container crashes for component replicas, but is lost if a job container crashes and restarts. When a component replica is deleted for any reason, the data in `emptyDir` is removed permanently.\n`emptyDir` volumes are useful when [`readOnlyFileSystem`](https://radix.equinor.com/radix-config/#readonlyfilesystem) is set to `true`.\nUse cases\n  * scratch space, such as for a disk-based merge sort\n  * checkpointing a long computation for recovery from crashes\n  * holding files that a content-manager container fetches while a webserver container serves the data\n\n\n#### `blobFuse2`[​](https://radix.equinor.com/radix-config/#blobfuse2 \"Direct link to blobfuse2\")\nThe **blobFuse2** volume type adds support for mounting Azure storage account blob containers. Read the [guide](https://radix.equinor.com/guides/volume-mounts/) for detailed information and examples.\n  * `protocol` (optional, default `fuse2`) - Name of the protocol to be used. Valid values are `fuse2` or `\"\"` (blank).\n  * `container` - Name of the blob container in the Azure storage account.\n  * `cacheMode` (optional, default `Block`) - Specify how files should be cached. Valid values are `Block`, `File` and `DirectIO`. Read more about the different mode [here](https://radix.equinor.com/guides/volume-mounts/#cache-modes).\n  * `blockCache` (optional) - Settings for `Block` cache mode. \n    * `blockSize` (optional, default `4`) - Size (in MB) of a block to be downloaded as a unit.\n    * `prefetchCount` (optional, default `11`) - Max number of blocks to prefetch. Value must", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1c5af83d883b5c68a9ff0d01773d025f", "__created_at__": 1748191392.2717485, "content": "the different mode [here](https://radix.equinor.com/guides/volume-mounts/#cache-modes).\n  * `blockCache` (optional) - Settings for `Block` cache mode. \n    * `blockSize` (optional, default `4`) - Size (in MB) of a block to be downloaded as a unit.\n    * `prefetchCount` (optional, default `11`) - Max number of blocks to prefetch. Value must be `0` or greater than `10`.\n    * `prefetchOnOpen` (optional, default `false`) - Start prefetching on open or wait for first read.\n    * `poolSize` (optional) - Defines the size (in MB) of total memory preallocated for block cache. Must be at least `blockSize` * `prefetchCount`. If `prefetchCount` is set to `0` then the minimum value is 1 * `blockSize`. If this value is set lower than the required minimum, Radix will automatically use minimum to prevent failures.\n    * `diskSize` (optional, default `0`) - Defines the size (in MB) of total disk capacity that block cache can use. `0` disables block caching on disk. Follows the same requirements and behavior as `poolSize` when set to a value greater than `0`.\n    * `diskTimeout` (optional, default `120`) - Timeout (in seconds) for which persisted data on disk cache. Applicable only when `diskSize` greater than `0`.\n    * `parallelism` (optional, default `8`) - Number of worker thread responsible for upload/download jobs.\n  * `fileCache` (optional) - Settings for `File` cache mode. \n    * `timeout` (optional, default `120`) - The timeout (in seconds) for which file cache is valid.\n  * `attributeCache` (optional) - Settings for file attribute cache. \n    * `timeout` (optional, default `0`) - The timeout (in seconds) for file attribute cache entries.\n  * `accessMode` (optional, default `ReadOnlyMany`) - Defines the access mode to the mounted volume. Valid values are `ReadOnlyMany`, `ReadWriteOnce` or `ReadWriteMany`.\n  * `requestsStorage` (optional, default `1Mi`) - Defines the requested storage size for the Azure storage account blob container. Currently, this setting has no effect.\n  * `uid` (optional) - Defines the ID of the user that will own the mounted files and directories. Currently, the blobfuse2 driver does no honor this setting.\n  * `gid` (optional) - Defines the ID of the group that will own the mounted files and directories. Currently, the blobfuse2 driver does no honor this setting.\n  * `useAdls` (optional, default `false`) - Specify if Azure storage account is [HNS (hierarchical namespace) enabled](https://learn.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-namespace) or not. This must be set to `true` when a HNS enabled blob container is mounted.\n  * `useAzureIdentity` (optional, default `false`) - Enables [Azure Workload Identity](https://radix.equinor.com/guides/volume-mounts/#azure-workload-identity) credentials using the service principal configured in [identity.azure](https://radix.equinor.com/radix-config/#identity-2) for accessing the Azure Storage. If omitted or set to `false`, [Azure storage account keys](https://radix.equinor.com/guides/volume-mounts/#access-keys) is used for authentication.\n  * `storageAccount` (optional) - Name of the Azure storage account. Required when `useAzureIdentity` is `true`.\n  * `resourceGroup` (optional) - Name of the Azure resource group for the Azure storage account. Required when `useAzureIdentity` is `true`.\n  * `subscriptionId` (optional) - Azure subscription ID for the Azure storage account. Required when `useAzureIdentity` is `true`.\n  * `tenantId` (optional, defaults to the Equinor tenant) - Azure tenant ID for the Azure storage account. Applicable when `useAzureIdentity` is `true`.\n  * `streaming` (deprecated) - Streaming is deprecated by the blobfuse2 driver, and is replaced with block caching. To prevent breaking changes for applications that have explicitly disabled streaming, by setting `streaming.enabled` to `false`, in order to use file caching, this behavior is preserved as long as `cacheMode` is not set.\n\n\n### `ingressConfiguration`[​](https://radix.equinor.com/radix-config/#ingressconfiguration \"Direct link to ingressconfiguration\")\n```\nspec:components:-name: frontendingressConfiguration:- websocketfriendly\n```\n\nThe `ingressConfiguration` field of a component will add extra configuration by [annotations](https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/) to the Nginx ingress, useful for a particular scenario.\ntip\nNote that the settings affect the connections with the public component, not between a public and a private component.\n  * `websocketfriendly` will change connection timeout to 1 hour for the component.\n  * `stickysessions` will change load balancing of the ingress to route to a single replica.\n  * `leastconnectedlb` will try to route connection to the replica with least amount of load\n\n\nSee [this](https://github.com/equinor/radix-operator/blob/b828195f1b3c718d5a48e31", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-fdd39c03597d8bacfb71afb2f78eecb3", "__created_at__": 1748191392.2717485, "content": "a public and a private component.\n  * `websocketfriendly` will change connection timeout to 1 hour for the component.\n  * `stickysessions` will change load balancing of the ingress to route to a single replica.\n  * `leastconnectedlb` will try to route connection to the replica with least amount of load\n\n\nSee [this](https://github.com/equinor/radix-operator/blob/b828195f1b3c718d5a48e31d0bafe0435857f5bf/charts/radix-operator/values.yaml#L58) for more information on what annotations will be put on the ingress, given the configuration. See [nginx documentation](https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/#choosing-a-load-balancing-method) for details about how the native nginx load balancing methods work.\n### `alwaysPullImageOnDeploy`[​](https://radix.equinor.com/radix-config/#alwayspullimageondeploy \"Direct link to alwayspullimageondeploy\")\n```\nspec:components:-name: apiimage: docker.pkg.github.com/equinor/my-app/api:latestalwaysPullImageOnDeploy:false\n```\n\nOnly relevant for teams that uses another CI tool than Radix and static tags. See [deploy-only](https://radix.equinor.com/guides/deploy-only/#updating-deployments-on-static-tags) for more information.\n### `secrets`[​](https://radix.equinor.com/radix-config/#secrets-1 \"Direct link to secrets-1\")\n```\nspec:components:-name: backendsecrets:- DB_PASS\n```\n\nThe `secrets` key contains a list of names. Values for these can be set via the Radix Web Console (under each active component within an environment). Each secret must be set on all environments. Secrets are available in the component as environment variables; a component will not be able to start without the secret being set.\n### `resources` (common)[​](https://radix.equinor.com/radix-config/#resources-common \"Direct link to resources-common\")\n```\nspec:components:-name: backendresources:requests:memory:\"64Mi\"cpu:\"50m\"limits:cpu:\"1000m\"\n```\n\nThe `resources` section specifies how much CPU and memory each component needs, that are shared among all Radix environments in a component. These common resources are overridden by environment-specific resources. The requested quota of memory and cpu must be below the limit.\nIf no memory limit is set, but a memory request is set, we will set the limit equal to the requested value. The opposite is also true, if a memory limit is set, but no requests, we will sett the requested memory equal to the memory limit.\n[Read more](https://kubernetes.io/blog/2021/11/26/qos-memory-resources/) about memory resources and QoS. [More details](https://radix.equinor.com/guides/resource-request/) about `resources` and about [default resources](https://radix.equinor.com/guides/resource-request/#default-resources).\n### `variables` (common)[​](https://radix.equinor.com/radix-config/#variables-common \"Direct link to variables-common\")\n```\nspec:components:-name: backendvariables:DB_NAME: my-db\n```\n\nThe `variables` key contains environment variable names and their values, that are shared among all Radix environments in a component. These common environment variables are overridden by environment-specific environment variables that have exactly same names.\nEnvironment variables [can be changed](https://radix.equinor.com/guides/environment-variables/) in Radix Console.\n### `environmentConfig`[​](https://radix.equinor.com/radix-config/#environmentconfig \"Direct link to environmentconfig\")\nThe `environmentConfig` section is to set environment-specific settings for each component.\n#### `src`[​](https://radix.equinor.com/radix-config/#src-1 \"Direct link to src-1\")\nWhen a component needs to be built with a different folder in a particular application environment, this folder can be specified in the `src` option of the `environmentConfig` section for this environment. If the component has an option `image` specified on the component level, this `image` option will be ignored and this component will be built for this environment with that specified `src`. An example of such configuration:\n```\nspec:components:-name: frontendsrc:\".\"environmentConfig:-environment: devsrc:\"./frontend\"-name: backendenvironmentConfig:-environment: devsrc:\"./backend\"-name: apiimage: ghcr.io/my-repo/my-app/api:v1.10environmentConfig:-environment: devsrc:\"./api\"\n```\n\nIn this example:\n  * The `frontend` component in the `dev` environment will be built from the `frontend` folder of the GitHub repo, and from a root folder for other environments. Both docker-files expected to be `Dockerfile` as `dockerfileName` option is not specified.\n  * The `backend` component in the `dev` environment will be built from the `backend` folder of the GitHub repo, and from a root folder (used by default) for other environments. Both docker-files expected to be `Dockerfile` as `dockerfileName` option is not specified.\n  * The `api` component in the `dev` environment will be built from the `api` folder. This option in the environment overrides an `image` option on the component level, which value `ghcr.io/my-repo/my-app/api:v1.10` will be used to deploy", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-6350e35cdfad4a254cad2f7358b025ff", "__created_at__": 1748191392.2717485, "content": "GitHub repo, and from a root folder (used by default) for other environments. Both docker-files expected to be `Dockerfile` as `dockerfileName` option is not specified.\n  * The `api` component in the `dev` environment will be built from the `api` folder. This option in the environment overrides an `image` option on the component level, which value `ghcr.io/my-repo/my-app/api:v1.10` will be used to deploy this component in other environments. The docker-file expected to be `Dockerfile` as `dockerfileName` option is not specified.\n\n\nFor shared `src` across Radix environments, refer to [common src](https://radix.equinor.com/radix-config/#src).\ntip\nWhen both `image` and `src` options are specified - the `image` has higher priority, the `src` option is ignored.\nThe `src` option can be combined with `dockerfileName` option.\n#### `dockerfileName`[​](https://radix.equinor.com/radix-config/#dockerfilename-1 \"Direct link to dockerfilename-1\")\nWhen a component needs to be built with a different docker-file in a particular application environment, this docker-file can be specified in the `dockerfileName` option of the `environmentConfig` section for this environment. If the component has an option `image` specified on the component level, this `image` option will be ignored and this component will be built for this environment with that specified `dockerfileName`. An example of such configuration:\n```\nspec:components:-name: frontenddockerfileName: DockerfileenvironmentConfig:-environment: devdockerfileName: Dockerfile.dev-name: backendsrc:\"./backend\"environmentConfig:-environment: devdockerfileName: Dockerfile.dev-name: apiimage: ghcr.io/my-repo/my-app/api:v1.10environmentConfig:-environment: devdockerfileName: Dockerfile\n```\n\nIn this example:\n  * The `frontend` component in the `dev` environment will be built with the `Dockerfile.dev` docker-file, and with a `Dockerfile` docker-file for other environments. Both docker-files expected to be in the root of the GitHub repo as `src` option is not specified.\n  * The `backend` component in the `dev` environment will be built with the `Dockerfile.dev` docker-file, and with a `Dockerfile` docker-file (a name, used by default) for other environments. Both docker-files expected to be in the `backend` folder in the root of the GitHub repo.\n  * The `api` component in the `dev` environment will be built with the `Dockerfile` docker-file. This option in the environment overrides an `image` option on the component level, which value `ghcr.io/my-repo/my-app/api:v1.10` will be used to deploy this component in other environments. The docker-file expected to be in the root of the GitHub repo as `src` option is not specified.\n\n\nFor shared `dockerfileName` across Radix environments, refer to [common dockerfileName](https://radix.equinor.com/radix-config/#dockerfilename).\ntip\nWhen both `image` and `dockerfileName` options are specified - the `image` has higher priority, the `dockerfileName` option is ignored.\nThe `dockerfileName` option can be combined with `src` option.\n#### `image`[​](https://radix.equinor.com/radix-config/#image-1 \"Direct link to image-1\")\nWhen a component needs a different docker image in a particular application environment, this image can be specified in the `image` option of the `environmentConfig` section for this environment. An example of such configuration:\n```\nspec:components:-name: redisimage: redis:5.0-alpineenvironmentConfig:-environment: qaimage: redis:7.2.4-name: web-appsrc: ./appdockerfileName: Dockerfile.appenvironmentConfig:-environment: prodimage: ghcr.io/my-repo/my-app/web-app:v1.10\n```\n\nIn this example:\n  * The `redis` component in the `qa` environment will be run on the image `redis:7.2.4`, in other environments it will be run on the default image `redis:5.0-alpine`\n  * The `web-app` component in the `prod` environment will be run on the pre-build image `ghcr.io/my-repo/my-app/web-app:v1.10`, in other environments it will be built from the source folder `./app` and the docker-file `Dockerfile.app`\n\n\nFor shared image across Radix environments, refer to [common image](https://radix.equinor.com/radix-config/#image).\n#### `replicas`[​](https://radix.equinor.com/radix-config/#replicas-1 \"Direct link to replicas-1\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodreplicas:2\n```\n\n`replicas` can be used to [horizontally scale](https://en.wikipedia.org/wiki/Scalability#Horizontal_and_vertical_scaling) the component. If `replicas` is not set, it defaults to `1`. If `replicas` is set to `0`, the component will not be deployed (i.e. stopped). This can override the [component level](https://radix.equinor.com/radix-config#replicas) `replicas` value.\n#### `monitoring`[​](https://radix.equinor.com/radix-config/#monitoring-1 \"", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-9dc6f512458b5ad36c73f3bb24f7fcd9", "__created_at__": 1748191392.2717485, "content": "_scaling) the component. If `replicas` is not set, it defaults to `1`. If `replicas` is set to `0`, the component will not be deployed (i.e. stopped). This can override the [component level](https://radix.equinor.com/radix-config#replicas) `replicas` value.\n#### `monitoring`[​](https://radix.equinor.com/radix-config/#monitoring-1 \"Direct link to monitoring-1\")\n```\nspec:components:-name: frontendenvironmentConfig:-environment: prodmonitoring:true\n```\n\nWhen the `monitoring` field of a component environment config is set to `true`, is used to expose custom application metrics for the specific environment. See [monitoring](https://radix.equinor.com/radix-config/#monitoring) for more information.\n#### `resources`[​](https://radix.equinor.com/radix-config/#resources \"Direct link to resources\")\n```\nspec:components:-name: frontendenvironmentConfig:-environment: prodresources:requests:memory:\"128Mi\"cpu:\"100m\"limits:cpu:\"2000m\"\n```\n\nThe `resources` section specifies how much CPU and memory each component needs, that are defined per Radix environment in a component. `resources` is used to ensure that each component is allocated enough resources to run as it should. `limits` describes the maximum amount of compute resources allowed. `requests` describes the minimum amount of compute resources required. If `requests` is omitted for a component it defaults to the settings in `limits`. If `limits` is omitted, its value defaults to an implementation-defined value. [More info](https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/)\nThe property `limits.memory` cannot be explicitly set, it is set automatically with the same value as `requests.memory`\nFor shared resources across Radix environments, refer to [common resources](https://radix.equinor.com/radix-config/#resources-common).\n#### `variables`[​](https://radix.equinor.com/radix-config/#variables-2 \"Direct link to variables-2\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: devvariables:DB_HOST:\"db-dev\"DB_PORT:\"1234\"-environment: prodvariables:DB_HOST:\"db-prod\"DB_PORT:\"9876\"\n```\n\nThe `variables` key contains environment variable names and their values, that are defined per Radix environment in a component. In addition to what is defined here, running containers will also have some [environment variables automatically set by Radix](https://radix.equinor.com/docs/topic-runtime-env/#environment-variables).\nFor shared environment variables across Radix environments, refer to [common environment variables](https://radix.equinor.com/radix-config/#variables-common).\n#### `horizontalScaling`[​](https://radix.equinor.com/radix-config/#horizontalscaling-1 \"Direct link to horizontalscaling-1\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodhorizontalScaling:resources:memory:averageUtilization:75cpu:averageUtilization:85minReplicas:2maxReplicas:6\n```\n\nThe `horizontalScaling` field of a component environment config adds automatic scaling of the component in the environment, or it combines or overrides a component `imageTagName` if it is defined.\n#### `healthChecks`[​](https://radix.equinor.com/radix-config/#healthchecks-1 \"Direct link to healthchecks-1\")\nHealth check probes defined here will override probes defined on the component level.\n```\nspec:components:-name: backendhealthChecks:startupProbe:tcpSocket:port:8000livenessProbe:tcpSocket:port:8000readinessProbe:httpGet:port:8000path: /health/readyenvironmentConfig:-environment: prodhealthChecks:livenessProbe:httpGet:port:8000path: /health/alive\n```\n\nIn this example, the prod environment will have 3 probes, a startup probe (TCP port 8000), a liveness check (HTTP /health/ready) and a readiness probe (HTTP /health/ready)\nPlease see more information at [`healthChecks`](https://radix.equinor.com/radix-config/#healthchecks) for detailed information and warnings.\n#### `imageTagName`[​](https://radix.equinor.com/radix-config/#imagetagname-1 \"Direct link to imagetagname-1\")\n```\ncomponents:-name: backendimage: docker.pkg.github.com/equinor/myapp/backend:{imageTagName}environmentConfig:-environment: qaimageTagName: master-latest-environment: prodimageTagName: release-39f1a082\n```\n\nThe `imageTagName` can be configured with separate tag for each environment. Environment `imageTagName` overrides a component `imageTagName` if it is also defined. See [imageTagName](https://radix.equinor.com/radix-config/#imagetagname) for a component for more information.\n#### `volumeMounts`[​](https://radix.equinor.com/radix-config/#volumemounts-1 \"Direct link to volumemounts-1\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodvolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000-name: temp-volume-namepath: /another/path/in/container/to/mount/toemptyDir:sizeLimit: 10", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-471a487f78e5749ba1f562c375e5bb34", "__created_at__": 1748191392.2717485, "content": "://radix.equinor.com/radix-config/#volumemounts-1 \"Direct link to volumemounts-1\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodvolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000-name: temp-volume-namepath: /another/path/in/container/to/mount/toemptyDir:sizeLimit: 10M\n```\n\nThe `volumeMounts` field configures volume mounts within the component running in the specific environment. EnvironmentConfig `volumeMounts` combine or override a component `volumeMounts` if they are defined.\nSee [volumeMounts](https://radix.equinor.com/radix-config/#volumemounts) for more information.\n#### `readOnlyFileSystem`[​](https://radix.equinor.com/radix-config/#readonlyfilesystem \"Direct link to readonlyfilesystem\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodreadOnlyFileSystem: true|false\n```\n\nSee [readOnlyFileSystem](https://radix.equinor.com/radix-config/#readonlyfilesystem-1) for more information.\n#### `runtime`[​](https://radix.equinor.com/radix-config/#runtime \"Direct link to runtime\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodruntime:architecture: amd64|arm64\n```\n\nSee [runtime](https://radix.equinor.com/radix-config/#runtime-1) for more information.\n#### `network`[​](https://radix.equinor.com/radix-config/#network \"Direct link to network\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodnetwork:ingress:public:allow:- 100.1.1.1- 100.2.2.2/30\n```\n\nSee [network](https://radix.equinor.com/radix-config/#network-1) for more information.\n### `authentication`[​](https://radix.equinor.com/radix-config/#authentication \"Direct link to authentication\")\n```\nspec:components:-name: frontendauthentication:clientCertificate:...oauth2:...environmentConfig:-environment: devauthentication:clientCertificate:...oauth2:...\n```\n\nThe `authentication` section can be used to configure an authentication option for either an entire component or a specific environment.\ntip\nNote that the environment config will override the component config for that specific environment.\n#### `clientCertificate`[​](https://radix.equinor.com/radix-config/#clientcertificate \"Direct link to clientcertificate\")\n```\nclientCertificate:verification:\"optional_no_ca\"passCertificateToUpstream:true\n```\n\n`clientCertificate` is a subsection of [authentication](https://radix.equinor.com/radix-config/#authentication) and may be used to configure the Nginx Client Certificate Authentication.\ntip\nNote that the Client Certificate configuration will be omitted if the component does not have a public port.\n  * `verification` Specifies type of verification of client certificates. Possible values are:\n    * `off`: Don't request client certificates and don't do client certificate verification. (default)\n    * `on`: Request a client certificate that must be signed by a certificate that is included in the secret key ca.crt of the secret specified by `nginx.ingress.kubernetes.io/auth-tls-secret: secretName`. Failed certificate verification will result in a status code 400 (Bad Request).\n    * `optional`: Do optional client certificate validation against the CAs from auth-tls-secret. The request fails with status code 400 (Bad Request) when a certificate is provided that is not signed by the CA. When no or an otherwise invalid certificate is provided, the request does not fail, but instead the verification result is sent to the upstream service.\n    * `optional_no_ca`: Do optional client certificate validation, but do not fail the request when the client certificate is not signed by the CAs from `auth-tls-secret`. Certificate verification result is sent to the upstream service.\n  * `passCertificateToUpstream` Indicates if the received certificates should be passed or not to the upstream server in the header ssl-client-cert. `verification` will have to be set to something other than `off` for the certificate to be passed upstream. Possible values are `true` or `false` (default).\n\n\ntip\nIf `verification` has been set to something other than `off` or `passCertificateToUpstream` is set to `true`, a valid certificate will need to be applied in the `Radix Console` for the affected environment(s). This can be found under `Environments\\[environmentName]\\[componentName]\\[componentName]-clientcertca` in the `Radix Console` for your application.\n#### `oauth2`[​](https://radix.equinor.com/radix-config/#oauth2 \"Direct link to oauth2\")\nConfiguration for adding OAuth2 authorization with OIDC to the component.\nCommon `oauth2` settings can be configured at component level and/or in the component's `environmentConfig` section. Properties configured in the `environmentConfig` section override properties at component level. The component must also be configured with a [publicPort](https://radix.equinor.com/radix-config/#publicport).\nWhen OAuth2 is configured for a component, Radix creates an OAuth2 service (using [OAuth2 Proxy](https://oauth2-proxy.github.io/oauth2-proxy/)) to handle the OAuth2 authorization code flow, and to verify the authorization state of incoming requests to the component.\ntip", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-48bffc87ee62e30eeff73faefd150b92", "__created_at__": 1748191392.2717485, "content": "the `environmentConfig` section override properties at component level. The component must also be configured with a [publicPort](https://radix.equinor.com/radix-config/#publicport).\nWhen OAuth2 is configured for a component, Radix creates an OAuth2 service (using [OAuth2 Proxy](https://oauth2-proxy.github.io/oauth2-proxy/)) to handle the OAuth2 authorization code flow, and to verify the authorization state of incoming requests to the component.\ntip\nIf no [ports](https://radix.equinor.com/radix-config/#ports) specified for a component, `authentication.oauth2` should not be set.\nThe OAuth2 service handles incoming requests to the path _/oauth2_ (or the path defined in _proxyPrefix_) for all public DNS names configured for a component. Valid _redirect URIs_ must be registered for the application registration in Azure AD, e.g. `https://myapp.app.radix.equinor.com/oauth2/callback`. See [guide](https://radix.equinor.com/guides/authentication/#configuration) for more information.\n```\noauth2:clientId: ceeabc6f-93f0-41d2-9fe1-ca671b365f6fscope: openid profile email offline_access 2b06f36c-5a78-45a6-9809-44816f59c1ff/user.readsetXAuthRequestHeaders:truesetAuthorizationHeader:trueproxyPrefix: /oauth2oidc:issuerUrl: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0jwksUrl: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/discovery/v2.0/keysskipDiscovery:falseinsecureSkipVerifyNonce:falseloginUrl: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/oauth2/v2.0/authorizeredeemUrl: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/oauth2/v2.0/tokencredentials: azureWorkloadIdentitysessionStoreType: redis # redis or cookieredisStore:connectionUrl: rediss://app-session-store.redis.cache.windows.net:6380cookieStore:minimal:falsecookie:name: _oauth2_proxyexpire: 168h0m0srefresh: 60m0ssameSite: lax\n```\n\n  * `clientId` Required - The client ID of the application, e.g. the application ID of an application registration in Azure AD.\n  * `scope` Optional. Default **openid profile email** - List of OIDC scopes and identity platform specific scopes. More information about scopes when using the Microsoft Identity Platform can be found [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent).\n  * `setXAuthRequestHeaders` Optional. Default **false** - Adds claims from the access token to the _X-Auth-Request-User_ , _X-Auth-Request-Groups_ , _X-Auth-Request-Email_ and _X-Auth-Request-Preferred-Username_ request headers. The Access Token is added to the _X-Auth-Request-Access-Token_ header.\n  * `setAuthorizationHeader` Optional. Default **false** - Adds the OIDC ID Token in the _Authorization: Bearer_ request header.\n  * `proxyPrefix` Optional. Default **/oauth2** - The root path that the OAuth2 proxy should be nested under. The OAuth2 proxy exposes various [endpoints](https://oauth2-proxy.github.io/oauth2-proxy/docs/features/endpoints) from this root path.\n  * `oidc` OIDC configuration\n    * `issuerUrl` Optional. Default **<<https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0>>** - OIDC issuer URL. The default value is set to the Equinor Azure tenant ID. Read more about Microsoft OIDC issuer URLs [here](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc#fetch-the-openid-connect-metadata-document).\n    * `jwksUrl` Optional - OIDC JWKS URL for token verification. Required if `skipDiscovery` is set to **true**.\n    * `skipDiscovery` Optional. Default **false** - Skip automatic discovery OIDC endpoints. `jwksURl`, `loginUrl` and `redeemUrl` must be specified if `skipDiscovery` is **true**.\n    * `insecureSkipVerifyNonce` Optional. Default **false**. Skip verifying the OIDC ID Token's nonce claim. Should only be enabled with OIDC providers that does not support the nonce claim.\n  * `loginUrl` Optional - The authorization URL. Required if `skipDiscovery` is set to **true**.\n  * `redeemUrl` Optional - The URL used to redeem authorization code and refresh token. Required if `skipDiscovery` is set to **true**.\n  * `credentials` Optional. Default **secret**. The type of the authentication. When the value of the `credentials` omitted or set to `secret` a Client Secret component or job secrets is required to be set. See details in the [Authentication with Client", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-356b11f5ef89cb4b2519c5544a043d63", "__created_at__": 1748191392.2717485, "content": "Required if `skipDiscovery` is set to **true**.\n  * `redeemUrl` Optional - The URL used to redeem authorization code and refresh token. Required if `skipDiscovery` is set to **true**.\n  * `credentials` Optional. Default **secret**. The type of the authentication. When the value of the `credentials` omitted or set to `secret` a Client Secret component or job secrets is required to be set. See details in the [Authentication with Client Secret](https://radix.equinor.com/guides/authentication/#authentication-with-client-secret). Supported values:\n    * `secret` - using a client secret to authenticate the OAuth2 proxy.\n    * `azureWorkloadIdentity`- [Azure Workload Identity](https://radix.equinor.com/guides/authentication/#authentication-with-azure-workload-identity) to authenticate the OAuth2 proxy using the Microsoft Entra ID application registration with its `ClientID` set to the `oauth2.clientId` field.\n  * `sessionStoreType` Optional. Default **cookie**. Allowed values: **cookie** , **redis** - Defines where session data shall be stored.\n  * `redisStore` Redis session store configuration if `sessionStoreType` is **redis**.\n    * `connectionUrl` Connection URL of redis server.\n  * `cookieStore` Cookie session store configuration if `sessionStoreType` is **cookie**.\n    * `minimal` Optional. Default **false**. Strips ID token, access token and refresh token from session store cookies. `setXAuthRequestHeaders` and `setAuthorizationHeader` must be set to **false** , and `cookie.refresh` must be set to **0**.\n  * `cookie` Session cookie configuration\n    * `name` Optional. Default **_oauth2_proxy**. Name of the session cookie. If `sessionStoreType` is **cookie** , the ID token and access token is stored in cookies prefixed with this name.\n    * `expire` Optional. Default **168h0m0s**. Expire timeframe for session cookies. Controls the _Expires_ cookie attribute.\n    * `refresh` Optional. Default **60m0s**. Refresh interval defines how often the OAuth2 service should redeem the refresh token to get a new access token. The session cookie's _Expires_ is updated after refresh.\n    * `sameSite` Optional. Default **lax**. The _SameSite_ attribute for the session cookie.\n\n\ntip\nSee [guide](https://radix.equinor.com/guides/authentication/#using-the-radix-oauth2-feature) on how to configure OAuth2 authentication for a component.\n### `enabled`[​](https://radix.equinor.com/radix-config/#enabled \"Direct link to enabled\")\nComponent can be disabled or enabled for all specific environment configurations.\n```\nspec:components:-name: backendenabled:false\n```\n\nDisabled component is not deployed. When a disabling component is already deployed, this component is removed from the application environment on next deployment - this is an equivalent of removing of the component configuration from the `radixconfig.yaml`.\nWhen the option `enabled` is not set, the component is enabled.\nThe component can be disabled in specific environment configurations.\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodenabled:false\n```\n\nRead more details in the [guide](https://radix.equinor.com/guides/enable-and-disable-components/).\n[Job](https://radix.equinor.com/radix-config/#jobs) components can be disabled similar way.\n### `identity`[​](https://radix.equinor.com/radix-config/#identity-2 \"Direct link to identity-2\")\n```\nspec:components:-name: backendidentity:azure:clientId: 00000000-0000-0000-0000-000000000000environmentConfig:-environment: prodidentity:...\n```\n\nThe `identity` section enables mounting of a JWT (JSON web token) that can be used as a federated credential with the [OAuth2 client credentials flow](https://learn.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow#third-case-access-token-request-with-a-federated-credential) to request an access token for an Azure AD application registration or managed identity. The following environment variables are added to the replicas automatically when `identity` is enabled:\n  * **AZURE_AUTHORITY_HOST** (`https://login.microsoftonline.com/`)\n  * **AZURE_CLIENT_ID** (value from `clientId` in configuration, e.g. `b96d264b-7053-4465-a4a7-32be5b0fec49`)\n  * **AZURE_FEDERATED_TOKEN_FILE** (path to the file containg the JWT, e.g. `/var/run/secrets/azure/tokens/azure-identity-token`)\n  * **AZURE_TENANT_ID** (e.g. `3aa4a235-b6e2-48d5-9195-7fcf05b459b0`)\n\n\n`identity` can be configured on the component/job level and/or per environment in the `environmentConfig` section. Configuration in `environmentConfig` overrides configuration on the component/job level.\nSee [guide](https://radix.equinor.com/guides/workload-identity) for more information.\n### `readOnlyFileSystem`[​](https://radix.equinor.com/radix-config/#readonlyfilesystem-1 \"Direct link to readonlyfilesystem-1\")\n```\nspec:components:-name: backendreadOnlyFileSystem: true|falseenvironmentConfig:-", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-0f9e8c4d31f99f06a91e485df20d77d3", "__created_at__": 1748191392.2717485, "content": "`environmentConfig` section. Configuration in `environmentConfig` overrides configuration on the component/job level.\nSee [guide](https://radix.equinor.com/guides/workload-identity) for more information.\n### `readOnlyFileSystem`[​](https://radix.equinor.com/radix-config/#readonlyfilesystem-1 \"Direct link to readonlyfilesystem-1\")\n```\nspec:components:-name: backendreadOnlyFileSystem: true|falseenvironmentConfig:-environment: prodreadOnlyFileSystem: true|false\n```\n\nMounts the container's root filesystem as read-only. Setting `readOnlyFileSystem` in `environmentConfig` overrides the value configured on component level. Defaults to `false` if not specified.\nRead-only filesystems will prevent the application from writing to disk. This is desirable in the event of an intrusion as the attacker will not be able to tamper with the filesystem or write foreign executables to disk. Without a writable filesystem the attack surface is dramatically reduced.\nThere may be a requirement for temporary files or local caching, in which case one or more writable [`emptyDir`](https://radix.equinor.com/radix-config/#volumemounts) volumes can be mounted.\n### `runtime`[​](https://radix.equinor.com/radix-config/#runtime-1 \"Direct link to runtime-1\")\nThe `runtime` section can be configured on the component/job level and in `environmentConfig` for a specific environment. `environmentConfig` takes precedence over component/job level configuration. `runtime` can be optionally re-defined for individual Radix [batch jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api#create-a-batch-of-jobs) or [single jobs](https://radix.equinor.com/guides/jobs/job-manager-and-job-api#create-a-single-job).\n#### `architecture`[​](https://radix.equinor.com/radix-config/#architecture \"Direct link to architecture\")\n```\nspec:components:-name: backendruntime:architecture: amd64|arm64environmentConfig:-environment: prodruntime:architecture: amd64|arm64\n```\n\nThe `architecture` property in `runtime` defines the CPU architecture a component or job should be built and deployed to. Valid values are `amd64` and `arm64`. `amd64` is used if neither is configured. Currently used virtual machines, when `nodeType` is not defined:\n  * `amd64`\n    * CPU: AMD 3rd gen EPYC™ 7763v, 16 cores, architecture: AMD64\n    * Memory: 128 GB\n  * `arm64`\n    * CPU: Arm Ampere® Altra®, 16 cores, architecture: ARM64\n    * Memory: 128 GB\n\n\n#### `nodeType`[​](https://radix.equinor.com/radix-config/#nodetype \"Direct link to nodetype\")\n```\nspec:components:-name: backendruntime:nodeType: memory-optimized-2-v1environmentConfig:-environment: prodruntime:nodeType: gpu-nvidia-1-v1\n```\n\nThe `nodeType` property in `runtime` defines the particular Kubernetes cluster node (virtual machine) in the list of supported by Radix, where a component or job replicas should be running on. Currently supported list of node types:\n  * `memory-optimized-2-v1`\n    * CPU: Intel® 4th gen Xeon®, 96 cores, architecture: AMD64\n    * Memory: 1946 GB\n  * `gpu-nvidia-1-v1`\n    * CPU: Intel® Xeon® E5-2690 v4, 6 cores, architecture: AMD64\n    * Memory: 112 GB\n    * GPU: 1 Nvidia Tesla V100, 16 GB of memory\n\n\nwarning\nNodes, available with `nodeType` property are usually much more expensive than default nodes. Please use them only when needed, preferable with jobs, as these nodes automatically scaled up on started component or jobs (which can take up to 5 minutes) and scaled down (within minutes) when the job is finished.\nnote\nProperties `architecture` and `nodeType` cannot be used at the same time, but they can be used one on the component or job level, another on the `environmentConfig` level.\n```\nspec:components:-name: backendruntime:nodeType: memory-optimized-2-v1environmentConfig:-environment: prodruntime:architecture: amd64|arm64\n```\n\nIf you use the [`build and deploy`](https://radix.equinor.com/guides/build-and-deploy) pipeline to build components or jobs, [`useBuildKit`](https://radix.equinor.com/radix-config/#usebuildkit) must be enabled if at least one component or job is configured for `arm64`. Radix will run the **build steps** on nodes with matching architecture, which in most cases mean that you do not have to change anything in the Dockerfile to support the configured architecture. This applies as long as the images defined in the Dockerfile's `FROM <image>` supports this architecture.\nFor deploy-only components and jobs (with [`image`](https://radix.equinor.com/radix-config/#image) property set), make sure that the selected image supports the configured architecture. Many frequently used public images, like [nginx-unprivileged](https://hub.docker.com/r/nginxinc/nginx-unprivileged) and [bitnami/redis](https://hub.docker.com/r/bitnami/redis/tags), includes variants for both `amd64` and `arm64` in the same", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-999d2f370bfc4f4a18ee6b60259f32c2", "__created_at__": 1748191392.2717485, "content": "`](https://radix.equinor.com/radix-config/#image) property set), make sure that the selected image supports the configured architecture. Many frequently used public images, like [nginx-unprivileged](https://hub.docker.com/r/nginxinc/nginx-unprivileged) and [bitnami/redis](https://hub.docker.com/r/bitnami/redis/tags), includes variants for both `amd64` and `arm64` in the same image. Radix (Kubernetes) will pull the appropriate variant based on the configured architecture.\n### `network`[​](https://radix.equinor.com/radix-config/#network-1 \"Direct link to network-1\")\n```\nspec:environment:-name: dev-name: qa-name: prodcomponents:-name: backendnetwork:ingress:public:proxyBodySize: 500mproxyReadTimeout:5proxySendTimeout:10proxyBufferSize: 16kallow:- 100.1.1.1- 110.1.1.1/30environmentConfig:-environment: devnetwork:ingress:public:proxyBodySize: 20mproxyReadTimeout:30proxySendTimeout:30proxyBufferSize: 8kallow:[]-environment: qanetwork:ingress:public:proxyBodySize: 100mallow:- 200.1.1.1- 200.10.1.1-environment: prod\n```\n\n`network.ingress.public` contains settings used to control the behavior of [public endpoints](https://radix.equinor.com/docs/topic-domain-names/). These settings can be configured on the component level and/or in `environmentConfig` for a specific environment. `environmentConfig` takes precedence over component level configuration.\n  * `allow`: Defines a list of public IP addresses or CIDRs allowed to access the component's public endpoints. Setting `allow` to an empty list allows access from all public IP addresses. **Note** : When `allow` is configured in `environmentConfig`, it will _overwrite_ any values defined on component level.\n  * `proxyBodySize`: Sets the maximum allowed size of the client request body. Sizes can be specified in bytes, kilobytes (suffixes k and K), megabytes (suffixes m and M), or gigabytes (suffixes g and G), for example \"1024\", \"64k\", \"32m\" or \"2g\". If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Setting this value to \"0\" disables checking of client request body size. The default is 100m.\n  * `proxyReadTimeout`: Defines a timeout, in seconds, for reading a response from the proxied server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the proxied server does not transmit anything within this time, the connection is closed. The default is 60 seconds.\n  * `proxySendTimeout`: Defines a timeout, in seconds, for transmitting a request to the proxied server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the proxied server does not receive anything within this time, the connection is closed. The default is 60 seconds.\n  * `proxyBufferSize`: Sets the size of the buffer used for reading the first part of the response received from the proxied server. The size must be large enough to hold the response headers. Sizes can be specified in bytes, kilobytes (suffixes k and K), megabytes (suffixes m and M), or gigabytes (suffixes g and G) for example, \"1024\", \"64k\", \"32m\", \"2g\". If the response headers exceed the buffer size, the 502 (Bad Gateway) error is returned to the client. The default is `16k`.\n\n\nCaution\nSetting `proxyBodySize` to \"0\", or an unnecessary high value, can lead to instability/denial of service or increased cost, depending on how the request body is processed by the backend, e.g. when buffering to memory or storing the content to disk, either locally or remotely. Never set the value to \"0\" unless the backend component is configured to enforce a limit.\n## `jobs`[​](https://radix.equinor.com/radix-config/#jobs \"Direct link to jobs\")\nThis is where you specify the various [jobs](https://radix.equinor.com/guides/jobs) for your application.\n### `src`[​](https://radix.equinor.com/radix-config/#src-2 \"Direct link to src-2\")\n```\nspec:jobs:-name: computesrc: computeschedulerPort:8000-name: etlsrc: etlschedulerPort:8000\n```\n\nSee [src](https://radix.equinor.com/radix-config/#src) for a component for more information.\n### `dockerfileName`[​](https://radix.equinor.com/radix-config/#dockerfilename-2 \"Direct link to dockerfilename-2\")\n```\nspec:jobs:-name: computedockerfileName: compute.DockerfileschedulerPort:8000\n```\n\nSee [dockerfileName](https://radix.equinor.com/radix-config/#dockerfilename) for a component for more information.\n### `image`[​](https://radix.equinor.com/radix-config/#image-2 \"Direct link to image-2\")\n```\nspec:jobs:-name: computeimage: privaterepodeleteme.azurecr.io/compute:latestschedulerPort:800", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-7c5c6cd6b7cd89eb25c472e5716d1300", "__created_at__": 1748191392.2717485, "content": "ockerfileschedulerPort:8000\n```\n\nSee [dockerfileName](https://radix.equinor.com/radix-config/#dockerfilename) for a component for more information.\n### `image`[​](https://radix.equinor.com/radix-config/#image-2 \"Direct link to image-2\")\n```\nspec:jobs:-name: computeimage: privaterepodeleteme.azurecr.io/compute:latestschedulerPort:8000\n```\n\nSee [image](https://radix.equinor.com/radix-config/#image) for a component for more information.\n### `schedulerPort`[​](https://radix.equinor.com/radix-config/#schedulerport \"Direct link to schedulerport\")\n```\nspec:jobs:-name: computeschedulerPort:8000\n```\n\nThe port number that the [job-scheduler](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) will listen to for HTTP requests to manage jobs. schedulerPort is a **required** field.\nIn the example above, the URL for the compute job-scheduler is `http://compute:8000`\n### `notifications`[​](https://radix.equinor.com/radix-config/#notifications \"Direct link to notifications\")\n```\nspec:jobs:-name: computenotifications:webhook: http://api:8080/monitor-batch-status\n```\n\n`webhook` is an optional URL to the Radix application component or job component which will be called when any of the job-component's running jobs or batches changes states. Only changes are sent by POST method with a `application/json` `ContentType` in a [batch event format](https://radix.equinor.com/guides/jobs/notifications#radix-batch-event). Read [more](https://radix.equinor.com/guides/jobs/notifications)\n### `batchStatusRules`[​](https://radix.equinor.com/radix-config/#batchstatusrules \"Direct link to batchstatusrules\")\n```\nspec:jobs:-name: computebatchStatusRules:-condition: Anyoperator: InjobStatuses:- FailedbatchStatus: Failed-condition: Alloperator: NotInjobStatuses:- Waiting- Active- RunningbatchStatus: Completed\n```\n\n`batchStatusRules` - Optional rules to define batch statuses by their jobs statuses.\n  * `condition` - `Any`, `All`\n  * `operator` - `In`, `NotIn`\n  * `jobStatuses` - `Waiting`, `Active`, `Running`, `Succeeded`, `Failed`, `Stopped`\n  * `batchStatus` - `Waiting`, `Active`, `Running`, `Succeeded`, `Failed`, `Stopping`, `Stopped`, `Completed`\n\n\nRules are applied in the order from top to bottom in the rules list. When any rule matches, rules following it are ignored.\nIf `batchStatusRules` are not defined or no rules match a batch status is set by following rules:\n  * `Waiting` - no jobs are started\n  * `Active` - any jobs are in `Active` or `Running` state\n  * `Completed` - no jobs are in `Waiting`, `Active` or `Running` states\n\n\nBatch statuses, default or defined by rules, are the same in the Radix console, returned by [job notifications](https://radix.equinor.com/guides/jobs/notifications) and [Job Manager API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api). If rules are changed, they will be applied on next deployment of an application environment, also affecting already existing batches statuses in this environment.\n`batchStatusRules` [can be overridden](https://radix.equinor.com/radix-config/#batchstatusrules-1) for individual environments.\n### `monitoring`[​](https://radix.equinor.com/radix-config/#monitoring-2 \"Direct link to monitoring-2\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodmonitoring:true\n```\n\nWhen the `monitoring` field of a job-component environment config is set to `true`, is used to expose custom application metrics for the specific environment.\nSee [monitoring](https://radix.equinor.com/radix-config/#monitoring) for more information.\n### `monitoringConfig`[​](https://radix.equinor.com/radix-config/#monitoringconfig-1 \"Direct link to monitoringconfig-1\")\n```\nspec:jobs:-name: computeports:-name: metricsport:1234monitoringConfig:portName: metricspath: /my-metrics\n```\n\nSee [monitoringConfig](https://radix.equinor.com/radix-config/#monitoringconfig) for a component for more information.\n### `payload`[​](https://radix.equinor.com/radix-config/#payload \"Direct link to payload\")\n```\nspec:jobs:-name: computeschedulerPort:8000payload:path: /compute/args\n```\n\nJob specific arguments must be sent in the request body to the [job-scheduler](https://radix.equinor.com/guides/jobs/job-manager-and-job-api) as a JSON document with an element named `payload` and a value of type string.\nThe data type of the `payload` value is string, and it can therefore contain any type of data (text, json, binary) as long as you encode it as a string, e.g. base64, when sending it to the job-scheduler, and decoding it when reading it from the mounted file inside the job container. The content of the payload is then mounted into the", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-da143f8e84d987af9053511a2f2d209b", "__created_at__": 1748191392.2717485, "content": "-and-job-api) as a JSON document with an element named `payload` and a value of type string.\nThe data type of the `payload` value is string, and it can therefore contain any type of data (text, json, binary) as long as you encode it as a string, e.g. base64, when sending it to the job-scheduler, and decoding it when reading it from the mounted file inside the job container. The content of the payload is then mounted into the job container as a file named `payload` in the directory specified in the `payload.path`. The max size of the payload is 1MB.\nIn the example above, a payload sent to the job-scheduler will be mounted as file `/compute/args/payload`\n### `resources`[​](https://radix.equinor.com/radix-config/#resources-1 \"Direct link to resources-1\")\n```\nspec:jobs:-name: computeresources:requests:memory:\"256Mi\"cpu:\"400m\"limits:cpu:\"600m\"\n```\n\nSee [resources](https://radix.equinor.com/radix-config/#resources-common) for more information.\n### `secrets`[​](https://radix.equinor.com/radix-config/#secrets-2 \"Direct link to secrets-2\")\n```\nspec:jobs:-name: computeschedulerPort:8000secrets:- DB_PASS\n```\n\nSee [secrets](https://radix.equinor.com/radix-config/#secrets) for a component for more information.\n### `resources` (common)[​](https://radix.equinor.com/radix-config/#resources-common-1 \"Direct link to resources-common-1\")\n```\nspec:jobs:-name: computeschedulerPort:8000resources:requests:memory:\"6Gi\"cpu:\"1000m\"limits:cpu:\"2000m\"\n```\n\nSee [resources](https://radix.equinor.com/radix-config/#resources-common) for a component for more information.\n### `variables` (common)[​](https://radix.equinor.com/radix-config/#variables-common-1 \"Direct link to variables-common-1\")\n```\nspec:jobs:-name: computeschedulerPort:8000variables:DB_NAME: my-db\n```\n\nSee [variables](https://radix.equinor.com/radix-config/#variables-common) for a component for more information.\n### `timeLimitSeconds`[​](https://radix.equinor.com/radix-config/#timelimitseconds \"Direct link to timelimitseconds\")\n```\nspec:jobs:-name: computeschedulerPort:8000timeLimitSeconds:120\n```\n\nThe maximum number of seconds a job can run, with a default value of `43200` seconds (12 hours). If the job's running time exceeds the limit, a SIGTERM signal is sent to allow the job to gracefully shut down with a 30 second time limit, after which it will be forcefully terminated.\n### `backoffLimit`[​](https://radix.equinor.com/radix-config/#backofflimit \"Direct link to backofflimit\")\n```\nspec:jobs:-name: computebackoffLimit:5\n```\n\nDefines the number of times a job will be restarted if its container exits in error. Once the `backoffLimit` has been reached the job will be marked as `Failed`. The default value is `0`.\n### `failurePolicy`[​](https://radix.equinor.com/radix-config/#failurepolicy \"Direct link to failurepolicy\")\n```\nspec:jobs:-name: computebackoffLimit:5failurePolicy:rules:-action: FailJobonExitCodes:operator: Invalues:[1]-action: IgnoreonExitCodes:operator: Invalues:[143]environmentConfig:-environment: prodfailurePolicy:rules:-action: FailJobonExitCodes:operator: Invalues:[42]\n```\n\n`failurePolicy` defines how job container failures should be handled based on the exit code. When a job container exits with a non-zero exit code, it is evaluated against the `rules` in the order they are defined. Once a rule matches the exit code, the remaining rules are ignored, and the defined `action` is performed. When no rule matches the exit code, the default handling is applied.\nPossible values for `action` are:\n  * `FailJob`: indicates that the job should be marked as `Failed`, even if [`backoffLimit`](https://radix.equinor.com/radix-config/#backofflimit) has not been reached.\n  * `Ignore`: indicates that the counter towards [`backoffLimit`](https://radix.equinor.com/radix-config/#backofflimit) should not be incremented.\n  * `Count`: indicates that the job should be handled the default way. The counter towards [`backoffLimit`](https://radix.equinor.com/radix-config/#backofflimit) is incremented.\n\n\n`failurePolicy` can be configured on the job level, or in `environmentConfig` for a specific environment. Configuration in `environmentConfig` will override all rules defined on the job level.\n### `volumeMounts`[​](https://radix.equinor.com/radix-config/#volumemounts-2 \"Direct link to volumemounts-2\")\n```\nspec:jobs:-name: computevolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000\n```\n\nThe `volumeMounts` field configures volume mounts within the job-component.\nSee [volumeMounts](https://", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-6ec53a02ed3f170c02c260393986c122", "__created_at__": 1748191392.2717485, "content": "​](https://radix.equinor.com/radix-config/#volumemounts-2 \"Direct link to volumemounts-2\")\n```\nspec:jobs:-name: computevolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000\n```\n\nThe `volumeMounts` field configures volume mounts within the job-component.\nSee [volumeMounts](https://radix.equinor.com/radix-config/#volumemounts) for more information.\n### `imageTagName`[​](https://radix.equinor.com/radix-config/#imagetagname-2 \"Direct link to imagetagname-2\")\n```\njobs:-name: computeimage: docker.pkg.github.com/equinor/myapp/compute:{imageTagName}imageTagName: master-latest\n```\n\nThe `imageTagName` allows for flexible configuration of fixed images, built outside of Radix. It can be configured with separate tag for each environment.\nSee [imageTagName](https://radix.equinor.com/radix-config/#imagetagname) for a component for more information.\n### `environmentConfig`[​](https://radix.equinor.com/radix-config/#environmentconfig-1 \"Direct link to environmentconfig-1\")\nThe `environmentConfig` section is to set environment-specific settings for each job.\n#### `notifications`[​](https://radix.equinor.com/radix-config/#notifications-1 \"Direct link to notifications-1\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodnotifications:webhook: http://api:8080/monitor-batch-status\n```\n\nSee [notifications](https://radix.equinor.com/radix-config/#notifications) for a component for more information.\n#### `batchStatusRules`[​](https://radix.equinor.com/radix-config/#batchstatusrules-1 \"Direct link to batchstatusrules-1\")\n```\nspec:jobs:-name: computebatchStatusRules:-condition: Alloperator: NotInjobStatuses:- Waiting- Active- RunningbatchStatus: CompletedenvironmentConfig:-environment: prodbatchStatusRules:-condition: Alloperator: InjobStatuses:- SucceededbatchStatus: Succeeded\n```\n\nWhen `batchStatusRules` is defined for an environment it fully overrides the job's `batchStatusRules`. See [batchStatusRules](https://radix.equinor.com/radix-config/#batchstatusrules) for a job for more information.\n#### `monitoring`[​](https://radix.equinor.com/radix-config/#monitoring-3 \"Direct link to monitoring-3\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodmonitoring:true\n```\n\nWhen the `monitoring` field of a job-component environment config is set to `true`, is used to expose custom application metrics for the specific environment.\nSee [monitoring](https://radix.equinor.com/radix-config/#monitoring) for more information.\n#### `resources`[​](https://radix.equinor.com/radix-config/#resources-2 \"Direct link to resources-2\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodresources:requests:memory:\"6Gi\"cpu:\"1000m\"limits:cpu:\"2000m\"\n```\n\nSee [resources](https://radix.equinor.com/radix-config/#resources) for a component for more information.\n#### `variables`[​](https://radix.equinor.com/radix-config/#variables-3 \"Direct link to variables-3\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: devvariables:DB_HOST:\"db-dev\"DB_PORT:\"1234\"-environment: prodvariables:DB_HOST:\"db-prod\"DB_PORT:\"9876\"\n```\n\nSee [variables](https://radix.equinor.com/radix-config/#variables-common) for a component for more information.\n#### `imageTagName`[​](https://radix.equinor.com/radix-config/#imagetagname-3 \"Direct link to imagetagname-3\")\n```\njobs:-name: computeimage: docker.pkg.github.com/equinor/myapp/compute:{imageTagName}environmentConfig:-environment: qaimageTagName: master-latest-environment: prodimageTagName: release-39f1a082\n```\n\nThe `imageTagName` can be configured with separate tag for each environment. Environment `imageTagName` overrides a job-component `imageTagName` if it is also defined.\nSee [imageTagName](https://radix.equinor.com/radix-config/#imagetagname) for a component for more information.\n#### `volumeMounts`[​](https://radix.equinor.com/radix-config/#volumemounts-3 \"Direct link to volumemounts-3\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodvolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000\n```\n\nThe `volumeMounts` field configures volume mounts within the job-component running in the specific environment. EnvironmentConfig `volumeMounts` combine or override a job-component `volumeMounts` if they are defined.\nSee [volumeMounts](https://radix.equinor.com/radix-config/#volumemounts) for more information.\n#### `timeLimitSeconds`[​", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-13a344e6cfe2adff683a0adf95acd35b", "__created_at__": 1748191392.2717485, "content": "/mount/toblobFuse2:container: container-nameuid:1000\n```\n\nThe `volumeMounts` field configures volume mounts within the job-component running in the specific environment. EnvironmentConfig `volumeMounts` combine or override a job-component `volumeMounts` if they are defined.\nSee [volumeMounts](https://radix.equinor.com/radix-config/#volumemounts) for more information.\n#### `timeLimitSeconds`[​](https://radix.equinor.com/radix-config/#timelimitseconds-1 \"Direct link to timelimitseconds-1\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodtimeLimitSeconds:130\n```\n\nSee [timeLimitSeconds](https://radix.equinor.com/radix-config/#timelimitseconds) for more information.\n#### `backoffLimit`[​](https://radix.equinor.com/radix-config/#backofflimit-1 \"Direct link to backofflimit-1\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodbackoffLimit:10\n```\n\nSee [backoffLimit](https://radix.equinor.com/radix-config/#backofflimit) for more information.\n#### `failurePolicy`[​](https://radix.equinor.com/radix-config/#failurepolicy-1 \"Direct link to failurepolicy-1\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodbackoffLimit:5failurePolicy:rules:-action: FailJobonExitCodes:operator: Invalues:[42]-action: CountonExitCodes:operator: Invalues:[1,2,3]-action: IgnoreonExitCodes:operator: Invalues:[143]\n```\n\nSee [failurePolicy](https://radix.equinor.com/radix-config/#failurepolicy) for more information.\n#### `readOnlyFileSystem`[​](https://radix.equinor.com/radix-config/#readonlyfilesystem-2 \"Direct link to readonlyfilesystem-2\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodreadOnlyFileSystem: true|false\n```\n\nSee [readOnlyFileSystem](https://radix.equinor.com/radix-config/#readonlyfilesystem-1) for more information.\n#### `runtime`[​](https://radix.equinor.com/radix-config/#runtime-2 \"Direct link to runtime-2\")\n##### `architecture`[​](https://radix.equinor.com/radix-config/#architecture-1 \"Direct link to architecture-1\")\n```\nspec:jobs:-name: computeenvironmentConfig:-environment: prodruntime:architecture: amd64|arm64\n```\n\n##### `nodeType`[​](https://radix.equinor.com/radix-config/#nodetype-1 \"Direct link to nodetype-1\")\n```\nspec:components:-name: backendenvironmentConfig:-environment: prodruntime:nodeType: memory-optimized-2-v1\n```\n\nSee [runtime](https://radix.equinor.com/radix-config/#runtime-1) for more information.\n### `identity`[​](https://radix.equinor.com/radix-config/#identity-3 \"Direct link to identity-3\")\n```\nspec:jobs:-name: computeidentity:azure:clientId: 00000000-0000-0000-0000-000000000000environmentConfig:-environment: prodidentity:...\n```\n\nSee [identity](https://radix.equinor.com/radix-config/#identity) for more information.\n### `readOnlyFileSystem`[​](https://radix.equinor.com/radix-config/#readonlyfilesystem-3 \"Direct link to readonlyfilesystem-3\")\n```\nspec:jobs:-name: computereadOnlyFileSystem: true|falseenvironmentConfig:-environment: prodreadOnlyFileSystem: true|false\n```\n\nSee [readOnlyFileSystem](https://radix.equinor.com/radix-config/#readonlyfilesystem-1) for more information.\n### `runtime`[​](https://radix.equinor.com/radix-config/#runtime-3 \"Direct link to runtime-3\")\n```\nspec:jobs:-name: computeruntime:architecture: amd64|arm64environmentConfig:-environment: prodruntime:architecture: amd64|arm64\n```\n\nSee [runtime](https://radix.equinor.com/radix-config/#runtime-1) for more information.\n## `dnsAppAlias`[​](https://radix.equinor.com/radix-config/#dnsappalias \"Direct link to dnsappalias\")\n```\nspec:dnsAppAlias:environment: prodcomponent: frontend\n```\n\nAs a convenience for nicer URLs, `dnsAppAlias` creates a DNS alias in the form of `<app-name>.app.<cluster-dns-zone>` (`<cluster-dns-zone>` depends on which [Radix cluster](https://radix.equinor.com/start/radix-clusters/) is hosting the application) for the specified environment and component.\nIn the example above, if the application is host in the **Platform (North Europe)** cluster, the component **frontend** in environment **prod** will be accessible from `myapp.app.radix.equinor.com`, in addition to automatically allocated [domain names](https://radix.equinor.com/docs/topic-domain-names/).\n## `dnsAlias`[​](https://radix.equinor.com/radix-config/#dnsalias \"Direct link to dnsalias\")\n```\nspec:dnsAlias:-", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-33c21d68b6786178fa5ebf47e7bb7c36", "__created_at__": 1748191392.2717485, "content": "the application is host in the **Platform (North Europe)** cluster, the component **frontend** in environment **prod** will be accessible from `myapp.app.radix.equinor.com`, in addition to automatically allocated [domain names](https://radix.equinor.com/docs/topic-domain-names/).\n## `dnsAlias`[​](https://radix.equinor.com/radix-config/#dnsalias \"Direct link to dnsalias\")\n```\nspec:dnsAlias:-alias: myappenvironment: prodcomponent: frontend\n```\n\n`dnsAlias` creates one or several DNS aliases in the form of `<alias>.<cluster-dns-zone>` (`<cluster-dns-zone>` depends on which [Radix cluster](https://radix.equinor.com/start/radix-clusters/) is hosting the application) for the specified environment and component. There are few reserved aliases which cannot be used:\n`www`, `app`, `api`, `console`, `webhook`, `playground`, `dev`, `grafana`, `prometheus`, `canary`, `cost-api`.\nIn the example above, if the application is host in the **Platform (North Europe)** cluster, the component **frontend** in environment **prod** will be accessible from `myapp.radix.equinor.com`, in addition to automatically allocated [domain names](https://radix.equinor.com/docs/topic-domain-names/).\n## `dnsExternalAlias`[​](https://radix.equinor.com/radix-config/#dnsexternalalias \"Direct link to dnsexternalalias\")\n```\nspec:dnsExternalAlias:-alias: some.alias.comenvironment: prodcomponent: frontenduseCertificateAutomation:[false|true]-alias: another.alias.comenvironment: prodcomponent: frontenduseCertificateAutomation:[false|true]\n```\n\nIt is possible to have multiple custom DNS aliases (i.e. to choose your own custom domains) for the application. The `dnsExternalAlias` needs to point to a component marked as public. It can be any domain name, which can in turn be used for public URLs to access the application.\nIn the example above, the component **frontend** hosted in environment **prod** will be accessible from both `some.alias.com` and `another.alias.com`, as long as the correct certificate has been set.\nThe `useCertificateAutomation` property defines how the TLS certificate for the alias is issued. When set to `true`, certificate issuing and renewal is automatically handled by Radix, and when set to `false`, the application administrator is responsible for providing a valid certificate and private key. If the value is toggled, Radix deletes the existing certificate and private key. This will cause a TLS error when accessing the external DNS alias until a new certificate and private key is set.\nThere is a [detailed guide](https://radix.equinor.com/guides/external-alias/) on how to set up external aliases.\n## `privateImageHubs`[​](https://radix.equinor.com/radix-config/#privateimagehubs \"Direct link to privateimagehubs\")\n```\nspec:components:-name: webserverimage: myappacr.azurecr.io/myapp-base:latestprivateImageHubs:myappacr.azurecr.io:username: 23452345-3d71-44a7-8476-50e8b281abbcemail: radix@statoilsrm.onmicrosoft.com\n```\n\nIt is possible to pull images from private image hubs during deployment for an application. This means that you can add a reference to a private image hub in radixconfig.yaml file using the `image:` tag. See example above.\nWith the `useBuildKit: true` setting in your `radixconfig.yaml`, you can also use privateImageHub credentials within the Dockerfile `FROM` instruction.\n```\nFROM myappacr.azurecr.io/myapp-base:latest\n```\n\nA `password` for these must be set via the Radix Web Console (under Configuration -> Private image hubs).\nTo get more information on how to connect to a private Azure container registry (ACR), see the following [guide](https://thorsten-hans.com/how-to-use-private-azure-container-registry-with-kubernetes). The chapter `Provisioning an Azure Container Registry` provide information on how to get service principle `username` and `password`. It is also possible to create a Service Principle in Azure AD, and then manually grant it access to your ACR.\ntip\nSee [guide](https://radix.equinor.com/guides/deploy-only/) on how make use of `privateImageHubs` in a deploy-only scenario.\n## `node`[​](https://radix.equinor.com/radix-config/#node \"Direct link to node\")\n`node` section is deprecated. Please use [nodeType](https://radix.equinor.com/radix-config/#nodetype) instead.\n## `secretRefs`[​](https://radix.equinor.com/radix-config/#secretrefs \"Direct link to secretrefs\")\n### `azureKeyVault`[​](https://radix.equinor.com/radix-config/#azurekeyvault \"Direct link to azurekeyvault\")\nAzure Key Vault secrets, keys and certificates can be used in Radix as secrets. Once configured, they are available in Radix application component replicas as environment variables and files content.\n```\nsecretRefs:azureKeyVaults:-name: radix-app-secretspath: /mnt/key-vaultuseAzureIdentity:trueitems:-name: connection-string-devtype: secretenvVar: CONNECTION_STRING-name: key1type: keyenvVar: KEY1-name: cert1type: certenvVar: CERT1\n```\n\n  * `azure", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5c76ca11a2d19a2337acb93b7284e03a", "__created_at__": 1748191392.2717485, "content": "be used in Radix as secrets. Once configured, they are available in Radix application component replicas as environment variables and files content.\n```\nsecretRefs:azureKeyVaults:-name: radix-app-secretspath: /mnt/key-vaultuseAzureIdentity:trueitems:-name: connection-string-devtype: secretenvVar: CONNECTION_STRING-name: key1type: keyenvVar: KEY1-name: cert1type: certenvVar: CERT1\n```\n\n  * `azureKeyVaults` - list of Azure Key Vault configurations.\n  * `name` - Name of the Key Vault resource in an Azure subscription. Radix supports capital letters in the name, but not spaces.\n  * `path` - Folder path in running replica container, where secrets, keys and/or certificate contents are available as files (with file names, corresponding to their names in the Azure Key Vault). This field is optional. If set, it overrides default path: `/mnt/azure-key-vault/<azure-key-vault-name>`.\n  * `useAzureIdentity` - If set to `true`, Radix will use [Azure Workload Identity](https://radix.equinor.com/guides/workload-identity/) to acquire credentials for accessing Azure Key Vault using the service principal configured in [identity.azure](https://radix.equinor.com/radix-config/#identity). This field is optional, with default value `false`. If omitted or set to `false`, credentials are acquired using [Azure Service Principal Client ID and Client Secret](https://radix.equinor.com/guides/azure-key-vaults/#authentication-with-azure-service-principal-client-id-and-client-secret).\n  * `items` - list of secrets, keys and/or certificates with corresponding environment variable names. \n    * `name` - name of secret, key or certificate in an Azure Key Vault.\n    * `type` - Type of the item in the Azure Key Vault. Possible values: `secret`, `key`, `cert`. This field is optional, by default it is `secret`.\n    * `envVar` - Name of an environment variable, which will contain specified secret, key or certificate. This field is optional - environment variable is not created if it is not specified, only file exist (see the property `path`).\n    * `alias` - Alias of the file (see the property `path`). This field is optional. Default value is the same as `name`.\n\n\n`secretRefs` can be configured for entire component, for component environments or only for specific component environments. Configuration in component environments overrides similar component properties.\nUpdated values of secrets, keys or certificates in Azure Key Vault are not automatically synced to corresponding secrets of already running replicas - they can be synced with a new deployment.\nAzure Key Vaults configurable the same way in job-components.\ntip\nSee [guide](https://radix.equinor.com/guides/azure-key-vaults/) on how to configure Azure Key Vault in Radix.\n# Example `radixconfig.yaml` file\nThis example showcases all options; in many cases the defaults will be a good choice instead.\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: myappspec:build:secrets:- SECRET_1- SECRET_2environments:-name: devbuild:from: masterwebhookEnabled:false-name: prodegress:allowRadix:truerules:-destinations:-\"143.97.5.5/32\"-\"143.97.6.1/32\"ports:-port:443protocol: TCPcomponents:-name: frontendsrc: frontendports:-name: httpport:8000-name: metricsport:8060publicPort: httpmonitoringConfig:portName: metricspath: /api/my-magic-metricsauthentication:clientCertificate:verification:\"optional_no_ca\"enabled:truevolumeMounts:-name: volume-namepath: /path/in/container/to/mount/toblobFuse2:container: container-nameuid:1000secretRefs:azureKeyVaults:-name: radix-app-secretspath: /mnt/key-vaultuseAzureIdentity:trueitems:-name: connection-string-devtype: secretenvVar: CONNECTION_STRING-name: key1type: keyenvVar: KEY1-name: cert1type: certenvVar: CERT1identity:azure:clientId: 00000000-0000-0000-0000-000000000000environmentConfig:-environment: prodmonitoring:trueresources:requests:memory:\"64Mi\"cpu:\"100m\"limits:cpu:\"200m\"authentication:clientCertificate:passCertificateToUpstream:trueenabled:falseidentity:azure:clientId: 00000000-0000-0000-0000-000000000001-environment: devmonitoring:falseresources:requests:memory:\"128Mi\"cpu:\"200m\"limits:cpu:\"400m\"authentication:clientCertificate:verification:\"off\"passCertificateToUpstream:false-name: backendsrc: backendports:-name: httpport:5000environmentConfig:-environment: devvariables:DB_HOST:\"db-dev\"DB_PORT:\"1234\"-environment: prodreplicas:2variables:DB_HOST:\"db-prod\"DB_PORT:\"9876\"secrets:- DB_PASSjobs:-name: computeschedulerPort:8000ports:-name: httpport:9000payload:path: /compute/argstimeLimitSeconds:300backoffLimit:2resources:requests:memory:\"256Mi\"cpu:\"400m\"limits:cpu:\"600m\"variables:DB_NAME:\"compute-db\"secrets:- DB_USER- DB_PASSidentity:azure:clientId: 00000000-0000-0000-0000-000000000", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f9cf09f6b7e46fd81b0282f3b0dad094", "__created_at__": 1748191392.2717485, "content": ":- DB_PASSjobs:-name: computeschedulerPort:8000ports:-name: httpport:9000payload:path: /compute/argstimeLimitSeconds:300backoffLimit:2resources:requests:memory:\"256Mi\"cpu:\"400m\"limits:cpu:\"600m\"variables:DB_NAME:\"compute-db\"secrets:- DB_USER- DB_PASSidentity:azure:clientId: 00000000-0000-0000-0000-000000000000notifications:webhook: http://backend:5000/monitor-batch-statusenvironmentConfig:-environment: devvariables:DB_HOST:\"db-dev\"DB_PORT:\"1234\"notifications:webhook:\"\"-environment: prodtimeLimitSeconds:600backoffLimit:10monitoring:truevariables:DB_HOST:\"db-prod\"DB_PORT:\"1234\"identity:azure:clientId: 00000000-0000-0000-0000-000000000001notifications:webhook: http://backend:5000/monitor-batch-status-proddnsAppAlias:environment: prodcomponent: frontenddnsExternalAlias:-alias: some.alias.comenvironment: prodcomponent: frontend-alias: another.alias.comenvironment: prodcomponent: frontend\n```\n\n  * [`name`](https://radix.equinor.com/radix-config/#name)\n  * [`build`](https://radix.equinor.com/radix-config/#build)\n    * [`useBuildKit`](https://radix.equinor.com/radix-config/#usebuildkit)\n    * [`useBuildCache`](https://radix.equinor.com/radix-config/#usebuildcache)\n      * [Refresh Build Cache](https://radix.equinor.com/radix-config/#refresh-build-cache)\n    * [`secrets`](https://radix.equinor.com/radix-config/#secrets)\n    * [`subPipeline`](https://radix.equinor.com/radix-config/#subpipeline)\n      * [`variables`](https://radix.equinor.com/radix-config/#variables)\n      * [`identity`](https://radix.equinor.com/radix-config/#identity)\n  * [`environments`](https://radix.equinor.com/radix-config/#environments)\n    * [`name`](https://radix.equinor.com/radix-config/#name-1)\n    * [`build`](https://radix.equinor.com/radix-config/#build-1)\n    * [`webhookEnabled`](https://radix.equinor.com/radix-config/#webhookenabled)\n    * [`egress`](https://radix.equinor.com/radix-config/#egress)\n    * [`subPipeline`](https://radix.equinor.com/radix-config/#subpipeline-1)\n      * [`variables`](https://radix.equinor.com/radix-config/#variables-1)\n      * [`identity`](https://radix.equinor.com/radix-config/#identity-1)\n  * [`components`](https://radix.equinor.com/radix-config/#components)\n    * [`src`](https://radix.equinor.com/radix-config/#src)\n    * [`dockerfileName`](https://radix.equinor.com/radix-config/#dockerfilename)\n    * [`image`](https://radix.equinor.com/radix-config/#image)\n    * [`replicas`](https://radix.equinor.com/radix-config/#replicas)\n    * [`ports`](https://radix.equinor.com/radix-config/#ports)\n    * [`publicPort`](https://radix.equinor.com/radix-config/#publicport)\n    * [`monitoring`](https://radix.equinor.com/radix-config/#monitoring)\n    * [`monitoringConfig`](https://radix.equinor.com/radix-config/#monitoringconfig)\n    * [`horizontalScaling`](https://radix.equinor.com/radix-config/#horizontalscaling)\n      * [`azureServiceBus` trigger](https://radix.equinor.com/radix-config/#azureservicebus-trigger)\n    * [`healthChecks`](https://radix.equinor.com/radix-config/#healthchecks)\n    * [`imageTagName`](https://radix.equinor.com/radix-config/#imagetagname)\n    * [`volumeMounts`](https://radix.equinor.com/radix-config/#volumemounts)\n      * [`emptyDir`](https://radix.equinor.com/radix-config/#emptydir)\n      * [`blobFuse2`](https://radix.equinor.com/radix-config/#blobfuse2)\n    * [`ingressConfiguration`](https://radix.equinor.com/radix-config/#ingressconfiguration)\n    * [`alwaysPullImageOnDeploy`](https://radix.equinor.com/radix-config/#alwayspullimageondeploy)\n    * [`secrets`](https://radix.equinor.com/radix-config/#secrets-1)\n    * [`resources` (common)](https://radix.equinor.com/radix-config/#resources-common)\n    * [`variables` (common)](https://radix.equinor.com/radix-config/#variables-common)\n    * [`environmentConfig`](https://radix.equinor.com/radix-config/#environmentconfig)\n      * [`src`](https://radix.equinor.com/radix-config/#src-1)\n      * [`dockerfileName`](https://radix.equinor.com/radix-config/#dockerfilename-1)\n      * [`image`](https://radix.e", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d19f25e8a55bced59b556d464ecdd64b", "__created_at__": 1748191392.2717485, "content": "` (common)](https://radix.equinor.com/radix-config/#variables-common)\n    * [`environmentConfig`](https://radix.equinor.com/radix-config/#environmentconfig)\n      * [`src`](https://radix.equinor.com/radix-config/#src-1)\n      * [`dockerfileName`](https://radix.equinor.com/radix-config/#dockerfilename-1)\n      * [`image`](https://radix.equinor.com/radix-config/#image-1)\n      * [`replicas`](https://radix.equinor.com/radix-config/#replicas-1)\n      * [`monitoring`](https://radix.equinor.com/radix-config/#monitoring-1)\n      * [`resources`](https://radix.equinor.com/radix-config/#resources)\n      * [`variables`](https://radix.equinor.com/radix-config/#variables-2)\n      * [`horizontalScaling`](https://radix.equinor.com/radix-config/#horizontalscaling-1)\n      * [`healthChecks`](https://radix.equinor.com/radix-config/#healthchecks-1)\n      * [`imageTagName`](https://radix.equinor.com/radix-config/#imagetagname-1)\n      * [`volumeMounts`](https://radix.equinor.com/radix-config/#volumemounts-1)\n      * [`readOnlyFileSystem`](https://radix.equinor.com/radix-config/#readonlyfilesystem)\n      * [`runtime`](https://radix.equinor.com/radix-config/#runtime)\n      * [`network`](https://radix.equinor.com/radix-config/#network)\n    * [`authentication`](https://radix.equinor.com/radix-config/#authentication)\n      * [`clientCertificate`](https://radix.equinor.com/radix-config/#clientcertificate)\n      * [`oauth2`](https://radix.equinor.com/radix-config/#oauth2)\n    * [`enabled`](https://radix.equinor.com/radix-config/#enabled)\n    * [`identity`](https://radix.equinor.com/radix-config/#identity-2)\n    * [`readOnlyFileSystem`](https://radix.equinor.com/radix-config/#readonlyfilesystem-1)\n    * [`runtime`](https://radix.equinor.com/radix-config/#runtime-1)\n      * [`architecture`](https://radix.equinor.com/radix-config/#architecture)\n      * [`nodeType`](https://radix.equinor.com/radix-config/#nodetype)\n    * [`network`](https://radix.equinor.com/radix-config/#network-1)\n  * [`jobs`](https://radix.equinor.com/radix-config/#jobs)\n    * [`src`](https://radix.equinor.com/radix-config/#src-2)\n    * [`dockerfileName`](https://radix.equinor.com/radix-config/#dockerfilename-2)\n    * [`image`](https://radix.equinor.com/radix-config/#image-2)\n    * [`schedulerPort`](https://radix.equinor.com/radix-config/#schedulerport)\n    * [`notifications`](https://radix.equinor.com/radix-config/#notifications)\n    * [`batchStatusRules`](https://radix.equinor.com/radix-config/#batchstatusrules)\n    * [`monitoring`](https://radix.equinor.com/radix-config/#monitoring-2)\n    * [`monitoringConfig`](https://radix.equinor.com/radix-config/#monitoringconfig-1)\n    * [`payload`](https://radix.equinor.com/radix-config/#payload)\n    * [`resources`](https://radix.equinor.com/radix-config/#resources-1)\n    * [`secrets`](https://radix.equinor.com/radix-config/#secrets-2)\n    * [`resources` (common)](https://radix.equinor.com/radix-config/#resources-common-1)\n    * [`variables` (common)](https://radix.equinor.com/radix-config/#variables-common-1)\n    * [`timeLimitSeconds`](https://radix.equinor.com/radix-config/#timelimitseconds)\n    * [`backoffLimit`](https://radix.equinor.com/radix-config/#backofflimit)\n    * [`failurePolicy`](https://radix.equinor.com/radix-config/#failurepolicy)\n    * [`volumeMounts`](https://radix.equinor.com/radix-config/#volumemounts-2)\n    * [`imageTagName`](https://radix.equinor.com/radix-config/#imagetagname-2)\n    * [`environmentConfig`](https://radix.equinor.com/radix-config/#environmentconfig-1)\n      * [`notifications`](https://radix.equinor.com/radix-config/#notifications-1)\n      * [`batchStatusRules`](https://radix.equinor.com/radix-config/#batchstatusrules-1)\n      * [`monitoring`](https://radix.equinor.com/radix-config/#monitoring-3)\n      * [`resources`](https://radix.equinor.com/radix-config/#resources-2)\n      * [`variables`](https://radix.equinor.com/radix-config/#variables-3)\n      * [`imageTagName`](https://radix.equinor.com/radix-config", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-fbac0291bd138deab4ae2eeebf40420e", "__created_at__": 1748191392.2717485, "content": "or.com/radix-config/#batchstatusrules-1)\n      * [`monitoring`](https://radix.equinor.com/radix-config/#monitoring-3)\n      * [`resources`](https://radix.equinor.com/radix-config/#resources-2)\n      * [`variables`](https://radix.equinor.com/radix-config/#variables-3)\n      * [`imageTagName`](https://radix.equinor.com/radix-config/#imagetagname-3)\n      * [`volumeMounts`](https://radix.equinor.com/radix-config/#volumemounts-3)\n      * [`timeLimitSeconds`](https://radix.equinor.com/radix-config/#timelimitseconds-1)\n      * [`backoffLimit`](https://radix.equinor.com/radix-config/#backofflimit-1)\n      * [`failurePolicy`](https://radix.equinor.com/radix-config/#failurepolicy-1)\n      * [`readOnlyFileSystem`](https://radix.equinor.com/radix-config/#readonlyfilesystem-2)\n      * [`runtime`](https://radix.equinor.com/radix-config/#runtime-2)\n    * [`identity`](https://radix.equinor.com/radix-config/#identity-3)\n    * [`readOnlyFileSystem`](https://radix.equinor.com/radix-config/#readonlyfilesystem-3)\n    * [`runtime`](https://radix.equinor.com/radix-config/#runtime-3)\n  * [`dnsAppAlias`](https://radix.equinor.com/radix-config/#dnsappalias)\n  * [`dnsAlias`](https://radix.equinor.com/radix-config/#dnsalias)\n  * [`dnsExternalAlias`](https://radix.equinor.com/radix-config/#dnsexternalalias)\n  * [`privateImageHubs`](https://radix.equinor.com/radix-config/#privateimagehubs)\n  * [`node`](https://radix.equinor.com/radix-config/#node)\n  * [`secretRefs`](https://radix.equinor.com/radix-config/#secretrefs)\n    * [`azureKeyVault`](https://radix.equinor.com/radix-config/#azurekeyvault)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/volume-mounts/limitations/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/volume-mounts/limitations/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/volume-mounts/limitations/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/volume-mounts/limitations/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/volume-mounts/limitations/)\n  * [Jobs](https://radix.equinor.com/guides/volume-mounts/limitations/)\n  * [Volume Mounts](https://radix.equinor.com/guides/volume-mounts/limitations/)\n    * [Azure Storage Account](https://radix.equinor.com/guides/volume-mounts/)\n    * [Limitations / Known Issues](https://radix.equinor.com/guides/volume-mounts/limitations)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/volume-mounts/limitations/)\n  * [GitHub](https://radix.equinor.com/guides/volume-mounts/limitations/)\n\n\n  * [](https://radix.equinor.com/)\n  * Volume Mounts\n  * Limitations / Known Issues\n\n\nOn this page\n# Limitations / Known Issues\n## Block Cache[​](https://radix.equinor.com/guides/volume-mounts/limitations/#block-cache \"Direct link to Block Cache\")\n  * Concurrent write", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-07bf84379bb69523746d47e0e9d6538d", "__created_at__": 1748191392.2717485, "content": "* [GitHub](https://radix.equinor.com/guides/volume-mounts/limitations/)\n\n\n  * [](https://radix.equinor.com/)\n  * Volume Mounts\n  * Limitations / Known Issues\n\n\nOn this page\n# Limitations / Known Issues\n## Block Cache[​](https://radix.equinor.com/guides/volume-mounts/limitations/#block-cache \"Direct link to Block Cache\")\n  * Concurrent write operations to the same file from multiple handles in the same replica, or from different replicas, may lead to data corruption.\n  * In write operations, data is persisted to the Azure storage account only when close, sync or flush is called.\n  * Cached data blocks are not refreshed when the file size remains unchanged after a write operation by another process.\n\n\n## File Cache[​](https://radix.equinor.com/guides/volume-mounts/limitations/#file-cache \"Direct link to File Cache\")\n  * Ensure that [Attribute Cache](https://radix.equinor.com/guides/volume-mounts/#attribute-cache) is disabled when using file cache, as an issue/bug with the driver prevents eviction of cached data when the file is opened more frequently than the defined `timeout`.\n\n\n[PreviousAzure Storage Account](https://radix.equinor.com/guides/volume-mounts/)[NextPrivate Links](https://radix.equinor.com/guides/private-link/)\n  * [Block Cache](https://radix.equinor.com/guides/volume-mounts/limitations/#block-cache)\n  * [File Cache](https://radix.equinor.com/guides/volume-mounts/limitations/#file-cache)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Update Git submodules in a pipeline job\n[Submodules](https://radix.equinor.com/guides/git-submodules/) are mapped to a Git repository within a folder. This is an example of a Radix app with a submodule, located in the external private or internal Git repository.\n## Radix application repository structure[​](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#radix-application-repository-structure \"Direct link to Radix application repository structure\")\n```\n/├── app├── .gitmodules ├── Dockerfile└── radixconfig.yaml\n```\n\n  * `app` - a \"virtual\" folder, referenced to a submodule\n  * `.gitmodules` - a file, describing the reference to a submodule:\n```\n[submodule \"app\"]  path = app  url = git@github.com:organisation-name/submodule-repository-name.git\n```\n\n\n\n## Submodule repository structure[​](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#submodule-repository-structure \"Direct link to Submodule repository structure\")\n```\n/├── server.js\n```\n\nRepository content will be cloned to the Radix application cloned repository within the folder, specified in the `.gitmodules` property `path` (in this example in the folder `app`).\n## Radix config file[​](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#radix-config-file \"Direct link to Radix config file\")\nradixconfig.yaml\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: your-radix-app-namespec:build:useBuildKit:truesecrets:- SSH_KEYenvironments:-name: devbuild:from: maincomponents:-name: serverports:-name: httpport:8080publicPort: http\n```\n\nThis Radix application has a build secret `SSH_KEY` and it uses build-kit to be built. The name of the build secret does not have to be `SSH_KEY`, it just need be the same as used in the Dockerfile `RUN --mount...` directive (see this below).\n## Dockerfile[​](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#dockerfile \"Direct link to Dockerfile\")\n```\nFROM docker.io/alpine AS builderRUN apk update && apk add git openssh-clientRUN mkdir -p /root/.ssh && ssh-keyscan github.com > /root/.ssh/known_hostsWORKDIR /appCOPY . .WORKDIR /root/.sshRUN--mount=type=secret,id=SSH_KEY,dst=id_rsa\\cd /app && git submodule update --init --remote --merge --recursive --verboseFROM docker.io/node:alpineWORKDIR /appCOPY--from=builder /app .WORKDIR /app/appUSER 1001EXPOSE 8080CMD [\"node\", \"server.js\"]\n```\n\nThe build secret `SSH", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c069d6e019c7075f7e5e2a9f93063065", "__created_at__": 1748191392.2717485, "content": "ssh/known_hostsWORKDIR /appCOPY . .WORKDIR /root/.sshRUN--mount=type=secret,id=SSH_KEY,dst=id_rsa\\cd /app && git submodule update --init --remote --merge --recursive --verboseFROM docker.io/node:alpineWORKDIR /appCOPY--from=builder /app .WORKDIR /app/appUSER 1001EXPOSE 8080CMD [\"node\", \"server.js\"]\n```\n\nThe build secret `SSH_KEY`, specified in the `radixconfig.yaml` should contain a private key (in PEM format), which will be mounted within the file `/root/.ssh/id_rsa` (which is used by default by Git CLI). This Dockerfile has two stages - the first (with an alias `builder`) is to update submodules, the second with a runtime to run the code. If an option `--remote` is not specified - submodule will be cloned with a version referenced in the current commit of the Radix application repository, not the latest version of the submodule repository.\nHint\nThe default file name with a private key can be changed with one of following options:\n  * `env GIT_SSH_COMMAND='ssh -i /path/to/your/private_key' git submodule update --init --recursive`\n  * `git -c core.sshCommand=\"ssh -i /path/to/your/private_key\" submodule update --init --recursive`\n\n\n## Prepare keys[​](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#prepare-keys \"Direct link to Prepare keys\")\n  * Generate private and public keys. The key format need to be PEM, do not set passphrase (hit the Enter on the request \"Enter passphrase\" and \"Enter same passphrase again\"): \n```\nssh-keygen -t rsa -b4096-m PEM -f private-key-file\n```\n\n  * Get generated keys with commands `cat` (Linux, MacOS, Windows PowerShell), `type` (Windows Terminal) or with an editor: \n    * the private key will be copy-pasted to the SSH_KEY build secret on the next step \n```\ncat private-key-file\n```\n\n    * the public key need to be copy-pasted (the whole text, ending with email) to a new deploy-key in the submodule's GitHub repository: `Repository/Settings/Deploy keys/Add deploy key`. `Allow write access` is not needed. \n```\ncat private-key-file.pem`\n```\n\n\n\n## Register and deploy Radix application[​](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#register-and-deploy-radix-application \"Direct link to Register and deploy Radix application\")\n  * Register a Radix application in the Radix cluster\n  * Create a first pipeline job `build-deploy`\n  * This job will fail due to a build secret `SSH_KEY` is not populated. This can be fixed within the Radix console, \"Configuration\" page of the application, the section \"Build secrets\" - click on the secret name `SSH_KEY` and copy-paste the private key from the previous step (the whole text, starting with `-----BEGIN RSA PRIVATE KEY-----` and ending with `-----END RSA PRIVATE KEY-----`).\n  * Create a new `build-deploy` pipeline job - when it is completed. Navigate to the job step `Building server-dev component`, ensure that log does not have an error on the step: \n```\n[1/2] STEP 7/7: RUN --mount=type=secret,id=SSH_KEY,dst=id_rsa cd /app &&git submodule update --init--remote--merge--recursive--verbose\n```\n\n  * The application should be up and running\n\n\n  * [Radix application repository structure](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#radix-application-repository-structure)\n  * [Submodule repository structure](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#submodule-repository-structure)\n  * [Radix config file](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#radix-config-file)\n  * [Dockerfile](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#dockerfile)\n  * [Prepare keys](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#prepare-keys)\n  * [Register and deploy Radix application](https://radix.equinor.com/guides/git-submodules/update-submodule-in-pipeline-job/#register-and-deploy-radix-application)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.e", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b4667a7734bcea2d2f25dc5dd483b7a9", "__created_at__": 1748191392.2717485, "content": "://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Migration Guide for Radix GitHub Action v1 to v2\nThe new version will authenticate and install `rx` into your workflow, The commands will behave exactly the same in the workflow as they do locally on your machine.\n## Without authentication:[​](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#without-authentication \"Direct link to Without authentication:\")\n**Before**\n```\nname: radix-public-site-pron:pull_request:branches:- mainjobs:validate-radixconfig:runs-on: ubuntu-lateststeps:-name:'Get Azure principal token for Radix'run:|     echo \"APP_SERVICE_ACCOUNT_TOKEN=hello-world\" >> $GITHUB_ENV-uses: actions/checkout@v4-name:'Validate public-site'uses: equinor/radix-github-actions@v1with:args: validate radix-config --config-file radixconfig.yaml-name:'Validate oauth example radix-app'uses: equinor/radix-github-actions@v1with:args: validate radix-config --config-file examples/radix-example-oauth-proxy/radixconfig.yaml\n```\n\n**After**\n```\nname: radix-public-site-pron:pull_request:branches:- mainjobs:validate-radixconfig:runs-on: ubuntu-lateststeps:-uses: actions/checkout@v4-uses: equinor/radix-github-actions@v2-name:'Validate public-site'run: rx validate radix-config --config-file radixconfig.yaml-name:'Validate oauth example radix-app'run: rx validate radix-config --config-file examples/radix-example-oauth-proxy/radixconfig.yaml\n```\n\n## With authentication:[​](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#with-authentication \"Direct link to With authentication:\")\n**Before**\n```\nname: Deploy on Radix # Authenticate with Federated Credentialson:workflow_dispatch:permissions:contents: readid-token: write # required to get a GitHub federated credentialjobs:deploy:runs-on: ubuntu-lateststeps:steps:-name: Login Azureuses: azure/login@v1with:client-id:\"00000000-0000-0000-0000-000000000000\"tenant-id:\"3aa4a235-b6e2-48d5-9195-7fcf05b459b0\"allow-no-subscriptions:true-name: Get tokenrun:|    token=$(az account get-access-token --resource 6dae42f8-4368-4678-94ff-3960e28e3630 --query=accessToken -otsv)    echo \"::add-mask::$token\"    echo \"APP_SERVICE_ACCOUNT_TOKEN=$token\" >> $GITHUB_ENV-uses: equinor/radix-github-actions@v1with:args:>     create pipeline-job     build-deploy     --application application-name     --branch qa     --follow     --token-environment     #--context platform,platform2 or playground\n```\n\n**After**\n```\nname: Deploy on Radix # Authenticate with Federated Credentialson:workflow_dispatch:permissions:contents: readid-token: write # required to get a GitHub federated credentialjobs:deploy:runs-on: ubuntu-lateststeps:-uses: actions/checkout@v4-uses: equinor/radix-github-actions@v2with:azure_client_id:\"00000000-0000-0000-0000-000000000000\"# azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }} # Available if you do not use Federated Credentials-run: rx create pipeline-job deploy--application application-name--environment qa--follow#--context platform,platform2 or playground\n```\n\n## Notes[​](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#notes \"Direct link to Notes\")\nYou can use the GitHub action without arguments to just install `rx`. Afterwards you can login with `rx login` as you do locally:\n```\nrx login --help# Login to Radix.# # Usage:#  rx login [flags]# # Flags:#    --azure-client-id string       Authenticate with Azure Client Id and federated token or client secret#    --azure-client-secret string     Authenticate with Azure Client Secret and Azure Client Id#    --federated-credentials-file string  Authenticate with Federated Credentials and Azure Client Id#  -h, --help                help for login#    --use-device-code           Authenticate with Azure Device Code#    --use-github-credentials       Authenticate with Github Workload Identity#    --use-interactive-login        Authenticate with Azure Interactive Login. Default if no other option is specified#    --verbose               (Optional) Verbose output\n```\n\n  * [Without authentication:](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#without-authentication)\n  * [With authentication:](https://radix.equinor.com/guides/deploy-only/m", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-056f5882eb8ad1b8435291a2e061227b", "__created_at__": 1748191392.2717485, "content": "Workload Identity#    --use-interactive-login        Authenticate with Azure Interactive Login. Default if no other option is specified#    --verbose               (Optional) Verbose output\n```\n\n  * [Without authentication:](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#without-authentication)\n  * [With authentication:](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#with-authentication)\n  * [Notes](https://radix.equinor.com/guides/deploy-only/migrating-radix-github-action-v1-to-v2/#notes)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/configure-jobs/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/configure-jobs/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/configure-jobs/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/configure-jobs/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/configure-jobs/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/configure-jobs/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/configure-jobs/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/configure-jobs/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/configure-jobs/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * Configuring Jobs\n\n\nOn this page\n# Configuring Jobs\n## Job configuration[​](https://radix.equinor.com/guides/jobs/configure-jobs/#job-configuration \"Direct link to Job configuration\")\nJobs are configured in [`radixconfig.yaml`](https://radix.equinor.com/radix-config/#jobs), similar to how components are configured.\n```\nspec:environments:-name: dev-name: prodcomponents:-name: backend...jobs:-name: computesrc: computeschedulerPort:8000payload:path:\"/compute/args\"ports:-name: httpport:3000-name: etlsrc: etlschedulerPort:9000timeLimitSeconds:100backoffLimit:5failurePolicy:rules:-action: FailJobonExitCodes:operator: Invalues:[42]notifications:webhook: http://api:8080/monitor-batch-statusresources:requests:memory:\"256Mi\"cpu:\"400m\"limits:cpu:\"500m\"runtime:nodeType: gpu-nvidia-1-v1batchStatusRules:-condition: Anyoperator: InjobStatuses:- FailedbatchStatus: Failed\n```\n\n[PreviousOverview](https://radix.equinor.com/guides/jobs/)[NextJob Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n  * [Job configuration](https://radix.equinor.com/guides/jobs/configure-jobs", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-2a31ddecc515a5d38a34e98c6b6685e4", "__created_at__": 1748191392.2717485, "content": "m\"runtime:nodeType: gpu-nvidia-1-v1batchStatusRules:-condition: Anyoperator: InjobStatuses:- FailedbatchStatus: Failed\n```\n\n[PreviousOverview](https://radix.equinor.com/guides/jobs/)[NextJob Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n  * [Job configuration](https://radix.equinor.com/guides/jobs/configure-jobs/#job-configuration)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\nOn this page\n# Sub-pipeline example: Pipeline with Azure Workload Identity\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located (by default it is a root of the repository).\n  * The sub-pipeline in this example runs a single tasks.\n  * Create the Pipeline and task files. File names of tasks can be arbitrary (no any connection with a task actual name, used in a sub-pipeline), file extensions should be `yaml`.\n  * Create a Federated credential in an Azure Managed Identity and provide the Client Id to your step (AZURE_CLIENT_ID). This client id can be set manually in code, as a environment variable, or passed down via parameters from radixconfig secrets or variables.\n  * Create a file `identity.yaml` for the task `identity`. This task runs 2 steps, one is enabled for workload identity and will print the secret from the keyvault, the other is disabled for workload identity and will try (and fail) to print the token from the workload identity.\n\n\n## Federated credential[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#federated-credential \"Direct link to Federated credential\")\nYou will need to configure a federated credential in your Azure Managed Identity. This is done by creating a new federated credential in a existing Mananged Identity that has the correct permissions you need.\ntip\nThe `issuer` URL will change in certain cases when a Radix Cluster is replaced during upgrading or in a disaster recovery scenario.\nWe will notify as early as possible when this happens in the **#omnia_radix** slack channel.\n  1. Go to Radix Console and click the `i` icon in the top right corner of the cluster you want to use.\n  2. Copy the `CLUSTER_OIDC_ISSUER_URL` value. This is the credentials issuer in Radix Cluster.\n  3. The `Namespace` has the format of `<application name>-app`, for the application `my-radix-app` the namespace will be `my-radix-app-app`.\n  4. The `Service Account` has the format of `subpipeline-<environment>-sa`, for the environment `dev` the service account will be `subpipeline-dev-sa`.\n  5. On the Managed Identity overview page and take a note of your `Client ID`. This is the `AZURE_CLIENT_ID` you will need to provide in the next step.\n\n\nFor a Radix application named `my-radix-app` in the `dev` environment, the `Service Account` would be `subpipeline-dev-sa` and the `Namespace` would be `my-radix-app-app`:\n![Federated Credentials](https://radix.equinor.com/assets/images/example-pipeline-with-azure-workload-identity-federated-credential-adfda7ae5d8b81d28e07220f63f344f1.png)\n(The Credential name can be anything you want, but it is recommended to use the name `<application>-<env>`)\n## Create a Task[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#create-a-task \"Direct link to Create a Task\")\nThis task will run two steps, one enabled for workload identity and one disabled for workload identity. Radix will automatically inject credentials prepared for workload identity and set the corresponding environment variable `AZURE_FEDERATED_TOKEN_FILE` to the path of the token file. Radix will also provide `AZURE_TENANT_ID` and `AZURE_AUTHORITY_HOST`. `Client ID` from the previous step need to be provided as the environment variable `AZURE_CLIENT_ID` to steps of the task. It can be provided explicitly in step scripts [as shown below](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity#azure_client_id-explicitly-set-in-the-task-step), of configured in the [identity](https://radix.equinor.com/radix-config/#identity) option, which will automatically add `AZURE_CLIENT_ID` parameter to the running pipeline, and it can be used in", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-921879cff0c88afab69c52169ef83b34", "__created_at__": 1748191392.2717485, "content": "of the task. It can be provided explicitly in step scripts [as shown below](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity#azure_client_id-explicitly-set-in-the-task-step), of configured in the [identity](https://radix.equinor.com/radix-config/#identity) option, which will automatically add `AZURE_CLIENT_ID` parameter to the running pipeline, and it can be used in this pipeline tasks:\n#### Fragment from radixconfig.yaml[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#fragment-from-radixconfigyaml \"Direct link to Fragment from radixconfig.yaml\")\n```\nspec:build:subPipeline:identity:azure:clientId: 12345678-a263-abcd-8993-683cc6123456\n```\n\n#### Task identity.yaml[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#task-identityyaml \"Direct link to Task identity.yaml\")\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: identitylabels:# This label is required to enable Workload Identity, it must be lowercaseazure.workload.identity/use:\"true\"annotations:# This annotation is optional and can be used to limit wich steps are enabled for workload identityazure.workload.identity/skip-containers: skip-idspec:params:-name: AZURE_CLIENT_ID          # this value will be delivered from pipeline automaticallydefault: not-set-AZURE_CLIENT_ID-in-task # optional default valuestepTemplate:# Make sure all steps runs as a regular user. Running as root is not allowedsecurityContext:runAsUser:1000image: mcr.microsoft.com/azure-cli:2.55.0env:# Az needs a home directory that the authorizatio information can be stored in-name: HOMEvalue:\"/tmp\"-name: AZURE_CLIENT_IDvalue: $(params.AZURE_CLIENT_ID)   # AZURE_CLIENT_ID environment gets value from the task parameter AZURE_CLIENT_ID, set by pipeline parametersteps:-name: get-secretscript:|    #!/usr/bin/env sh    TOKEN=`cat $AZURE_FEDERATED_TOKEN_FILE`# Log in to Azure with the provided credentials, that matches the configured ferated credential    az login --service-principal \\--username $AZURE_CLIENT_ID \\--tenant $AZURE_TENANT_ID \\--federated-token $TOKEN \\--query [0].name# Use your current logged in user to access protected Azure resources    az keyvault secret show --vault-name <your-key-vault-name>--name <secret-name>--query value# Never print the secret to output, this is only for demo purposes# This step will fail since it is not enabled for workload identity-name: skip-idscript:|    #!/usr/bin/env sh    ls -lah /var/run/secrets/azure/tokens/    :\n```\n\n#### AZURE_CLIENT_ID explicitly set in the task step[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#azure_client_id-explicitly-set-in-the-task-step \"Direct link to AZURE_CLIENT_ID explicitly set in the task step\")\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: identitylabels:azure.workload.identity/use:\"true\"spec:steps:-name: get-secretscript:|    #!/usr/bin/env sh    TOKEN=`cat $AZURE_FEDERATED_TOKEN_FILE`    AZURE_CLIENT_ID=\"<Client ID>\" # Use you App (client) Id here\n```\n\nTogether these four environment variables enables MSAL to automatically pick up the token and use it for authentication. You can also log in manually using the `az login` command as it is shown in the example below:\nThe first step logs in to Azure with the provided credentials and prints the subscription name to the output. The second half of the scripts use this authentication to fetch and print out a secret from your key vault.\n## Create a Pipeline[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#create-a-pipeline \"Direct link to Create a Pipeline\")\nTo make it all work, create a pipeline.yaml that runs the task above:\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipelinespec:tasks:-name: identitytaskRef:name: identity\n```\n\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  ├── identity.yaml└── radixconfig.yaml\n```\n\n### Running the pipeline:[​](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#running-the-pipeline \"Direct link to Running the pipeline:\")\nWhen this pipeline is submitted to your config branch (usually `main` or `master`), Radix will run the pipeline in all building environments.\n![Task output](https://radix.equinor.com/assets/images/example-pipeline-with-azure-workload-identity-output-5e23079de64df3dcad44c1d8653201f7.png)\n  * [Federated credential](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#federated-credential)\n  * [Create a Task](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#create-a-task)\n  * [Create a Pipeline](https", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-fd2e11b3f3756f36d5d68479b5a2b0d7", "__created_at__": 1748191392.2717485, "content": "79de64df3dcad44c1d8653201f7.png)\n  * [Federated credential](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#federated-credential)\n  * [Create a Task](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#create-a-task)\n  * [Create a Pipeline](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#create-a-pipeline)\n    * [Running the pipeline:](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-azure-workload-identity/#running-the-pipeline)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/jobs/environment-variables/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n  * [Guides](https://radix.equinor.com/guides/)\n  * [Docker](https://radix.equinor.com/guides/jobs/environment-variables/)\n  * [CI/CD Pipeline](https://radix.equinor.com/guides/jobs/environment-variables/)\n  * [Build Secrets](https://radix.equinor.com/guides/build-secrets/)\n  * [Environment Variables](https://radix.equinor.com/guides/environment-variables/)\n  * [Authentication](https://radix.equinor.com/guides/jobs/environment-variables/)\n  * [Azure Key Vault](https://radix.equinor.com/guides/azure-key-vaults/)\n  * [External DNS Alias](https://radix.equinor.com/guides/jobs/environment-variables/)\n  * [Jobs](https://radix.equinor.com/guides/jobs/environment-variables/)\n    * [Overview](https://radix.equinor.com/guides/jobs/)\n    * [Configuring Jobs](https://radix.equinor.com/guides/jobs/configure-jobs)\n    * [Job Manager and job API](https://radix.equinor.com/guides/jobs/job-manager-and-job-api)\n    * [Notifications](https://radix.equinor.com/guides/jobs/notifications)\n    * [Environment variables](https://radix.equinor.com/guides/jobs/environment-variables)\n    * [Managing Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\n    * [OpenAPI/Swagger spec](https://radix.equinor.com/guides/jobs/openapi-swagger)\n  * [Volume Mounts](https://radix.equinor.com/guides/jobs/environment-variables/)\n  * [Private Links](https://radix.equinor.com/guides/private-link/)\n  * [Enable and disable components](https://radix.equinor.com/guides/enable-and-disable-components/)\n  * [Component scale/stop/restart](https://radix.equinor.com/guides/component-start-stop-restart/)\n  * [Resource request and limit](https://radix.equinor.com/guides/resource-request/)\n  * [Egress](https://radix.equinor.com/guides/egress-config/)\n  * [Monitoring](https://radix.equinor.com/guides/jobs/environment-variables/)\n  * [GitHub](https://radix.equinor.com/guides/jobs/environment-variables/)\n\n\n  * [](https://radix.equinor.com/)\n  * Jobs\n  * Environment variables\n\n\n# Environment variables in jobs\nIn addition to [variables defined in `radixconfig.yaml`](https://radix.equinor.com/radix-config/#variables-common), Radix will automatically set the following variables\n  * `RADIX_JOB_NAME`: The instance name of the job (e.g. \"batch-compute-20230220101417-idwsxncs-rkwaibwe\")\n  * `RADIX_APP`: The name of the Radix application\n  * `RADIX_CLUSTERNAME`: The canonical name of the Radix cluster (e.g. \"prod-8\")\n  * `RADIX_CLUSTER_TYPE`: The type of cluster (\"production\", \"playground\", \"development\")\n  * `RADIX_COMPONENT`: Name of the current component\n  * `RADIX_CONTAINER_REGISTRY`: Container image registry where component images are downloaded from\n  * `RADIX_DNS_ZONE`: Cluster DNS zone (e.g. _`radix.equinor.com`_)\n  * `RADIX_ENVIRONMENT`: The application's current environment\n  * `RADIX_GIT_COMMIT_HASH`: Git commit hash of source code from which current deployment was built. Only applicable for deployments with one or more container images built by Radix pipeline.\n  * `RADIX_GIT_TAGS`: Space-separated list of git tags which point to `$RADIX_GIT_COMMIT_HASH` at the time of container image build.\n  * `RADIX_PORTS", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-e0c8f3a7037abec936c4896a1b2c6824", "__created_at__": 1748191392.2717485, "content": "or.com`_)\n  * `RADIX_ENVIRONMENT`: The application's current environment\n  * `RADIX_GIT_COMMIT_HASH`: Git commit hash of source code from which current deployment was built. Only applicable for deployments with one or more container images built by Radix pipeline.\n  * `RADIX_GIT_TAGS`: Space-separated list of git tags which point to `$RADIX_GIT_COMMIT_HASH` at the time of container image build.\n  * `RADIX_PORTS`: Space-separated list of open ports, enclosed in parentheses. E.g. (8888) and (8888 8889)\n  * `RADIX_PORT_NAMES`: List of open ports (names; only if set)\n\n\n[PreviousNotifications](https://radix.equinor.com/guides/jobs/notifications)[NextManaging Jobs in Web Console](https://radix.equinor.com/guides/jobs/jobs-in-web-console)\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-env-vars-for-envs/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with environment variables for environments\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-example-with-env-vars-for-envs) for this example.\n  * This example extends the example [Sub-pipeline with environment variables](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-env-vars). The differences are following:\n  * In the task below:\n    * There is two more parameters with names `CONNECTION_STRING` - mandatory, no default value, and `PROD_USER` - optional, set default value if it is not passed from the sub-pipeline.\n```\nparams:...-name: CONNECTION_STRING   #it must be set in a sub-pipeline's task params, because it does not have default value-name: PROD_USER       #it can be set in a sub-pipeline's task params, if not - used default \"not-set-in-task\"default: not-set-in-task \n```\n\n    * There are two more environment variables in a step `ConnectionString` and `ProdUser`\n```\nenv:...-name: ConnectionStringvalue: $(params.CONNECTION_STRING) #set by parameter CONNECTION_STRING-name: ProdUservalue: $(params.PROD_USER) #set by parameter PROD_USER\n```\n\n    * The step script has extended command, to print in addition environment variables, which name contain `VAR`, `Connection` or `User` `printenv | grep -E 'VAR|Connection|User'`\n    * Task file `env-vars-list-task.yaml`\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: env-vars-listspec:params:-name: VAR1T         #it must be set in a sub-pipeline's task params, because it does not have default value-name: VAR2T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var2-in-task\"default: not-set-var2-in-task-name: VAR3T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var3-in-task\"default: not-set-var3-in-task-name: VAR4T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var4-in-task\"default: not-set-var4-in-task-name: VAR5T         #it can be set in a sub-pipeline's task params, if not - used default \"not-set-var5-in-task\"default: not-set-var5-in-task-name: CONNECTION_STRING   #it must be set in a sub-pipeline's task params, because it does not have default value-name: PROD_USER       #it can be set in a sub-pipeline's task params, if not - used default \"not-set-in-task\"default: not-set-in-tasksteps:-name: show-env-vars-listimage: alpineenv:-name: VAR1examplevalue: $(params.VAR1T) #set by parameter VAR1T-name: VAR2examplevalue: $(params.VAR2T) #set by parameter VAR2T-name: VAR3examplevalue: $(params.VAR3T) #set by parameter VAR3T-name: VAR4examplevalue: $(params.VAR4T) #set by parameter VAR4T-name: VAR5examplevalue: $(params.VAR5T) #set by parameter VAR5T-name: VAR6examplevalue:\"value6\"#set explicitly with the value \"value6\"-name: ConnectionStringvalue: $(params.CONNECTION_STRING) #set by parameter CONNECTION_STRING-name: ProdUservalue: $(params.PROD_USER) #set by parameter PROD_USERscript:|    #!/usr/bin/env sh    printenv | grep -E 'VAR|Connection|User'\n```\n\n  * The sub-pipeline in addition has:\n    * parameters `CONNECTION_STRING` - mandatory, no default value, and `PROD", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-d0319774884e299fa7e84ffa20c2039f", "__created_at__": 1748191392.2717485, "content": "set explicitly with the value \"value6\"-name: ConnectionStringvalue: $(params.CONNECTION_STRING) #set by parameter CONNECTION_STRING-name: ProdUservalue: $(params.PROD_USER) #set by parameter PROD_USERscript:|    #!/usr/bin/env sh    printenv | grep -E 'VAR|Connection|User'\n```\n\n  * The sub-pipeline in addition has:\n    * parameters `CONNECTION_STRING` - mandatory, no default value, and `PROD_USER` - optional, set default value if it is not set in the `radixconfig.yaml`\n```\nparams:...-name: CONNECTION_STRING #it must be set in the radixconfig.yaml-name: PROD_USER     #it can be set in the radixconfig.yaml, if not - used default empty stringdefault:\"\"\n```\n\n    * task parameters `CONNECTION_STRING` - set by `CONNECTION_STRING` sub-pipeline parameter, and `PROD_USER` - set by `PROD_USER` sub-pipeline parameter\n```\nparams:...-name: CONNECTION_STRING #set by parameter CONNECTION_STRING, from the radixconfig.yamlvalue: $(params.CONNECTION_STRING)-name: PROD_USER     #set by parameter PROD_USER, from the radixconfig.yamlvalue: $(params.PROD_USER)\n```\n\n    * Sub-pipeline file `pipeline.yaml`\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipeline-example-with-env-varsspec:params:-name: VAR1        #it must be set in the radixconfig.yaml-name: VAR2        #it can be set in the radixconfig.yaml, if not - used default \"not-set-var2\"default: not-set-var2-name: VAR3        #it can be set in the radixconfig.yaml, if not - used default \"not-set-var3\"default: not-set-var3-name: CONNECTION_STRING #it must be set in the radixconfig.yaml-name: PROD_USER     #it can be set in the radixconfig.yaml, if not - used default empty stringdefault:\"\"tasks:-name: show-env-vars   #name of the task \"env-vars-list\" in this pipelineparams:-name: VAR1T     #set by parameter VAR1, from the radixconfig.yamlvalue: $(params.VAR1)-name: VAR2T     #set by parameter VAR2, from the radixconfig.yaml or used default \"not-set-var2\"value: $(params.VAR2)-name: VAR3T     #set by parameter VAR3, not set in the radixconfig.yaml - used default \"not-set-var3\"value: $(params.VAR3)-name: VAR4T     #set explicitly with the value \"value4\"value: value4-name: CONNECTION_STRING #set by parameter CONNECTION_STRING, from the radixconfig.yamlvalue: $(params.CONNECTION_STRING)-name: PROD_USER     #set by parameter PROD_USER, from the radixconfig.yamlvalue: $(params.PROD_USER)taskRef:name: env-vars-list  #task name\n```\n\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  └── env-vars-list-task.yaml└── radixconfig.yaml\n```\n\n  * The file `radixconfig.yaml` has two environments `dev` and `prod`, with addition field `variables` within the `subPipeline` option, which adds or overrides common build variables from the field `build.valiables`:\n\n\n```\napiVersion: radix.equinor.com/v1kind: RadixApplicationmetadata:name: radix-sub-pipeline-examplespec:build:subPipeline:variables:VAR1: value1   #it must be set, as it is expected by the sub-pipelineVAR2: value2   #it can be set, if it does not exist - the sub-pipeline will set default valueVAR100: value100 #it is not used in the sub-pipeline and its tasksenvironments:-name: devbuild:from: pipeline-example-with-env-vars-for-envssubPipeline:variables:VAR1:\"val1-for-dev\"#overrides common env-var VAR1 in the \"dev\" Radix pipelineCONNECTION_STRING:\"Provider=MySQLProv;Data Source=devDb;\"#overrides common env-var CONNECTION_STRING in the \"dev\" custom sub-pipeline-name: prodbuild:from: releasesubPipeline:variables:PROD_USER:\"prod-user\"#it exists only in prod environmentCONNECTION_STRING:\"Provider=MySQLProv;Data Source=prodDb;\"#overrides common env-var CONNECTION_STRING in the \"prod\" custom sub-pipelinecomponents:-name: frontendsrc: frontendports:-name: httpport:8001publicPort: httpdnsAppAlias:environment: devcomponent: frontend\n```\n\n  * common valiables: `VAR1`, `VAR2` and `VAR100`, they can be used in all environments.\n    * `VAR1` - mandatory variable, it is expected by the sub-pipeline.\n    * `VAR2` - optional\n    * `VAR100` - unnecessary variable, not used in the sub-pipeline, it will be not passed to the sub-pipeline parameters.\n```\nspec:build:subPipeline:variables:VAR1: value1   #it must be set, as it is expected by the sub-pipelineVAR2: value2   #it can be set, if it does not exist - the sub-pipeline will set default valueVAR100: value100 #it is not used in the sub-pipeline and its tasks\n```\n\n  * `dev` build environment:\n    * Common variable `VAR1` is overridden to be passed to the sub-pipeline parameter `VAR1` with the value \"val1-for-dev\".\n    * New variable `CON", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-b57a1669ed27b8eceba099f7918dc1ea", "__created_at__": 1748191392.2717485, "content": "is expected by the sub-pipelineVAR2: value2   #it can be set, if it does not exist - the sub-pipeline will set default valueVAR100: value100 #it is not used in the sub-pipeline and its tasks\n```\n\n  * `dev` build environment:\n    * Common variable `VAR1` is overridden to be passed to the sub-pipeline parameter `VAR1` with the value \"val1-for-dev\".\n    * New variable `CONNECTION_STRING` contains `dev`-environment specific connection string \"Provider=MySQLProv;Data Source=**devDb** ;\"\n```\nenvironments:-name: devbuild:from: pipeline-example-with-env-vars-for-envssubPipeline:variables:VAR1:\"val1-for-dev\"#overrides common env-var VAR1 in the \"dev\" external pipelineCONNECTION_STRING:\"Provider=MySQLProv;Data Source=devDb;\"#overrides common env-var CONNECTION_STRING in the \"dev\" custom sub-pipeline\n```\n\n  * `prod` build environment:\n    * New variable `PROD_USER` contains `prod`-environment specific user name \"prod-user\".\n    * New variable `CONNECTION_STRING` contains `prod`-environment specific connection string \"Provider=MySQLProv;Data Source=**prodDb** ;\"\n```\nenvironments:-name: prodbuild:from: releasesubPipeline:variables:PROD_USER:\"prod-user\"#it exists only in prod environmentCONNECTION_STRING:\"Provider=MySQLProv;Data Source=prodDb;\"#overrides common env-var CONNECTION_STRING in the \"prod\" custom sub-pipeline\n```\n\n\n\ntip\nCommon variable `CONNECTION_STRING` does not exists, as it is always different in each environment\nThis sub-pipeline runs the task `show-env-vars` (which reference to the task `env-vars-list` described in the file `env-vars-list-task.yaml`), which has one step, as described above. This step run a script, printing environment variables, which names contain text `VAR`\n```\n#!/usr/bin/env shprintenv | grep -E 'VAR|Connection|User'\n```\n\n  * Commit changes in the repository. Look at the details of a started Radix pipeline job (if the Radix app is connected to the GitHub WebHook, otherwise - start a job manually).\n  * Sub-pipelines and tasks lists are similar to the example [Sub-pipeline with environment variables](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-env-vars).\n  * Navigate to the task (click on its name in the table row)\n  * The sub-pipeline task overview page shows a table with a list of this task's steps - in this example it is one step \"show-env-vars-list\", the step status and log.\n    * Step for the sub-pipeline in the `dev` environment. The variable `ConnectionString` contains \"Data Source=**dev** Db\", `VAR1example` has _overridden_ common value \"val1-for-dev\", `ProdUser` has no value ![Sub-pipeline task step dev](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-for-env-dev-task-step-8fbe0c4eacdf8393c92c47509691e428.jpg) The log shows environment variables of the step container:\n```\nConnectionString=Provider=MySQLProv;Data Source=devDb;VAR1example=val1-for-devVAR2example=value2VAR3example=not-set-var3VAR4example=value4VAR5example=not-set-var5-in-taskVAR6example=value6ProdUser=\n```\n\n    * `VAR6example` - this variable is not defined in the sub-pipeline's task `params` and task's `params`, it is set implicitly in the task step's field `env`\n```\nsteps:-env:-name: VAR6examplevalue:\"value6\"\n```\n\n    * Step for the sub-pipeline in the `prod` environment. The variable `ConnectionString` contains \"Data Source=**prod** Db\", `VAR1example` has _common_ value \"value1\", `ProdUser` has value \"value6\" ![Sub-pipeline task step prod](https://radix.equinor.com/assets/images/example-pipeline-with-env-vars-for-env-prod-task-step-43d57456584d9bdce476c8a9ec916152.jpg) The log shows environment variables of the step container:\n```\nConnectionString=Provider=MySQLProv;Data Source=prodDb;VAR1example=value1VAR2example=value2VAR3example=not-set-var3VAR4example=value4VAR5example=not-set-var5-in-taskVAR6example=value6ProdUser=prod-user\n```\n\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-build-secrets/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with build secrets\n[Source code](", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-1405dcdd381d0389e73011ba0aa31ea1", "__created_at__": 1748191392.2717485, "content": ".com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with build secrets\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-example-with-secrets) for this example.\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located (by default it is a root of the repository).\n  * The sub-pipeline in this example runs one task.\n  * Create a file `use-secrets-task.yaml` for the task `use-secrets`. This task has one step \"show-secrets\", which runs in the container with Alpine Linux.\n    * The step runs a script with one commands, showing secrets, mapped to step's container environment variables and files.\n    * The task step has description of environment variable `DB_SERVER_NAME` in the field `env`, which will be created in the step's container. These environment variable gets value from the secret `DB_SERVER`, referencing to them via `secretKeyRef` with `$(radix.build-secrets)` and a secret name:\n```\nenv:-name: DB_SERVER_NAMEvalueFrom:secretKeyRef:name: $(radix.build-secrets)key: DB_SERVER\n```\n\n    * The task step also has description of mapping from the build secret and environment variables in the field `envFrom`, which will create in the step's container environment variables for each secret entry in the build secret. These environment variables can get optional prefix to their names, specified in the field `prefix` (e.g. `BUILD_SECRET_` in this example, so for the secret `DB_SERVER` the environment variable will be `BUILD_SECRET_DB_SERVER`). Reference to the build secrets are defined with a field `secretRef.name` and with `$(radix.build-secrets)` as a secret name:\n```\nenvFrom:-secretRef:name: $(radix.build-secrets)prefix: BUILD_SECRET_\n```\n\n    * The task `spec` also contains a field `volumes`. In this example volumes are mapped to build secrets with particular secret entries, split to two volumes and separate `items` in volumes. Build secrets are referred as `$(radix.build-secrets)` in a field `secret.secretName` of each of volumes. \n      * Volume `volume-with-password` maps the build secret `DB_PASSWORD` to a file `password.txt`\n      * Volume `volume-cert` maps the build secrets `CERT_PRIV_KEY` and `CERT_PUB_KEY` to files `priv/cert.key` and `priv/cert.pub` correspondingly. Folder `priv` in the `path` will be a sub-folder withing the `mountPath` of `volumeMounts` in task's steps:\n```\nvolumes:-name: volume-with-password #a volume, which can be shared between task stepssecret:secretName: $(radix.build-secrets)items:-key: DB_PASSWORDpath: password.txt-name: volume-certsecret:secretName: $(radix.build-secrets)items:-key: CERT_PRIV_KEYpath: priv/cert.key-key: CERT_PUB_KEYpath: priv/cert.pub\n```\n\n\n\nFile `use-secrets-task.yaml`\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: use-secretsspec:steps:-name: show-secretsimage: alpineenv:-name: DB_SERVER_NAMEvalueFrom:secretKeyRef:name: $(radix.build-secrets)key: DB_SERVERenvFrom:-secretRef:name: $(radix.build-secrets)prefix: BUILD_SECRET_script:|    echo \"--- Print environment variables, with names containing 'DB_'\"    printenv | grep \"DB_\"echo \"--- Print folders: /var/*-volume\"     ls /var/*-volumeecho \"--- Print file: /var/pass-volume/password.txt\"     cat /var/pass-volume/password.txtecho \"--- Print file: /var/cert-volume/priv/cert.key\"     cat /var/cert-volume/priv/cert.key|head -n 3echo \"--- Print file: /var/cert-volume/priv/cert.pub\"cat /var/cert-volume/priv/cert.pub|head -n 3:volumeMounts:-name: volume-with-passwordmountPath: /var/pass-volume   #mount this volume to a folder \"/var/task-volume\"-name: volume-certmountPath: /var/cert-volume   #mount this volume to a folder \"/var/cert-volume\"volumes:-name: volume-with-password      #a volume, which can be shared between task stepssecret:secretName: $(radix.build-secrets) #map Radix build secrets to a volumeitems:-key: DB_PASSWORD        #map this secret to a file \"password.txt\"path: password.txt-name: volume-cert          #a volume, which can be shared between task stepssecret:secretName: $(radix.build-secrets) #map Radix build secrets to a volumeitems:-key: CERT_PRIV_KEY       #map this secret to a file \"priv/cert.key\"path: priv/cert.key-key: CERT_PUB_KEY       #map this secret to a file \"priv/cert.pub\"path: priv/cert.pub\n```\n\n  * Create a file `pipeline.yaml`. Add a task in the `tasks` list: give it a name (it can be any", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-6b2fb934d3e7e47508c7cf3a4e1a8fda", "__created_at__": 1748191392.2717485, "content": "Name: $(radix.build-secrets) #map Radix build secrets to a volumeitems:-key: CERT_PRIV_KEY       #map this secret to a file \"priv/cert.key\"path: priv/cert.key-key: CERT_PUB_KEY       #map this secret to a file \"priv/cert.pub\"path: priv/cert.pub\n```\n\n  * Create a file `pipeline.yaml`. Add a task in the `tasks` list: give it a name (it can be any name, unique within this sub-pipeline), in the property `taskRef` (\"reference to a task\") put the value from the property `metadata.name` of the task, created above:\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipeline-example-with-secretsspec:tasks:-name: use-secrets-for-db   #name of the task \"use-secrets\" in this pipelinetaskRef:name: use-secrets  #task name\n```\n\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  └── use-secrets-task.yaml└── radixconfig.yaml\n```\n\n  * In the file `radixconfig.yaml` add a field `build` with sub-field `secrets`, as described in the `radixconfig.yaml` [reference](https://radix.equinor.com/radix-config/#build). Values of these secrets will be passed to the sub-pipeline task with build secret reference `$(radix.build-secrets)`:\n\n\n```\nspec:build:secrets:- DB_SERVER- DB_PASSWORD- CERT_PRIV_KEY- CERT_PUB_KEY- DB_USER\n```\n\n  * This sub-pipeline runs the task `use-secrets-for-db` (which refers to the task `use-secrets` described in the file `use-secrets-task.yaml`), which has one step, as described above. This step runs a script, which prints environment variables and files with values of mapped build secrets. Note `:` (column) - this is no-op shell command, added for more stable behaviour of the script (as explained in [Sub-pipeline hints](https://radix.equinor.com/guides/sub-pipeline/#hints)).\n\n\n```\n#!/usr/bin/env shecho\"--- Print environment variables, with names containing 'DB_'\"printenv|grep\"DB_\"echo\"--- Print folders: /var/*-volume\"ls /var/*-volumeecho\"--- Print file: /var/pass-volume/password.txt\"cat /var/pass-volume/password.txtecho\"--- Print file: /var/cert-volume/priv/cert.key\"cat /var/cert-volume/priv/cert.key|head-n3echo\"--- Print file: /var/cert-volume/priv/cert.pub\"cat /var/cert-volume/priv/cert.pub|head-n3\n```\n\n> First line of the script is [shebang](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)). It is recommended to use for consistent script behaviour. It can refer to a default shell `sh` or to a specific shell, existing in the step's image distribution, like `bash` for Ubuntu:\n> ```\n#!/usr/bin/env bash\n```\n\n  * Commit changes in the repository. Look at the details of a started Radix pipeline job (if the Radix app is connected to the GitHub WebHook, otherwise - start a job manually).\n  * If build secrets were just added - the build will fail. Navigate to the \"Configuration\" page of the Radix application, fill in secrets in the section \"Build secrets\". In the page \"Pipeline jobs\" create a new job.\n  * Navigate to the Radix pipeline step \"Run pipeline\", when it is running or completed: the pipelines overview page shows a table with a list of sub-pipelines - in this example it is one sub-pipeline \"pipeline-example-with-secrets\", running for an environment \"dev\", and the sub-pipeline status. ![Sub-pipeline list](https://radix.equinor.com/assets/images/example-pipeline-with-secrets-pipelines-3ff003b4244dd495671afd8a9db56a7e.jpg)\n  * Navigate to the sub-pipeline (click on its name in the table row)\n  * The sub-pipeline overview page shows a table with a list of this sub-pipeline's tasks - in this example it is one task \"use-secrets-for-db\", and the task status. ![Sub-pipeline tasks](https://radix.equinor.com/assets/images/example-pipeline-with-secrets-tasks-a15aa578a091b63b51aadc36a89f3bf0.jpg)\n  * Navigate to the task (click on its name in the table row)\n  * The sub-pipeline task overview page shows a table with a list of this task's steps - in this example it is one step \"show-secrets\", the step status and log. ![Sub-pipeline task steps](https://radix.equinor.com/assets/images/example-pipeline-with-secrets-task-step-3aa3516cb00277d85781e64fdde6b529.jpg)\n  * The log shows environment variables and file contents of the step container (output depends on the entered build secret contents):\n\n\n```\n--- Print environment variables, with names containing 'DB_'BUILD_SECRET_DB_USER=TestUser17DB_SERVER_NAME=ProdSqlServerBUILD_SECRET_DB_PASSWORD=Pa$Svv0rDBUILD_SECRET_DB_SERVER=ProdSqlServer--- Print folders: /var/*-volume/var/cert-volume:priv/var/pass-volume:password.txt--- Print file: /var/pass-volume/password.txtPa$Svv", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-c65e9c03be057ea2b63314d668977a9a", "__created_at__": 1748191392.2717485, "content": "of the step container (output depends on the entered build secret contents):\n\n\n```\n--- Print environment variables, with names containing 'DB_'BUILD_SECRET_DB_USER=TestUser17DB_SERVER_NAME=ProdSqlServerBUILD_SECRET_DB_PASSWORD=Pa$Svv0rDBUILD_SECRET_DB_SERVER=ProdSqlServer--- Print folders: /var/*-volume/var/cert-volume:priv/var/pass-volume:password.txt--- Print file: /var/pass-volume/password.txtPa$Svv0rD--- Print file: /var/cert-volume/priv/cert.key-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcnNhAAAAAwEAAQAAAYEAs7dxa8hioDVwVZLsK9z5844iS7uzVBPQKE8bScMNCDMHUoE+MG5u--- Print file: /var/cert-volume/priv/cert.pubssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCxwy/9qEaNGcJeheeNuTQZrAmePuoHu2eC9gqfu7Og55e0n51n2rJjrQ2zLD5FbJEriAQfxGSW/jAnxClZJn66iahxujsBiGfaJeaLFdji4w7n5486LeKmo+4M6MnX5zU2F3A+DQ4THU4yEn+SHttRWX2UDdBhGM+ZXvMvPv/zVC17H7/no0W5wOB+SyFqmDTZY+dJQS68HsSxNt4BgRq94RJvCh/h62yzPztP+hbQ60\n```\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-multiple-tasks/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with multiple tasks\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-with-multiple-tasks) for this example.\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located (by default it is a root of the repository).\n  * The sub-pipeline in this example runs multiple tasks.\n  * Create files with tasks. File names of tasks can be arbitrary (no any connection with a task actual name, used in a sub-pipeline), file extensions should be `yaml`.\n    * Create a file `hello-task.yaml` for the task `hello`. This task runs in the container with Alpine Linux and execute one command `echo \"Hello\"`.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: hellospec:steps:-name: say-helloimage: alpinecommand:- echoargs:-\"Hello\"\n```\n\n    * Create a file `say-letters-task.yaml` for the task `letters`. This task runs in the container with a Python, within Alpine Linux and execute a script, put directly in the task description. The script prints few letters with 1 second interval.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: lettersspec:steps:-name: say-lettersimage: alpinescript:|    #!/bin/sh    for i in \"a\" \"b\" \"c\" \"d\" \"e\"     do echo $i     sleep 1    done    echo \"Done\"\n```\n\n    * Create a file `say-numbers-task.yaml` for the task `numbers`. This task is similar to the task `letters`, but its script prints few numbers with 2 second interval. This task runs longer then `letters` task to see running them in parallel.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: numbersspec:steps:-name: say-numbersimage: alpinescript:|    #!/bin/sh    for i in \"one\" \"two\" \"three\" \"four\" \"five\" \"six\" \"seven\" \"eight\" \"nine\" \"ten\"     do echo $i     sleep 2    done    echo \"Done\"\n```\n\n    * Create a file `goodbye-task.yaml` for the task `goodbye`. This task runs in the container with a Python on Alpine Linux. The task executes a inline Python command `print('Goodbye')`.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: goodbyespec:steps:-name: say-goodbyeimage: python:alpinecommand:- pythonargs:-\"-c\"-\"print('Goodbye')\"\n```\n\n  * Create a file `pipeline.yaml`. Add tasks in the `tasks` list: give them names (it can", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-025cdbeab87c315c45ba7e25b70f7bfb", "__created_at__": 1748191392.2717485, "content": "runs in the container with a Python on Alpine Linux. The task executes a inline Python command `print('Goodbye')`.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: goodbyespec:steps:-name: say-goodbyeimage: python:alpinecommand:- pythonargs:-\"-c\"-\"print('Goodbye')\"\n```\n\n  * Create a file `pipeline.yaml`. Add tasks in the `tasks` list: give them names (it can be any name, unique within this sub-pipeline), in the property `taskRef` (\"reference to a task\") put the value from the property `metadata.name` of the tasks, created above:\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipeline-with-multiple-stepsspec:tasks:-name: show-hellotaskRef:name: hello-name: show-goodbyerunAfter:- show-numbers- show-letterstaskRef:name: goodbye-name: show-lettersrunAfter:- show-hellotaskRef:name: letters-name: show-numbersrunAfter:- show-hellotaskRef:name: numbers\n```\n\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  ├── hello-task.yaml│  ├── say-letters-task.yaml│  ├── say-numbers-task.yaml│  └── goodbye-task.yaml└── radixconfig.yaml\n```\n\nThis sub-pipeline runs first the task `show-hello` (which reference to the task `hello` described in the file `hello-task.yaml`), then two tasks in parallel `show-numbers` and `show-letters` (referenced to the tasks `numbers` and `letter` correspondingly) - these tasks wait for completion of the task `show-hello` as both have set the _optional_ property `runAfter`\n```\nrunAfter:- show-hello\n```\n\nThe last task to be running is `show-goodbye` (which reference to the task `goodbye` described in the file `goodbye-task.yaml`). This tak is started after completion of both tasks `show-numbers` and `show-letters`, as it has set the _optional_ property `runAfter`, referenced to both these tasks\n```\nrunAfter:- show-numbers- show-letters\n```\n\nIt is not important in which order to put the tasks - tasks can run in parallel or in a sequences, defined by fields [runAfter](https://tekton.dev/docs/pipelines/pipelines/#using-the-runafter-field), [conditions](https://tekton.dev/docs/pipelines/pipelines/#guard-task-execution-using-conditions), [from](https://tekton.dev/docs/pipelines/pipelines/#using-the-from-field).\n  * Commit changes in the repository. Look at the details of a started Radix pipeline job (if the Radix app is connected to the GitHub WebHook, otherwise - start a job manually).\n  * Navigate to the Radix pipeline step \"Run pipeline\", when it is running or completed: the pipelines overview page shows a table with a list of sub-pipelines - in this example it is one sub-pipeline \"pipeline-example\", running for an environment \"dev\", and the sub-pipeline status. ![Sub-pipeline list](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-pipelines-d354fe79d97e8cb05f33a9e8df470481.jpg)\n  * Navigate to the sub-pipeline (click on its name in the table row)\n  * The pipeline overview page shows a table with a list of this sub-pipeline's tasks - in this example it is a list of tasks \"show-hello\", \"show-letters\", \"show-numbers\", \"show-goodbye\", and the task statuses. ![Sub-pipeline tasks](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-tasks-73294e10b5ae994637ccb7d8f231955e.jpg)\n  * Navigate to the task (click on its name in the table row)\n  * The sub-pipeline task overview page shows a table with a task's step, with a name of a step, step status and the step log. ![Sub-pipeline task steps](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-task-letters-7daef45e5996bffe1065f3ea3794fece.jpg)\n\n\nCopyright © 2025 Equinor ASA\n\n\n[Skip to main content](https://radix.equinor.com/guides/sub-pipeline/example-pipeline-with-multiple-task-steps/#__docusaurus_skipToContent_fallback)\n[![Omnia Radix Logo](https://radix.equinor.com/images/logos/logo.svg)**Omnia Radix**](https://radix.equinor.com/)[Getting started](https://radix.equinor.com/start)[Docs](https://radix.equinor.com/docs)[Radix Config](https://radix.equinor.com/radix-config)[Guides](https://radix.equinor.com/guides)[Features](https://radix.equinor.com/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with multiple task steps\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-with-multiple-task-steps) for this example.\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-f28a7b8da4a096b989e9f95f7264ae97", "__created_at__": 1748191392.2717485, "content": "/features)[Community](https://radix.equinor.com/community)\n[Web Console](https://console.radix.equinor.com/)\n# Sub-pipeline example: Pipeline with multiple task steps\n[Source code](https://github.com/equinor/radix-sub-pipeline-example/tree/pipeline-with-multiple-task-steps) for this example.\n  * In the Radix application repository create a folder `tekton`. This folder need to be in the configuration branch and in the same folder, where `radixconfig.yaml` file is located (by default it is a root of the repository).\n  * The sub-pipeline in this example runs a task, which has two steps.\n  * Create a file `process-repo-task.yaml` for the task `process`. This task has two steps:\n    * The first step is \"clone-repo\" runs in the container with Alpine Linux and Git CLI, pre-installed on it. `Args` declares options of the Git CLI command, in this example - clone a branch of GitHub repo. This particular repo is public, no need for credentials to access it.\n    * The second step is \"show-repo\" -it performs \"processing\" of cloned repository, in this example - it just shows its folder content. This \"processing\" can be a build of the source code, database migration script, etc. or it can be multiple steps\n    * Both steps use the same shared volume, based on an \"EmptyDir\" - an empty volume, created, when the task starts, and deleted, when the task completed. This volume can be mapped within each step to a specified path of the step's container.\n    * By default, if any a task steps fail - the execution of a step is stopped. Behavior of the step and step flow can be altered with fields [onError](https://tekton.dev/docs/pipelines/tasks/#specifying-onerror-for-a-step), [timeout](https://tekton.dev/docs/pipelines/tasks/#specifying-a-timeout), [exitCode](https://tekton.dev/docs/pipelines/tasks/#accessing-steps-exitcode-in-subsequent-steps), [params](https://tekton.dev/docs/pipelines/tasks/#specifying-parameters), etc.\n```\napiVersion: tekton.dev/v1kind: Taskmetadata:name: processspec:steps:-name: clone-repo                     #step to clone a Git repositoryimage: alpine/git                     #Docker image with Git CLIargs:- clone                         #command to clone the git repository- https://github.com/equinor/radix-sub-pipeline-example #the repository to be cloned--b                          #clone specific branch- pipeline-with-multiple-task-steps           #the branch to be cloned- /var/source/branch                  #a folder, where to clone the repositoryvolumeMounts:-name: source-volume                  #using an empty volume, shared between this task stepsmountPath: /var/source                #path, where the common empty volume is mapped-name: show-repo                      #step to process the repository, cloned in the step \"clone-repo\"image: alpine                       #run a sh-script within a Alpine Linux container#\"process\" the cloned repository - here just show its folderscript:|    #!/usr/bin/env sh    ls -la /var/cloned-repo/branchvolumeMounts:-name: source-volume                  #using the same volume, used in the step \"clone-repo\"mountPath: /var/cloned-repo              #mount this volume to a folder \"/var/cloned-repo\"volumes:-name: source-volume                    #a volume, which can be shared between task stepsemptyDir:{}#just an empty volume, being deleted after completion of the task\n```\n\n  * Create a file `pipeline.yaml`. Add tasks in the `tasks` list: give them names (it can be any name, unique within this sub-pipeline), in the property `taskRef` (\"reference to a task\") put the value from the property `metadata.name` of the tasks, created above:\n\n\n```\napiVersion: tekton.dev/v1kind: Pipelinemetadata:name: pipeline-with-multiple-task-stepsspec:tasks:-name: process-repotaskRef:name: process\n```\n\n  * File structure can be like this:\n\n\n```\n/├── tekton/│  ├── pipeline.yaml│  └── process-repo-task.yaml└── radixconfig.yaml\n```\n\nThis sub-pipeline runs the task `process-repo` (which reference to the task `process` described in the file `process-repo-task.yaml`), which has two steps, as described above.\n  * Commit changes in the repository. Look at the details of a started Radix pipeline job (if the Radix app is connected to the GitHub WebHook, otherwise - start a job manually).\n  * Navigate to the Radix pipeline step \"Run pipeline\", when it is running or completed: the pipelines overview page shows a table with a list of sub-pipelines - in this example it is one sub-pipeline \"pipeline-with-multiple-task-steps\", running for an environment \"dev\", and the sub-pipeline status. ![Sub-pipeline list](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-task-steps-8886def206b75f23a826d8c825a37831.jpg)\n  * Navigate to the sub-pipeline (click on its name in the table row)\n  * The pipeline overview page shows a table with a list of this sub-pipeline's tasks - in this example it is one task \"process-repo\", and the task status. ![Sub-pipeline tasks](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-task-steps-task", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}, {"__id__": "chunk-5061af6ecd572fbdebfe134ad908607a", "__created_at__": 1748191392.2717485, "content": "6def206b75f23a826d8c825a37831.jpg)\n  * Navigate to the sub-pipeline (click on its name in the table row)\n  * The pipeline overview page shows a table with a list of this sub-pipeline's tasks - in this example it is one task \"process-repo\", and the task status. ![Sub-pipeline tasks](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-task-steps-task-list-e0218654879676b2f6cf144980a2b2ae.jpg)\n  * Navigate to the task (click on its name in the table row)\n  * The sub-pipeline task overview page shows a table with a list of this task's steps - in this example these are steps \"clone-repo\", and \"show-repo\", the step statuses and logs of these steps. ![Sub-pipeline task steps](https://radix.equinor.com/assets/images/example-pipeline-with-multiple-task-steps-step-list-a6e405d056094d933783ea2c608598b8.jpg)\n\n\nCopyright © 2025 Equinor ASA", "full_doc_id": "doc-291a487ec4ecebb690f2d434c75bb4f3", "file_path": "unknown_source"}], "matrix": "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"}